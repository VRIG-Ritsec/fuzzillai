std::layout_stride - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: layout_stride From cppreference.com < cpp ‎ | container ‎ | mdspan C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Containers library node-handle (C++17) Sequence array (C++11) vector vector <bool> inplace_vector (C++26) hive (C++26) deque forward_list (C++11) list Associative set multiset map multimap Unordered associative unordered_set (C++11) unordered_multiset (C++11) unordered_map (C++11) unordered_multimap (C++11) Adaptors stack queue priority_queue flat_set (C++23) flat_multiset (C++23) flat_map (C++23) flat_multimap (C++23) Views span (C++20) mdspan (C++23) Tables Iterator invalidation Member function table Non-member function table [edit] std::mdspan Member functions mdspan::mdspan mdspan::operator= Element access mdspan::operator[] Observers mdspan::rank mdspan::rank_dynamic mdspan::static_extent mdspan::extent mdspan::size mdspan::empty mdspan::stride mdspan::extents mdspan::data_handle mdspan::mapping mdspan::accessor mdspan::is_unique mdspan::is_exhaustive mdspan::is_strided mdspan::is_always_unique mdspan::is_always_exhaustive mdspan::is_always_strided Non-member functions swap (std::mdspan) Subviews submdspan (C++26) submdspan_extents (C++26) Helper types and templates extents dextents dims (C++26) default_accessor aligned_accessor (C++26) Layout mapping policies layout_left layout_right layout_stride layout_left_padded (C++26) layout_right_padded (C++26) Subviews helpers full_extent (C++26) strided_slice (C++26) submdspan_mapping_result (C++26) Deduction guides [edit] Defined in header <mdspan> struct layout_stride ; (since C++23) layout_stride is a LayoutMappingPolicy which provides a layout mapping where the strides are user-defined. layout_stride is a TrivialType . (until C++26) layout_stride is TriviallyCopyable , and std:: is_trivially_default_constructible_v < layout_stride > is true . (since C++26) [ edit ] Nested class templates mapping a layout mapping of layout_stride (public member class template) [edit] [ edit ] See also layout_left (C++23) column-major multidimensional array layout mapping policy; leftmost extent has stride 1 (class) [edit] layout_left_padded (C++26) column-major layout mapping policy with padding stride that can be greater than or equal to the leftmost extent (class template) [edit] layout_right (C++23) row-major multidimensional array layout mapping policy; rightmost extent has stride 1 (class) [edit] layout_right_padded (C++26) row-major layout mapping policy with padding stride that can be greater than or equal to the rightmost extent (class template) [edit] Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/container/mdspan/layout_stride&oldid=178061 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Español 日本語 Русский 中文 This page was last modified on 27 November 2024, at 02:28. Privacy policy About cppreference.com Disclaimers