std::erase_if (std::multiset) - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: erase_if (std::multiset) From cppreference.com < cpp ‎ | container ‎ | multiset [edit template] C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Containers library node-handle (C++17) Sequence array (C++11) vector vector <bool> inplace_vector (C++26) hive (C++26) deque forward_list (C++11) list Associative set multiset map multimap Unordered associative unordered_set (C++11) unordered_multiset (C++11) unordered_map (C++11) unordered_multimap (C++11) Adaptors stack queue priority_queue flat_set (C++23) flat_multiset (C++23) flat_map (C++23) flat_multimap (C++23) Views span (C++20) mdspan (C++23) Tables Iterator invalidation Member function table Non-member function table [edit] std::multiset Member functions multiset::multiset multiset::~multiset multiset::operator= multiset::get_allocator Iterators multiset::begin multiset::cbegin (C++11) multiset::end multiset::cend (C++11) multiset::rbegin multiset::crbegin (C++11) multiset::rend multiset::crend (C++11) Capacity multiset::size multiset::max_size multiset::empty Observers multiset::key_comp multiset::value_comp Modifiers multiset::clear multiset::erase multiset::swap multiset::extract (C++17) multiset::merge (C++17) multiset::insert multiset::insert_range (C++23) multiset::emplace (C++11) multiset::emplace_hint (C++11) Lookup multiset::count multiset::find multiset::contains (C++20) multiset::equal_range multiset::lower_bound multiset::upper_bound Non-member functions std::swap (std::multiset) erase_if (std::multiset) (C++20) operator== operator<=> (C++20) operator!= operator< operator> operator<= operator>= (until C++20) (until C++20) (until C++20) (until C++20) (until C++20) Deduction guides (C++17) [edit] Defined in header <set> template < class Key, class Compare, class Alloc, class Pred > std:: multiset < Key, Compare, Alloc > :: size_type erase_if ( std:: multiset < Key, Compare, Alloc > & c, Pred pred ) ; (since C++20) (constexpr since C++26) Erases all elements that satisfy the predicate pred from c . Equivalent to auto old_size = c. size ( ) ; for ( auto first = c. begin ( ) , last = c. end ( ) ; first ! = last ; ) { if ( pred ( * first ) ) first = c. erase ( first ) ; else ++ first ; } return old_size - c. size ( ) ; Contents 1 Parameters 2 Return value 3 Complexity 4 Example 5 See also [ edit ] Parameters c - container from which to erase pred - predicate that returns true if the element should be erased [ edit ] Return value The number of erased elements. [ edit ] Complexity Linear. [ edit ] Example Run this code #include <iostream> #include <set> void println ( auto rem, const auto & container ) { std:: cout << rem << '{' ; for ( char sep [ ] { 0 , ' ' , 0 } ; const auto & item : container ) std:: cout << sep << item, * sep = ',' ; std:: cout << "} \n " ; } int main ( ) { std:: multiset data { 3 , 3 , 4 , 5 , 5 , 6 , 6 , 7 , 2 , 1 , 0 } ; println ( "Original: \n " , data ) ; auto divisible_by_3 = [ ] ( const auto & x ) { return ( x % 3 ) == 0 ; } ; const auto count = std:: erase_if ( data, divisible_by_3 ) ; println ( "Erase all items divisible by 3: \n " , data ) ; std:: cout << count << " items erased. \n " ; } Output: Original: {0, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7} Erase all items divisible by 3: {1, 2, 4, 5, 5, 7} 5 items erased. [ edit ] See also remove remove_if removes elements satisfying specific criteria (function template) [edit] ranges::remove ranges::remove_if (C++20) (C++20) removes elements satisfying specific criteria (algorithm function object) [edit] Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/container/multiset/erase_if&oldid=135725 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español 日本語 Русский 中文 This page was last modified on 28 November 2021, at 07:59. Privacy policy About cppreference.com Disclaimers