Contract support (C++26) - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions Contract support (C++26) From cppreference.com < cpp C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Utilities library Language support Type support (basic types, RTTI) Library feature-test macros (C++20) Program utilities Variadic functions initializer_list (C++11) is_constant_evaluated (C++20) is_within_lifetime (C++26) source_location (C++20) Coroutine support (C++20) Contract support (C++26) Three-way comparison three_way_comparable three_way_comparable_with (C++20) (C++20) strong_ordering (C++20) weak_ordering (C++20) partial_ordering (C++20) common_comparison_category (C++20) compare_three_way_result (C++20) compare_three_way (C++20) strong_order (C++20) weak_order (C++20) partial_order (C++20) compare_strong_order_fallback (C++20) compare_weak_order_fallback (C++20) compare_partial_order_fallback (C++20) is_eq is_lt is_lteq (C++20) (C++20) (C++20) is_neq is_gt is_gteq (C++20) (C++20) (C++20) General utilities Function objects Bit manipulation (C++20) C-style bit manipulation (C++26) bitset hash (C++11) Relational operators (deprecated in C++20) rel_ops::operator!= rel_ops::operator> rel_ops::operator<= rel_ops::operator>= Integer comparison functions cmp_equal cmp_less cmp_less_than (C++20) (C++20) (C++20) cmp_not_equal cmp_greater cmp_greater_than (C++20) (C++20) (C++20) in_range (C++20) Swap and type operations swap ranges::swap (C++20) exchange (C++14) declval (C++11) to_underlying (C++23) forward (C++11) forward_like (C++23) move (C++11) move_if_noexcept (C++11) as_const (C++17) Common vocabulary types pair tuple (C++11) optional (C++17) any (C++17) variant (C++17) tuple_size (C++11) tuple_element (C++11) apply (C++17) make_from_tuple (C++17) expected (C++23) [edit] Contract support Contract-violation information contract_violation (C++26) assertion_kind (C++26) evaluation_semantic (C++26) detection_mode (C++26) Helper functions invoke_default_contract_violation_handler (C++26) [edit] The contract support library defines several types for reporting information about contract violations . [ edit ] Contract-violation information Defined in header <contracts> Defined in namespace std::contracts contract_violation (C++26) the type holding the contract-violation information (class) [edit] assertion_kind (C++26) the kind of the contract assertion violated (enum) [edit] evaluation_semantic (C++26) the evaluation semantic when the contract violation occurs (enum) [edit] detection_mode (C++26) the reason that causes the contract violation (enum) [edit] [ edit ] Helper functions Defined in header <contracts> Defined in namespace std::contracts invoke_default_contract_violation_handler (C++26) invokes the default contract-violation handler (function) [edit] [ edit ] Notes Feature-test macro Value Std Feature __cpp_lib_contracts 202502L (C++26) Contract support library Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/contract&oldid=181860 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 14 March 2025, at 02:03. Privacy policy About cppreference.com Disclaimers