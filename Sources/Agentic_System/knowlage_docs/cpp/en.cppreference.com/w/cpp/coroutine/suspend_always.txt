std::suspend_always - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: suspend_always From cppreference.com < cpp ‎ | coroutine C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Utilities library Language support Type support (basic types, RTTI) Library feature-test macros (C++20) Program utilities Variadic functions initializer_list (C++11) is_constant_evaluated (C++20) is_within_lifetime (C++26) source_location (C++20) Coroutine support (C++20) Contract support (C++26) Three-way comparison three_way_comparable three_way_comparable_with (C++20) (C++20) strong_ordering (C++20) weak_ordering (C++20) partial_ordering (C++20) common_comparison_category (C++20) compare_three_way_result (C++20) compare_three_way (C++20) strong_order (C++20) weak_order (C++20) partial_order (C++20) compare_strong_order_fallback (C++20) compare_weak_order_fallback (C++20) compare_partial_order_fallback (C++20) is_eq is_lt is_lteq (C++20) (C++20) (C++20) is_neq is_gt is_gteq (C++20) (C++20) (C++20) General utilities Function objects Bit manipulation (C++20) C-style bit manipulation (C++26) bitset hash (C++11) Relational operators (deprecated in C++20) rel_ops::operator!= rel_ops::operator> rel_ops::operator<= rel_ops::operator>= Integer comparison functions cmp_equal cmp_less cmp_less_than (C++20) (C++20) (C++20) cmp_not_equal cmp_greater cmp_greater_than (C++20) (C++20) (C++20) in_range (C++20) Swap and type operations swap ranges::swap (C++20) exchange (C++14) declval (C++11) to_underlying (C++23) forward (C++11) forward_like (C++23) move (C++11) move_if_noexcept (C++11) as_const (C++17) Common vocabulary types pair tuple (C++11) optional (C++17) any (C++17) variant (C++17) tuple_size (C++11) tuple_element (C++11) apply (C++17) make_from_tuple (C++17) expected (C++23) [edit] Coroutine support Coroutine traits coroutine_traits (C++20) Coroutine handle coroutine_handle (C++20) No-op coroutines noop_coroutine_promise (C++20) noop_coroutine (C++20) Trivial awaitables suspend_never (C++20) suspend_always (C++20) Range generators generator (C++23) [edit] Defined in header <coroutine> struct suspend_always ; (since C++20) suspend_always is an empty class which can be used to indicate that an await expression always suspends and does not produce a value. Contents 1 Member functions 2 std::suspend_always:: await_ready 3 std::suspend_always:: await_suspend 4 std::suspend_always:: await_resume 4.1 Example 4.2 See also [ edit ] Member functions await_ready indicates that an await expression always suspends (public member function) await_suspend no-op (public member function) await_resume no-op (public member function) std::suspend_always:: await_ready constexpr bool await_ready ( ) const noexcept { return false ; } Always returns false , indicating that an await expression always suspends. std::suspend_always:: await_suspend constexpr void await_suspend ( std:: coroutine_handle <> ) const noexcept { } Does nothing. std::suspend_always:: await_resume constexpr void await_resume ( ) const noexcept { } Does nothing. An await expression does not produce a value if suspend_always is used. [ edit ] Example This section is incomplete Reason: no example [ edit ] See also suspend_never (C++20) indicates that an await-expression should never suspend (class) [edit] Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/coroutine/suspend_always&oldid=177347 " Category : Todo no example Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Español 日本語 Русский 中文 This page was last modified on 30 October 2024, at 14:56. Privacy policy About cppreference.com Disclaimers