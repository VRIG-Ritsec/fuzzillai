std::error_category - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: error_category From cppreference.com < cpp ‎ | error C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Utilities library Language support Type support (basic types, RTTI) Library feature-test macros (C++20) Program utilities Variadic functions initializer_list (C++11) is_constant_evaluated (C++20) is_within_lifetime (C++26) source_location (C++20) Coroutine support (C++20) Contract support (C++26) Three-way comparison three_way_comparable three_way_comparable_with (C++20) (C++20) strong_ordering (C++20) weak_ordering (C++20) partial_ordering (C++20) common_comparison_category (C++20) compare_three_way_result (C++20) compare_three_way (C++20) strong_order (C++20) weak_order (C++20) partial_order (C++20) compare_strong_order_fallback (C++20) compare_weak_order_fallback (C++20) compare_partial_order_fallback (C++20) is_eq is_lt is_lteq (C++20) (C++20) (C++20) is_neq is_gt is_gteq (C++20) (C++20) (C++20) General utilities Function objects Bit manipulation (C++20) C-style bit manipulation (C++26) bitset hash (C++11) Relational operators (deprecated in C++20) rel_ops::operator!= rel_ops::operator> rel_ops::operator<= rel_ops::operator>= Integer comparison functions cmp_equal cmp_less cmp_less_than (C++20) (C++20) (C++20) cmp_not_equal cmp_greater cmp_greater_than (C++20) (C++20) (C++20) in_range (C++20) Swap and type operations swap ranges::swap (C++20) exchange (C++14) declval (C++11) to_underlying (C++23) forward (C++11) forward_like (C++23) move (C++11) move_if_noexcept (C++11) as_const (C++17) Common vocabulary types pair tuple (C++11) optional (C++17) any (C++17) variant (C++17) tuple_size (C++11) tuple_element (C++11) apply (C++17) make_from_tuple (C++17) expected (C++23) [edit] Diagnostics library Exception handling exception uncaught_exception uncaught_exceptions ( until C++20* ) (C++17) exception_ptr (C++11) make_exception_ptr (C++11) current_exception (C++11) rethrow_exception (C++11) nested_exception (C++11) throw_with_nested (C++11) rethrow_if_nested (C++11) Exception handling failures terminate terminate_handler get_terminate (C++11) set_terminate bad_exception unexpected ( until C++17* ) unexpected_handler ( until C++17* ) get_unexpected ( until C++17* ) set_unexpected ( until C++17* ) Error numbers Error codes errno Assertions assert Exception categories logic_error invalid_argument domain_error length_error out_of_range runtime_error range_error overflow_error underflow_error tx_exception (TM TS) System error error_category (C++11) generic_category (C++11) system_category (C++11) error_condition (C++11) errc (C++11) error_code (C++11) system_error (C++11) Stacktrace stacktrace_entry (C++23) basic_stacktrace (C++23) Debugging support is_debugger_present (C++26) breakpoint_if_debugging (C++26) breakpoint (C++26) [edit] std::error_category Member functions error_category::error_category error_category::~error_category error_category::name error_category::default_error_condition error_category::equivalent error_category::message error_category::operator== error_category::operator!= error_category::operator< error_category::operator<=> (until C++20) (until C++20) (C++20) [edit] Defined in header <system_error> class error_category ; (since C++11) std::error_category serves as the base class for specific error category types, such as std::system_category , std::iostream_category , etc. Each specific category class defines the error_code - error_condition mapping and holds the explanatory strings for all error_conditions. The objects of error category classes are treated as singletons, passed by reference. [ edit ] Member functions (constructor) constructs an error_category (public member function) [edit] (destructor) [virtual] destructs an error_category (virtual public member function) [edit] operator= [deleted] not copy assignable (public member function) [edit] name [virtual] obtains the name of the category (virtual public member function) [edit] default_error_condition [virtual] maps error_code to error_condition (virtual public member function) [edit] equivalent [virtual] compares error_code and error_condition for equivalence (virtual public member function) [edit] message [virtual] obtains the explanatory string (virtual public member function) [edit] operator== operator!= operator< operator<=> (removed in C++20) (removed in C++20) (C++20) compares two error categories (function) [edit] [ edit ] Specific error categories generic_category (C++11) identifies the generic error category (function) [edit] system_category (C++11) identifies the operating system error category (function) [edit] iostream_category (C++11) identifies the iostream error category (function) [edit] future_category (C++11) identifies the future error category (function) [edit] [ edit ] See also error_condition (C++11) holds a portable error code (class) [edit] error_code (C++11) holds a platform-dependent error code (class) [edit] Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/error/error_category&oldid=170168 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 14 March 2024, at 01:51. Privacy policy About cppreference.com Disclaimers