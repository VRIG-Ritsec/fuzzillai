std::error_code - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: error_code From cppreference.com < cpp ‎ | error C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Utilities library Language support Type support (basic types, RTTI) Library feature-test macros (C++20) Program utilities Variadic functions initializer_list (C++11) is_constant_evaluated (C++20) is_within_lifetime (C++26) source_location (C++20) Coroutine support (C++20) Contract support (C++26) Three-way comparison three_way_comparable three_way_comparable_with (C++20) (C++20) strong_ordering (C++20) weak_ordering (C++20) partial_ordering (C++20) common_comparison_category (C++20) compare_three_way_result (C++20) compare_three_way (C++20) strong_order (C++20) weak_order (C++20) partial_order (C++20) compare_strong_order_fallback (C++20) compare_weak_order_fallback (C++20) compare_partial_order_fallback (C++20) is_eq is_lt is_lteq (C++20) (C++20) (C++20) is_neq is_gt is_gteq (C++20) (C++20) (C++20) General utilities Function objects Bit manipulation (C++20) C-style bit manipulation (C++26) bitset hash (C++11) Relational operators (deprecated in C++20) rel_ops::operator!= rel_ops::operator> rel_ops::operator<= rel_ops::operator>= Integer comparison functions cmp_equal cmp_less cmp_less_than (C++20) (C++20) (C++20) cmp_not_equal cmp_greater cmp_greater_than (C++20) (C++20) (C++20) in_range (C++20) Swap and type operations swap ranges::swap (C++20) exchange (C++14) declval (C++11) to_underlying (C++23) forward (C++11) forward_like (C++23) move (C++11) move_if_noexcept (C++11) as_const (C++17) Common vocabulary types pair tuple (C++11) optional (C++17) any (C++17) variant (C++17) tuple_size (C++11) tuple_element (C++11) apply (C++17) make_from_tuple (C++17) expected (C++23) [edit] Diagnostics library Exception handling exception uncaught_exception uncaught_exceptions ( until C++20* ) (C++17) exception_ptr (C++11) make_exception_ptr (C++11) current_exception (C++11) rethrow_exception (C++11) nested_exception (C++11) throw_with_nested (C++11) rethrow_if_nested (C++11) Exception handling failures terminate terminate_handler get_terminate (C++11) set_terminate bad_exception unexpected ( until C++17* ) unexpected_handler ( until C++17* ) get_unexpected ( until C++17* ) set_unexpected ( until C++17* ) Error numbers Error codes errno Assertions assert Exception categories logic_error invalid_argument domain_error length_error out_of_range runtime_error range_error overflow_error underflow_error tx_exception (TM TS) System error error_category (C++11) generic_category (C++11) system_category (C++11) error_condition (C++11) errc (C++11) error_code (C++11) system_error (C++11) Stacktrace stacktrace_entry (C++23) basic_stacktrace (C++23) Debugging support is_debugger_present (C++26) breakpoint_if_debugging (C++26) breakpoint (C++26) [edit] std::error_code Member functions error_code::error_code error_code::operator= error_code::assign Modifiers error_code::clear Observers error_code::value error_code::category error_code::default_error_condition error_code::message error_code::operator bool Non-member functions operator== operator!= operator< operator<=> (until C++20) (until C++20) (C++20) operator<< Helper classes is_error_code_enum hash <std::error_code> [edit] Defined in header <system_error> class error_code ; (since C++11) std::error_code represents a platform-dependent error code value. Each std::error_code object holds an error code value originating from the operating system or some low-level interface and a pointer to an object of type std::error_category , which corresponds to the said interface. The error code values are not required to be unique across different error categories. Contents 1 Member functions 1.1 Modifiers 1.2 Observers 2 Non-member functions 3 Helper classes 4 See also [ edit ] Member functions (constructor) constructs an error code (public member function) [edit] operator= assigns another error code (public member function) [edit] assign assigns another error code (public member function) [edit] Modifiers clear sets the error_code to value ​ 0 ​ in system_category (public member function) [edit] Observers value obtains the value of the error_code (public member function) [edit] category obtains the error_category for this error_code (public member function) [edit] default_error_condition obtains the error_condition for this error_code (public member function) [edit] message obtains the explanatory string for this error_code (public member function) [edit] operator bool checks if the value is non-zero (public member function) [edit] [ edit ] Non-member functions operator== operator!= operator< operator<=> (removed in C++20) (removed in C++20) (C++20) compares two error_code s (function) [edit] operator<< outputs the value and the category name to an output stream (function) [edit] [ edit ] Helper classes is_error_code_enum (C++11) identifies a class as an error_code enumeration (class template) [edit] std::hash <std::error_code> (C++11) hash support for std::error_code (class template specialization) [edit] [ edit ] See also error_condition (C++11) holds a portable error code (class) [edit] error_category (C++11) base class for error categories (class) [edit] make_error_code (std::errc) (C++11) creates error code value for errc enum e (function) [edit] Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/error/error_code&oldid=163544 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 24 November 2023, at 08:30. Privacy policy About cppreference.com Disclaimers