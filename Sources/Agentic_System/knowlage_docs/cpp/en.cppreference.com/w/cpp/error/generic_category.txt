std::generic_category - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: generic_category From cppreference.com < cpp ‎ | error C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Diagnostics library Exception handling exception uncaught_exception uncaught_exceptions ( until C++20* ) (C++17) exception_ptr (C++11) make_exception_ptr (C++11) current_exception (C++11) rethrow_exception (C++11) nested_exception (C++11) throw_with_nested (C++11) rethrow_if_nested (C++11) Exception handling failures terminate terminate_handler get_terminate (C++11) set_terminate bad_exception unexpected ( until C++17* ) unexpected_handler ( until C++17* ) get_unexpected ( until C++17* ) set_unexpected ( until C++17* ) Error numbers Error codes errno Assertions assert Exception categories logic_error invalid_argument domain_error length_error out_of_range runtime_error range_error overflow_error underflow_error tx_exception (TM TS) System error error_category (C++11) generic_category (C++11) system_category (C++11) error_condition (C++11) errc (C++11) error_code (C++11) system_error (C++11) Stacktrace stacktrace_entry (C++23) basic_stacktrace (C++23) Debugging support is_debugger_present (C++26) breakpoint_if_debugging (C++26) breakpoint (C++26) [edit] Defined in header <system_error> const std:: error_category & generic_category ( ) noexcept ; (since C++11) Obtains a reference to the static error category object for generic errors. The object is required to override the virtual function error_category :: name ( ) to return a pointer to the string "generic" . It is used to identify error conditions that correspond to the POSIX errno codes. Contents 1 Parameters 2 Return value 3 Example 4 See also [ edit ] Parameters (none) [ edit ] Return value A reference to the static object of unspecified runtime type, derived from std::error_category . [ edit ] Example Run this code #include <cerrno> #include <iostream> #include <string> #include <system_error> int main ( ) { std:: error_condition econd = std :: generic_category ( ) . default_error_condition ( EDOM ) ; std:: cout << "Category: " << econd. category ( ) . name ( ) << ' \n ' << "Value: " << econd. value ( ) << ' \n ' << "Message: " << econd. message ( ) << ' \n ' ; } Output: Category: generic Value: 33 Message: Numerical argument out of domain [ edit ] See also system_category (C++11) identifies the operating system error category (function) [edit] errc (C++11) the std::error_condition enumeration listing all standard <cerrno> macro constants (class) [edit] Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/error/generic_category&oldid=157641 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 1 September 2023, at 01:23. Privacy policy About cppreference.com Disclaimers