std::get_terminate - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: get_terminate From cppreference.com < cpp ‎ | error C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Diagnostics library Exception handling exception uncaught_exception uncaught_exceptions ( until C++20* ) (C++17) exception_ptr (C++11) make_exception_ptr (C++11) current_exception (C++11) rethrow_exception (C++11) nested_exception (C++11) throw_with_nested (C++11) rethrow_if_nested (C++11) Exception handling failures terminate terminate_handler get_terminate (C++11) set_terminate bad_exception unexpected ( until C++17* ) unexpected_handler ( until C++17* ) get_unexpected ( until C++17* ) set_unexpected ( until C++17* ) Error numbers Error codes errno Assertions assert Exception categories logic_error invalid_argument domain_error length_error out_of_range runtime_error range_error overflow_error underflow_error tx_exception (TM TS) System error error_category (C++11) generic_category (C++11) system_category (C++11) error_condition (C++11) errc (C++11) error_code (C++11) system_error (C++11) Stacktrace stacktrace_entry (C++23) basic_stacktrace (C++23) Debugging support is_debugger_present (C++26) breakpoint_if_debugging (C++26) breakpoint (C++26) [edit] Defined in header <exception> std:: terminate_handler get_terminate ( ) noexcept ; (since C++11) Returns the currently installed std::terminate_handler , which may be a null pointer. This function is thread-safe. Prior call to std::set_terminate synchronizes-with (see std::memory_order ) this function. Contents 1 Parameters 2 Return value 3 Example 4 See also [ edit ] Parameters (none) [ edit ] Return value The currently installed std::terminate_handler . [ edit ] Example This section is incomplete Reason: no example [ edit ] See also terminate_handler the type of the function called by std::terminate (typedef) [edit] set_terminate changes the function to be called by std::terminate (function) [edit] Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/error/get_terminate&oldid=173428 " Category : Todo no example Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 9 July 2024, at 11:22. Privacy policy About cppreference.com Disclaimers