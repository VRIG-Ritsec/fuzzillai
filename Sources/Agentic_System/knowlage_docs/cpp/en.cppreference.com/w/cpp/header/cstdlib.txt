Standard library header <cstdlib> - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions Standard library header <cstdlib> From cppreference.com < cpp â€Ž | header C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Standard library headers Language support <cfloat> <climits> <compare> (C++20) <contracts> (C++26) <coroutine> (C++20) <csetjmp> <csignal> <cstdarg> <cstddef> <cstdint> (C++11) <cstdlib> <exception> <initializer_list> (C++11) <limits> <new> <source_location> (C++20) <stdfloat> (C++23) <typeinfo> <version> (C++20) Concepts <concepts> (C++20) Diagnostics <cassert> <cerrno> <debugging> (C++26) <stacktrace> (C++23) <stdexcept> <system_error> (C++11) Memory management <memory> <memory_resource> (C++17) <scoped_allocator> (C++11) Metaprogramming <type_traits> (C++11) <ratio> (C++11) General utilities <any> (C++17) <bitset> <bit> (C++20) <charconv> (C++17) <expected> (C++23) <format> (C++20) <functional> <optional> (C++17) <stdbit.h> (C++26) <tuple> (C++11) <typeindex> (C++11) <utility> <variant> (C++17) Containers <array> (C++11) <deque> <flat_map> (C++23) <flat_set> (C++23) <forward_list> (C++11) <hive> (C++26) <inplace_vector> (C++26) <list> <map> <mdspan> (C++23) <queue> <set> <span> (C++20) <stack> <unordered_map> (C++11) <unordered_set> (C++11) <vector> Iterators <iterator> Ranges <generator> (C++23) <ranges> (C++20) Algorithms <algorithm> <numeric> Strings <cctype> <cstring> <cuchar> (C++11) <cwchar> <cwctype> <string_view> (C++17) <string> Text processing <clocale> <codecvt> ( C++11/17/26* ) <locale> <regex> (C++11) <text_encoding> (C++26) Numerics <cfenv> (C++11) <cmath> <complex> <linalg> (C++26) <numbers> (C++20) <random> (C++11) <simd> (C++26) <stdckdint.h> (C++26) <valarray> Time <chrono> (C++11) <ctime> C compatibility <ccomplex> ( C++11/17/20* ) <ciso646> (until C++20) <cstdalign> ( C++11/17/20* ) <cstdbool> ( C++11/17/20* ) <ctgmath> ( C++11/17/20* ) Input/output <cinttypes> (C++11) <cstdio> <filesystem> (C++17) <fstream> <iomanip> <iosfwd> <iostream> <ios> <istream> <ostream> <print> (C++23) <spanstream> (C++23) <sstream> <streambuf> <strstream> ( C++98/26* ) <syncstream> (C++20) Concurrency support <atomic> (C++11) <barrier> (C++20) <condition_variable> (C++11) <future> (C++11) <hazard_pointer> (C++26) <latch> (C++20) <mutex> (C++11) <rcu> (C++26) <semaphore> (C++20) <shared_mutex> (C++14) <stdatomic.h> (C++23) <stop_token> (C++20) <thread> (C++11) Execution support <execution> (C++17) [edit] This header was originally in the C standard library as <stdlib.h> . This header provides miscellaneous utilities. Symbols defined here are used by several library components. Contents 1 Types 2 Macro constants 3 Functions 3.1 Process control 3.2 Memory management 3.3 Numeric string conversion 3.4 Wide string manipulation 3.5 Miscellaneous algorithms and math 4 Synopsis 5 Defect reports 6 See also Types div_t structure type, returned by std::div (typedef) [edit] ldiv_t structure type, returned by std::ldiv (typedef) [edit] lldiv_t (C++11) structure type, returned by std::lldiv (typedef) [edit] size_t unsigned integer type returned by the sizeof operator (typedef) [edit] Macro constants EXIT_SUCCESS EXIT_FAILURE indicates program execution status (macro constant) [edit] MB_CUR_MAX maximum number of bytes in a multibyte character with the current locale (macro constant) [edit] NULL implementation-defined null pointer constant (macro constant) [edit] RAND_MAX maximum possible value generated by std::rand (macro constant) [edit] Functions Process control abort causes abnormal program termination (without cleaning up) (function) [edit] exit causes normal program termination with cleaning up (function) [edit] quick_exit (C++11) causes quick program termination without completely cleaning up (function) [edit] _Exit (C++11) causes normal program termination without cleaning up (function) [edit] atexit registers a function to be called on std::exit() invocation (function) [edit] at_quick_exit (C++11) registers a function to be called on std::quick_exit invocation (function) [edit] system calls the host environment's command processor (function) [edit] getenv access to the list of environment variables (function) [edit] Memory management malloc allocates memory (function) [edit] aligned_alloc (C++17) allocates aligned memory (function) [edit] calloc allocates and zeroes memory (function) [edit] realloc expands or shrinks previously allocated memory block (function) [edit] free deallocates previously allocated memory (function) [edit] Numeric string conversion atof converts a byte string to a floating point value (function) [edit] atoi atol atoll (C++11) converts a byte string to an integer value (function) [edit] strtol strtoll (C++11) converts a byte string to an integer value (function) [edit] strtoul strtoull (C++11) converts a byte string to an unsigned integer value (function) [edit] strtof strtod strtold converts a byte string to a floating-point value (function) [edit] Wide string manipulation mblen returns the number of bytes in the next multibyte character (function) [edit] mbtowc converts the next multibyte character to wide character (function) [edit] wctomb converts a wide character to its multibyte representation (function) [edit] mbstowcs converts a narrow multibyte character string to wide string (function) [edit] wcstombs converts a wide string to narrow multibyte character string (function) [edit] Miscellaneous algorithms and math rand generates a pseudo-random number (function) [edit] srand seeds pseudo-random number generator (function) [edit] qsort sorts a range of elements with unspecified type (function) [edit] bsearch searches an array for an element of unspecified type (function) [edit] abs (int) labs llabs (C++11) computes absolute value of an integral value ( \(\small{|x|}\) |x| ) (function) [edit] div (int) ldiv lldiv (C++11) computes quotient and remainder of integer division (function) [edit] [ edit ] Synopsis namespace std { using size_t = /* see description */ ; // freestanding using div_t = /* see description */ ; // freestanding using ldiv_t = /* see description */ ; // freestanding using lldiv_t = /* see description */ ; // freestanding } #define NULL /* see description */ // freestanding #define EXIT_FAILURE /* see description */ // freestanding #define EXIT_SUCCESS /* see description */ // freestanding #define RAND_MAX /* see description */ #define MB_CUR_MAX /* see description */ namespace std { // Exposition-only function type aliases extern "C" using /* c-atexit-handler */ = void ( ) ; // exposition only extern "C++" using /* atexit-handler */ = void ( ) ; // exposition only extern "C" using /* c-compare-pred */ = // exposition only int ( const void * , const void * ) ; extern "C++" using /* compare-pred */ = // exposition only int ( const void * , const void * ) ; // start and termination [ [ noreturn ] ] void abort ( ) noexcept ; // freestanding int atexit ( /* c-atexit-handler */ * func ) noexcept ; // freestanding int atexit ( /* atexit-handler */ * func ) noexcept ; // freestanding int at_quick_exit ( /* c-atexit-handler */ * func ) noexcept ; // freestanding int at_quick_exit ( /* atexit-handler */ * func ) noexcept ; // freestanding [ [ noreturn ] ] void exit ( int status ) ; // freestanding [ [ noreturn ] ] void _Exit ( int status ) noexcept ; // freestanding [ [ noreturn ] ] void quick_exit ( int status ) noexcept ; // freestanding char * getenv ( const char * name ) ; int system ( const char * string ) ; // C library memory allocation void * aligned_alloc ( size_t alignment, size_t size ) ; void * calloc ( size_t nmemb, size_t size ) ; void free ( void * ptr ) ; void * malloc ( size_t size ) ; void * realloc ( void * ptr, size_t size ) ; double atof ( const char * nptr ) ; int atoi ( const char * nptr ) ; long int atol ( const char * nptr ) ; long long int atoll ( const char * nptr ) ; double strtod ( const char * nptr, char ** endptr ) ; float strtof ( const char * nptr, char ** endptr ) ; long double strtold ( const char * nptr, char ** endptr ) ; long int strtol ( const char * nptr, char ** endptr, int base ) ; long long int strtoll ( const char * nptr, char ** endptr, int base ) ; unsigned long int strtoul ( const char * nptr, char ** endptr, int base ) ; unsigned long long int strtoull ( const char * nptr, char ** endptr, int base ) ; // multibyte / wide string and character conversion functions int mblen ( const char * s, size_t n ) ; int mbtowc ( wchar_t * pwc, const char * s, size_t n ) ; int wctomb ( char * s, wchar_t wchar ) ; size_t mbstowcs ( wchar_t * pwcs, const char * s, size_t n ) ; size_t wcstombs ( char * s, const wchar_t * pwcs, size_t n ) ; // C standard library algorithms void * bsearch ( const void * key, const void * base, // freestanding size_t nmemb, size_t size, /* c-compare-pred */ * compar ) ; void * bsearch ( const void * key, const void * base, // freestanding size_t nmemb, size_t size, /* compare-pred */ * compar ) ; void qsort ( void * base, size_t nmemb, size_t size, // freestanding /* c-compare-pred */ * compar ) ; void qsort ( void * base, size_t nmemb, size_t size, // freestanding /* compare-pred */ * compar ) ; // low-quality random number generation int rand ( ) ; void srand ( unsigned int seed ) ; // absolute values constexpr int abs ( int j ) ; // freestanding constexpr long int abs ( long int j ) ; // freestanding constexpr long long int abs ( long long int j ) ; // freestanding constexpr /* floating-point-type */ abs ( /* floating-point-type */ j ) ; // freestanding-deleted constexpr long int labs ( long int j ) ; // freestanding constexpr long long int llabs ( long long int j ) ; // freestanding constexpr div_t div ( int numer, int denom ) ; // freestanding constexpr ldiv_t div ( long int numer, long int denom ) ; // freestanding constexpr lldiv_t div ( long long int numer, long long int denom ) ; // freestanding constexpr ldiv_t ldiv ( long int numer, long int denom ) ; // freestanding constexpr lldiv_t lldiv ( long long int numer, long long int denom ) ; // freestanding } [ edit ] Defect reports The following behavior-changing defect reports were applied retroactively to previously published C++ standards. DR Applied to Behavior as published Correct behavior LWG 286 C++98 the definition of size_t was not provided in <cstdlib> provided [ edit ] See also Program support utilities Pseudo-random number generation Common mathematical functions Mathematical special functions C memory management library Null-terminated byte strings Null-terminated multibyte strings Algorithms library Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/header/cstdlib&oldid=158952 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages EspaÃ±ol æ—¥æœ¬èªž ä¸­æ–‡ This page was last modified on 13 September 2023, at 00:53. Privacy policy About cppreference.com Disclaimers