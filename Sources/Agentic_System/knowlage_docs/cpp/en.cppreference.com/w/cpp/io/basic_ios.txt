std::basic_ios - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: basic_ios From cppreference.com < cpp ‎ | io C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Input/output library I/O manipulators Print functions (C++23) C-style I/O Buffers basic_streambuf basic_filebuf basic_stringbuf basic_spanbuf (C++23) strstreambuf ( C++98/26* ) basic_syncbuf (C++20) Streams Abstractions ios_base basic_ios basic_istream basic_ostream basic_iostream File I/O basic_ifstream basic_ofstream basic_fstream String I/O basic_istringstream basic_ostringstream basic_stringstream Array I/O basic_ispanstream (C++23) basic_ospanstream (C++23) basic_spanstream (C++23) istrstream ( C++98/26* ) ostrstream ( C++98/26* ) strstream ( C++98/26* ) Synchronized Output basic_osyncstream (C++20) Types streamoff streamsize fpos Error category interface iostream_category (C++11) io_errc (C++11) [edit] std::basic_ios Member functions basic_ios::basic_ios basic_ios::~basic_ios State functions basic_ios::good basic_ios::eof basic_ios::fail basic_ios::bad basic_ios::operator! basic_ios::operator bool basic_ios::rdstate basic_ios::setstate basic_ios::clear Formatting basic_ios::copyfmt basic_ios::fill Miscellaneous basic_ios::exceptions basic_ios::imbue basic_ios::rdbuf basic_ios::tie basic_ios::narrow basic_ios::widen Protected member functions basic_ios::init basic_ios::move (C++11) basic_ios::swap (C++11) basic_ios::set_rdbuf (C++11) [edit] Defined in header <ios> template < class CharT, class Traits = std:: char_traits < CharT > > class basic_ios : public std:: ios_base The class std::basic_ios provides facilities for interfacing with objects that have std::basic_streambuf interface. Several std::basic_ios objects can refer to one actual std::basic_streambuf object. Inheritance diagram Several typedefs for common character types are provided: Defined in header <ios> Type Definition std::ios std :: basic_ios < char > std::wios std :: basic_ios < wchar_t > Contents 1 Member types 2 Public member functions 2.1 State functions 2.2 Formatting 2.3 Miscellaneous 3 Protected member functions 4 Inherited from std:: ios_base 4.1 Member functions 4.1.1 Formatting 4.1.2 Locales 4.1.3 Internal extensible array 4.1.4 Miscellaneous 4.1.5 Member classes 4.2 Member types and constants 4.3 Notes [ edit ] Member types Member type Definition char_type CharT [edit] traits_type Traits ; the program is ill-formed if Traits::char_type is not CharT . [edit] int_type Traits::int_type [edit] pos_type Traits::pos_type [edit] off_type Traits::off_type [edit] [ edit ] Public member functions (constructor) constructs the object (public member function) [edit] (destructor) [virtual] destructs the object (virtual public member function) [edit] operator= the copy assignment operator is deleted (public member function) State functions good checks if no error has occurred i.e. I/O operations are available (public member function) [edit] eof checks if end-of-file has been reached (public member function) [edit] fail checks if an error has occurred (public member function) [edit] bad checks if a non-recoverable error has occurred (public member function) [edit] operator! checks if an error has occurred (synonym of fail() ) (public member function) [edit] operator bool checks if no error has occurred (synonym of ! fail() ) (public member function) [edit] rdstate returns state flags (public member function) [edit] setstate sets state flags (public member function) [edit] clear modifies state flags (public member function) [edit] Formatting copyfmt copies formatting information (public member function) [edit] fill manages the fill character (public member function) [edit] Miscellaneous exceptions manages exception mask (public member function) [edit] imbue sets the locale (public member function) [edit] rdbuf manages associated stream buffer (public member function) [edit] tie manages tied stream (public member function) [edit] narrow narrows characters (public member function) [edit] widen widens characters (public member function) [edit] [ edit ] Protected member functions init initializes a default-constructed std::basic_ios (protected member function) [edit] move (C++11) moves from another std::basic_ios except for rdbuf (protected member function) [edit] swap (C++11) swaps with another std::basic_ios except for rdbuf (protected member function) [edit] set_rdbuf replaces the rdbuf without clearing its error state (protected member function) [edit] Inherited from std:: ios_base Member functions Formatting flags manages format flags (public member function of std::ios_base ) [edit] setf sets specific format flag (public member function of std::ios_base ) [edit] unsetf clears specific format flag (public member function of std::ios_base ) [edit] precision manages decimal precision of floating point operations (public member function of std::ios_base ) [edit] width manages field width (public member function of std::ios_base ) [edit] Locales imbue sets locale (public member function of std::ios_base ) [edit] getloc returns current locale (public member function of std::ios_base ) [edit] Internal extensible array xalloc [static] returns a program-wide unique integer that is safe to use as index to pword() and iword() (public static member function of std::ios_base ) [edit] iword resizes the private storage if necessary and access to the long element at the given index (public member function of std::ios_base ) [edit] pword resizes the private storage if necessary and access to the void * element at the given index (public member function of std::ios_base ) [edit] Miscellaneous register_callback registers event callback function (public member function of std::ios_base ) [edit] sync_with_stdio [static] sets whether C++ and C I/O libraries are interoperable (public static member function of std::ios_base ) [edit] Member classes failure stream exception (public member class of std::ios_base ) [edit] Init initializes standard stream objects (public member class of std::ios_base ) [edit] Member types and constants Type Explanation openmode stream open mode type The following constants are also defined: Constant Explanation [edit] app seek to the end of stream before each write [edit] binary open in binary mode [edit] in open for reading [edit] out open for writing [edit] trunc discard the contents of the stream when opening [edit] ate seek to the end of stream immediately after open [edit] noreplace (C++23) open in exclusive mode [edit] (typedef) [edit] fmtflags formatting flags type The following constants are also defined: Constant Explanation [edit] dec use decimal base for integer I/O: see std::dec [edit] oct use octal base for integer I/O: see std::oct [edit] hex use hexadecimal base for integer I/O: see std::hex [edit] basefield dec | oct | hex . Useful for masking operations [edit] left left adjustment (adds fill characters to the right): see std::left [edit] right right adjustment (adds fill characters to the left): see std::right [edit] internal internal adjustment (adds fill characters to the internal designated point): see std::internal [edit] adjustfield left | right | internal . Useful for masking operations [edit] scientific generate floating point types using scientific notation, or hex notation if combined with fixed : see std::scientific [edit] fixed generate floating point types using fixed notation, or hex notation if combined with scientific : see std::fixed [edit] floatfield scientific | fixed . Useful for masking operations [edit] boolalpha insert and extract bool type in alphanumeric format: see std::boolalpha [edit] showbase generate a prefix indicating the numeric base for integer output, require the currency indicator in monetary I/O: see std::showbase [edit] showpoint generate a decimal-point character unconditionally for floating-point number output: see std::showpoint [edit] showpos generate a + character for non-negative numeric output: see std::showpos [edit] skipws skip leading whitespace before certain input operations: see std::skipws [edit] unitbuf flush the output after each output operation: see std::unitbuf [edit] uppercase replace certain lowercase letters with their uppercase equivalents in certain output operations: see std::uppercase [edit] (typedef) [edit] iostate state of the stream type The following constants are also defined: Constant Explanation [edit] goodbit no error [edit] badbit irrecoverable stream error [edit] failbit input/output operation failed (formatting or extraction error) [edit] eofbit associated input sequence has reached end-of-file [edit] (typedef) [edit] seekdir seeking direction type The following constants are also defined: Constant Explanation [edit] beg the beginning of a stream [edit] end the ending of a stream [edit] cur the current position of stream position indicator [edit] (typedef) [edit] event specifies event type (enum) [edit] event_callback callback function type (typedef) [edit] [ edit ] Notes Straightforward implementation of std::basic_ios stores only the following members (which all depend on the template parameters and thus cannot be part of std::ios_base ): the fill character (see fill() ) the tied stream pointer (see tie() ) the associated stream buffer pointer (see rdbuf() ). Actual implementations vary: Microsoft Visual Studio stores just those three members. LLVM libc++ stores 1 less member: it maintains the rdbuf pointer as a void * member of ios_base . GNU libstdc++ stores 4 additional members: three cached facets and a flag to indicate that fill was initialized. Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/io/basic_ios&oldid=158253 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 8 September 2023, at 10:58. Privacy policy About cppreference.com Disclaimers