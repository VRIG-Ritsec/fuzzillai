C-style file input/output - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions C-style file input/output From cppreference.com < cpp ‎ | io C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Input/output library I/O manipulators Print functions (C++23) C-style I/O Buffers basic_streambuf basic_filebuf basic_stringbuf basic_spanbuf (C++23) strstreambuf ( C++98/26* ) basic_syncbuf (C++20) Streams Abstractions ios_base basic_ios basic_istream basic_ostream basic_iostream File I/O basic_ifstream basic_ofstream basic_fstream String I/O basic_istringstream basic_ostringstream basic_stringstream Array I/O basic_ispanstream (C++23) basic_ospanstream (C++23) basic_spanstream (C++23) istrstream ( C++98/26* ) ostrstream ( C++98/26* ) strstream ( C++98/26* ) Synchronized Output basic_osyncstream (C++20) Types streamoff streamsize fpos Error category interface iostream_category (C++11) io_errc (C++11) [edit] C-style I/O Types and objects FILE fpos_t stdin stdout stderr Functions File access fopen freopen fclose fflush fwide setbuf setvbuf Direct input/output fread fwrite Unformatted input/output fgetc getc fgets fputc putc fputs getchar gets (until C++14) putchar puts ungetc fgetwc getwc fgetws fputwc putwc fputws getwchar putwchar ungetwc Formatted input scanf fscanf sscanf vscanf vfscanf vsscanf (C++11) (C++11) (C++11) wscanf fwscanf swscanf vwscanf vfwscanf vswscanf (C++11) (C++11) (C++11) Formatted output printf fprintf sprintf snprintf (C++11) vprintf vfprintf vsprintf vsnprintf (C++11) wprintf fwprintf swprintf vwprintf vfwprintf vswprintf File positioning ftell fgetpos fseek fsetpos rewind Error handling clearerr feof ferror perror Operations on files remove rename tmpfile tmpnam [edit] The C I/O subset of the C++ standard library implements C-style stream input/output operations. The <cstdio> header provides generic file operation support and supplies functions with narrow and multibyte character input/output capabilities, and the <cwchar> header provides functions with wide character input/output capabilities. C streams are denoted by objects of type std::FILE that can only be accessed and manipulated through pointers of type std:: FILE * . Each C stream is associated with an external physical device (file, standard input stream, printer, serial port, etc). Contents 1 Types 2 Predefined standard streams 3 Functions 3.1 File access 3.2 Direct input/output 3.3 Unformatted input/output 3.3.1 Byte/multibyte character 3.3.2 Wide character 3.4 Formatted input/output 3.4.1 Byte/multibyte character 3.4.2 Wide character 3.5 File positioning 3.6 Error handling 3.7 Operations on files 4 Macro constants 5 See also [ edit ] Types Defined in header <cstdio> FILE object type, capable of holding all information needed to control a C I/O stream (typedef) [edit] fpos_t complete non-array object type, capable of uniquely specifying a position in a file, including its multibyte parse state (typedef) [edit] [ edit ] Predefined standard streams Defined in header <cstdio> stdin stdout stderr expression of type FILE * associated with the input stream expression of type FILE * associated with the output stream expression of type FILE * associated with the error output stream (macro constant) [edit] [ edit ] Functions Defined in header <cstdio> File access fopen opens a file (function) [edit] freopen open an existing stream with a different name (function) [edit] fclose closes a file (function) [edit] fflush synchronizes an output stream with the actual file (function) [edit] fwide switches a file stream between wide character I/O and narrow character I/O (function) [edit] setbuf sets the buffer for a file stream (function) [edit] setvbuf sets the buffer and its size for a file stream (function) [edit] Direct input/output fread reads from a file (function) [edit] fwrite writes to a file (function) [edit] Unformatted input/output Byte/multibyte character fgetc getc gets a character from a file stream (function) [edit] fgets gets a character string from a file stream (function) [edit] fputc putc writes a character to a file stream (function) [edit] fputs writes a character string to a file stream (function) [edit] getchar reads a character from stdin (function) [edit] gets (deprecated in C++11) (removed in C++14) reads a character string from stdin (function) [edit] putchar writes a character to stdout (function) [edit] puts writes a character string to stdout (function) [edit] ungetc puts a character back into a file stream (function) [edit] Wide character fgetwc getwc gets a wide character from a file stream (function) [edit] fgetws gets a wide string from a file stream (function) [edit] fputwc putwc writes a wide character to a file stream (function) [edit] fputws writes a wide string to a file stream (function) [edit] getwchar reads a wide character from stdin (function) [edit] putwchar writes a wide character to stdout (function) [edit] ungetwc puts a wide character back into a file stream (function) [edit] Formatted input/output Byte/multibyte character scanf fscanf sscanf reads formatted input from stdin , a file stream or a buffer (function) [edit] vscanf vfscanf vsscanf (C++11) (C++11) (C++11) reads formatted input from stdin , a file stream or a buffer using variable argument list (function) [edit] printf fprintf sprintf snprintf (C++11) prints formatted output to stdout , a file stream or a buffer (function) [edit] vprintf vfprintf vsprintf vsnprintf (C++11) prints formatted output to stdout , a file stream or a buffer using variable argument list (function) [edit] Wide character wscanf fwscanf swscanf reads formatted wide character input from stdin , a file stream or a buffer (function) [edit] vwscanf vfwscanf vswscanf (C++11) (C++11) (C++11) reads formatted wide character input from stdin , a file stream or a buffer using variable argument list (function) [edit] wprintf fwprintf swprintf prints formatted wide character output to stdout , a file stream or a buffer (function) [edit] vwprintf vfwprintf vswprintf prints formatted wide character output to stdout , a file stream or a buffer using variable argument list (function) [edit] File positioning ftell returns the current file position indicator (function) [edit] fgetpos gets the file position indicator (function) [edit] fseek moves the file position indicator to a specific location in a file (function) [edit] fsetpos moves the file position indicator to a specific location in a file (function) [edit] rewind moves the file position indicator to the beginning in a file (function) [edit] Error handling clearerr clears errors (function) [edit] feof checks for the end-of-file (function) [edit] ferror checks for a file error (function) [edit] perror displays a character string corresponding of the current error to stderr (function) [edit] Operations on files remove erases a file (function) [edit] rename renames a file (function) [edit] tmpfile creates and opens a temporary, auto-removing file (function) [edit] tmpnam returns a unique filename (function) [edit] [ edit ] Macro constants Defined in header <cstdio> EOF integer constant expression of type int and negative value (macro constant) FOPEN_MAX number of files that can be open simultaneously (macro constant) FILENAME_MAX size needed for an array of char to hold the longest supported file name (macro constant) BUFSIZ size of the buffer used by std::setbuf (macro constant) _IOFBF _IOLBF _IONBF argument to std::setbuf indicating fully buffered I/O argument to std::setbuf indicating line buffered I/O argument to std::setbuf indicating unbuffered I/O (macro constant) SEEK_SET SEEK_CUR SEEK_END argument to std::fseek indicating seeking from beginning of the file argument to std::fseek indicating seeking from the current file position argument to std::fseek indicating seeking from end of the file (macro constant) TMP_MAX maximum number of unique filenames that is guaranteed to be generatable by std::tmpnam (macro constant) L_tmpnam size needed for an array of char to hold the result of std::tmpnam (macro constant) [ edit ] See also C documentation for File input/output Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/io/c&oldid=165230 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Česky Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 7 December 2023, at 08:51. Privacy policy About cppreference.com Disclaimers