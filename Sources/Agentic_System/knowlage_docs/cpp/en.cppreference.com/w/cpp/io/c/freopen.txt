std::freopen - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: freopen From cppreference.com < cpp ‎ | io ‎ | c C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Input/output library I/O manipulators Print functions (C++23) C-style I/O Buffers basic_streambuf basic_filebuf basic_stringbuf basic_spanbuf (C++23) strstreambuf ( C++98/26* ) basic_syncbuf (C++20) Streams Abstractions ios_base basic_ios basic_istream basic_ostream basic_iostream File I/O basic_ifstream basic_ofstream basic_fstream String I/O basic_istringstream basic_ostringstream basic_stringstream Array I/O basic_ispanstream (C++23) basic_ospanstream (C++23) basic_spanstream (C++23) istrstream ( C++98/26* ) ostrstream ( C++98/26* ) strstream ( C++98/26* ) Synchronized Output basic_osyncstream (C++20) Types streamoff streamsize fpos Error category interface iostream_category (C++11) io_errc (C++11) [edit] C-style I/O Types and objects FILE fpos_t stdin stdout stderr Functions File access fopen freopen fclose fflush fwide setbuf setvbuf Direct input/output fread fwrite Unformatted input/output fgetc getc fgets fputc putc fputs getchar gets (until C++14) putchar puts ungetc fgetwc getwc fgetws fputwc putwc fputws getwchar putwchar ungetwc Formatted input scanf fscanf sscanf vscanf vfscanf vsscanf (C++11) (C++11) (C++11) wscanf fwscanf swscanf vwscanf vfwscanf vswscanf (C++11) (C++11) (C++11) Formatted output printf fprintf sprintf snprintf (C++11) vprintf vfprintf vsprintf vsnprintf (C++11) wprintf fwprintf swprintf vwprintf vfwprintf vswprintf File positioning ftell fgetpos fseek fsetpos rewind Error handling clearerr feof ferror perror Operations on files remove rename tmpfile tmpnam [edit] Defined in header <cstdio> std:: FILE * freopen ( const char * filename, const char * mode, std:: FILE * stream ) ; First, attempts to close the file associated with stream , ignoring any errors. Then, if filename is not null, attempts to open the file specified by filename using mode as if by std::fopen , and associates that file with the file stream pointed to by stream . If filename is a null pointer, then the function attempts to reopen the file that is already associated with stream (it is implementation defined which mode changes are allowed in this case). Contents 1 Parameters 2 File access flags 3 Return value 4 Notes 5 Example 6 See also [ edit ] Parameters filename - file name to associate the file stream to mode - null-terminated character string determining new file access mode stream - the file stream to modify [ edit ] File access flags File access mode string Meaning Explanation Action if file already exists Action if file does not exist "r" read Open a file for reading read from start return NULL and set error "w" write Create a file for writing destroy contents create new "a" append Append to a file write to end create new "r+" read extended Open a file for read/write read from start return NULL and set error "w+" write extended Create a file for read/write destroy contents create new "a+" append extended Open a file for read/write write to end create new File access mode flag "b" can optionally be specified to open a file in binary mode . This flag has no effect on POSIX systems, but on Windows, for example, it disables special handling of ' \n ' and ' \x1A ' . On the append file access modes, data is written to the end of the file regardless of the current position of the file position indicator. File access mode flag "x" can optionally be appended to "w" or "w+" specifiers. This flag forces the function to fail if the file exists, instead of overwriting it. (C++17) The behavior is undefined if the mode is not one of the strings listed above. Some implementations define additional supported modes (e.g. Windows ). [ edit ] Return value stream on success, a null pointer on failure. [ edit ] Notes std::freopen is the only way to change the narrow/wide orientation of a stream once it has been established by an I/O operation or by std::fwide . Microsoft CRT version of std::freopen does not support any mode changes when filename is a null pointer and treats this as an error (see documentation ). A possible workaround is the non-standard function _setmode() . [ edit ] Example The following code redirects stdout to a file. Run this code #include <cstdio> int main ( ) { std:: printf ( "stdout is printed to console \n " ) ; if ( std :: freopen ( "redir.txt" , "w" , stdout ) ) { std:: printf ( "stdout is redirected to a file \n " ) ; // this is written to redir.txt std:: fclose ( stdout ) ; } } Output: stdout is printed to console [ edit ] See also fopen opens a file (function) [edit] fclose closes a file (function) [edit] C documentation for freopen Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/io/c/freopen&oldid=158701 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 10 September 2023, at 11:19. Privacy policy About cppreference.com Disclaimers