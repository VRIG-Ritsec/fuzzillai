std::remove - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: remove From cppreference.com < cpp ‎ | io ‎ | c C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Input/output library I/O manipulators Print functions (C++23) C-style I/O Buffers basic_streambuf basic_filebuf basic_stringbuf basic_spanbuf (C++23) strstreambuf ( C++98/26* ) basic_syncbuf (C++20) Streams Abstractions ios_base basic_ios basic_istream basic_ostream basic_iostream File I/O basic_ifstream basic_ofstream basic_fstream String I/O basic_istringstream basic_ostringstream basic_stringstream Array I/O basic_ispanstream (C++23) basic_ospanstream (C++23) basic_spanstream (C++23) istrstream ( C++98/26* ) ostrstream ( C++98/26* ) strstream ( C++98/26* ) Synchronized Output basic_osyncstream (C++20) Types streamoff streamsize fpos Error category interface iostream_category (C++11) io_errc (C++11) [edit] C-style I/O Types and objects FILE fpos_t stdin stdout stderr Functions File access fopen freopen fclose fflush fwide setbuf setvbuf Direct input/output fread fwrite Unformatted input/output fgetc getc fgets fputc putc fputs getchar gets (until C++14) putchar puts ungetc fgetwc getwc fgetws fputwc putwc fputws getwchar putwchar ungetwc Formatted input scanf fscanf sscanf vscanf vfscanf vsscanf (C++11) (C++11) (C++11) wscanf fwscanf swscanf vwscanf vfwscanf vswscanf (C++11) (C++11) (C++11) Formatted output printf fprintf sprintf snprintf (C++11) vprintf vfprintf vsprintf vsnprintf (C++11) wprintf fwprintf swprintf vwprintf vfwprintf vswprintf File positioning ftell fgetpos fseek fsetpos rewind Error handling clearerr feof ferror perror Operations on files remove rename tmpfile tmpnam [edit] Defined in header <cstdio> int remove ( const char * pathname ) ; Deletes the file identified by the character string pointed to by pathname . If the file is currently open by any process, the behavior of this function is implementation-defined. POSIX systems unlink the file name (directory entry), but the filesystem space used by the file is not reclaimed while it is open in any process and while other hard links to the file exist. Windows does not allow the file to be deleted in such cases. Contents 1 Parameters 2 Return value 3 Notes 4 Example 5 See also [ edit ] Parameters pathname - pointer to a null-terminated string containing the path identifying the file to delete [ edit ] Return value ​ 0 ​ upon success or non-zero value on error. [ edit ] Notes POSIX specifies many additional details for the behavior of this function. The standard library also defines a function template std::remove taking a pair of iterators and a value, this overload is one of the standard algorithms . [ edit ] Example Run this code #include <cstdio> #include <cstdlib> #include <fstream> #include <iostream> int main ( ) { // create a file, check success using operator! of temporary stream object if ( ! std:: ofstream ( "file1.txt" ) . put ( 'a' ) ) { std:: perror ( "Error creating file1.txt" ) ; return EXIT_FAILURE ; } std:: cout << std:: ifstream ( "file1.txt" ) . rdbuf ( ) << ' \n ' ; // print file std :: remove ( "file1.txt" ) ; // delete file if ( ! std:: ifstream { "file1.txt" } ) // uses operator! of temporary stream object { std:: perror ( "Error opening deleted file" ) ; return EXIT_FAILURE ; } return EXIT_SUCCESS ; } Possible output: a Error opening deleted file: No such file or directory [ edit ] See also remove remove_all (C++17) (C++17) removes a file or empty directory removes a file or directory and all its contents, recursively (function) [edit] rename renames a file (function) [edit] C documentation for remove Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/io/c/remove&oldid=168453 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 5 January 2024, at 11:54. Privacy policy About cppreference.com Disclaimers