std::feholdexcept - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: feholdexcept From cppreference.com < cpp ‎ | numeric ‎ | fenv C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Numerics library Common mathematical functions Mathematical special functions (C++17) Mathematical constants (C++20) Basic linear algebra algorithms (C++26) Data-parallel types (SIMD) (C++26) Floating-point environment (C++11) Complex numbers Numeric array ( valarray ) Pseudo-random number generation Bit manipulation (C++20) Saturation arithmetic (C++26) Factor operations gcd (C++17) lcm (C++17) Interpolations midpoint (C++20) lerp (C++20) Generic numeric operations iota (C++11) ranges::iota (C++23) accumulate inner_product adjacent_difference partial_sum reduce (C++17) transform_reduce (C++17) inclusive_scan (C++17) exclusive_scan (C++17) transform_inclusive_scan (C++17) transform_exclusive_scan (C++17) C-style checked integer arithmetic ckd_add (C++26) ckd_sub (C++26) ckd_mul (C++26) [edit] Floating-point environment Functions feclearexcept (C++11) fetestexcept (C++11) feraiseexcept (C++11) fegetexceptflag fesetexceptflag (C++11) (C++11) fegetround fesetround (C++11) (C++11) fegetenv fesetenv (C++11) (C++11) feholdexcept (C++11) feupdateenv (C++11) Macro constants FE_ALL_EXCEPT FE_DIVBYZERO FE_INEXACT FE_INVALID FE_OVERFLOW FE_UNDERFLOW (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) FE_DOWNWARD FE_TONEAREST FE_TOWARDZERO FE_UPWARD (C++11) (C++11) (C++11) (C++11) FE_DFL_ENV (C++11) [edit] Defined in header <cfenv> int feholdexcept ( std:: fenv_t * envp ) (since C++11) First, saves the current floating-point environment to the object pointed to by envp (similar to std::fegetenv ), then clears all floating-point status flags, and then installs the non-stop mode: future floating-point exceptions will not interrupt execution (will not trap), until the floating-point environment is restored by std::feupdateenv or std::fesetenv . This function may be used in the beginning of a subroutine that must hide the floating-point exceptions it may raise from the caller. If only some exceptions must be suppressed, while others must be reported, the non-stop mode is usually ended with a call to std::feupdateenv after clearing the unwanted exceptions. [ edit ] Parameters envp - pointer to the object of type std:: fenv_t where the floating-point environment will be stored [ edit ] Return value ​ 0 ​ on success, non-zero otherwise. [ edit ] See also feupdateenv (C++11) restores the floating-point environment and raises the previously raised exceptions (function) [edit] fegetenv fesetenv (C++11) saves or restores the current floating-point environment (function) [edit] FE_DFL_ENV (C++11) default floating-point environment (macro constant) [edit] C documentation for feholdexcept Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/numeric/fenv/feholdexcept&oldid=95627 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 18 September 2017, at 08:57. Privacy policy About cppreference.com Disclaimers