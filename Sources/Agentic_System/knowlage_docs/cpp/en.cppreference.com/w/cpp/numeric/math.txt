Common mathematical functions - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions Common mathematical functions From cppreference.com < cpp ‎ | numeric C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Numerics library Common mathematical functions Mathematical special functions (C++17) Mathematical constants (C++20) Basic linear algebra algorithms (C++26) Data-parallel types (SIMD) (C++26) Floating-point environment (C++11) Complex numbers Numeric array ( valarray ) Pseudo-random number generation Bit manipulation (C++20) Saturation arithmetic (C++26) Factor operations gcd (C++17) lcm (C++17) Interpolations midpoint (C++20) lerp (C++20) Generic numeric operations iota (C++11) ranges::iota (C++23) accumulate inner_product adjacent_difference partial_sum reduce (C++17) transform_reduce (C++17) inclusive_scan (C++17) exclusive_scan (C++17) transform_inclusive_scan (C++17) transform_exclusive_scan (C++17) C-style checked integer arithmetic ckd_add (C++26) ckd_sub (C++26) ckd_mul (C++26) [edit] Common mathematical functions Functions Basic operations abs(int) labs llabs imaxabs (C++11) abs(float) fabs div ldiv lldiv imaxdiv (C++11) fmod remainder (C++11) remquo (C++11) fma (C++11) fmax (C++11) fmin (C++11) fdim (C++11) nan nanf nanl (C++11) (C++11) (C++11) Exponential functions exp exp2 (C++11) expm1 (C++11) log log10 log1p (C++11) log2 (C++11) Power functions sqrt cbrt (C++11) hypot (C++11) pow Trigonometric and hyperbolic functions sin cos tan asin acos atan atan2 sinh cosh tanh asinh (C++11) acosh (C++11) atanh (C++11) Error and gamma functions erf (C++11) erfc (C++11) lgamma (C++11) tgamma (C++11) Nearest integer floating point operations ceil floor round lround llround (C++11) (C++11) (C++11) trunc (C++11) nearbyint (C++11) rint lrint llrint (C++11) (C++11) (C++11) Floating point manipulation functions ldexp scalbn scalbln (C++11) (C++11) ilogb (C++11) logb (C++11) frexp modf nextafter nexttoward (C++11) (C++11) copysign (C++11) Classification and comparison fpclassify (C++11) isfinite (C++11) isinf (C++11) isnan (C++11) isnormal (C++11) signbit (C++11) isgreater (C++11) isgreaterequal (C++11) isless (C++11) islessequal (C++11) islessgreater (C++11) isunordered (C++11) Types div_t ldiv_t lldiv_t (C++11) imaxdiv_t (C++11) float_t (C++11) double_t (C++11) Macro constants HUGE_VALF HUGE_VAL HUGE_VALL (C++11) (C++11) math_errhandling MATH_ERRNO MATH_ERREXCEPT (C++11) INFINITY (C++11) NAN (C++11) Classification FP_NORMAL FP_SUBNORMAL FP_ZERO FP_INFINITE FP_NAN (C++11) (C++11) (C++11) (C++11) (C++11) [edit] Contents 1 Functions 1.1 Basic operations 1.2 Exponential functions 1.3 Power functions 1.4 Trigonometric functions 1.5 Hyperbolic functions 1.6 Error and gamma functions 1.7 Nearest integer floating point operations 1.8 Floating point manipulation functions 1.9 Classification and comparison 2 Types 3 Macro constants 3.1 Classification 4 Notes 5 See also [ edit ] Functions Defined in header <cstdlib> abs (int) labs llabs (C++11) computes absolute value of an integral value ( \(\small{|x|}\) |x| ) (function) [edit] div (int) ldiv lldiv (C++11) computes quotient and remainder of integer division (function) [edit] Defined in header <cinttypes> abs (std::intmax_t) imaxabs (C++11) (C++11) computes absolute value of an integral value ( \(\small{|x|}\) |x| ) (function) [edit] div (std::intmax_t) imaxdiv (C++11) (C++11) computes quotient and remainder of integer division (function) [edit] Defined in header <cmath> Basic operations abs (float) fabs fabsf fabsl (C++11) (C++11) absolute value of a floating point value ( \(\small{|x|}\) |x| ) (function) [edit] fmod fmodf fmodl (C++11) (C++11) remainder of the floating point division operation (function) [edit] remainder remainderf remainderl (C++11) (C++11) (C++11) signed remainder of the division operation (function) [edit] remquo remquof remquol (C++11) (C++11) (C++11) signed remainder as well as the three last bits of the division operation (function) [edit] fma fmaf fmal (C++11) (C++11) (C++11) fused multiply-add operation (function) [edit] fmax fmaxf fmaxl (C++11) (C++11) (C++11) larger of two floating-point values (function) [edit] fmin fminf fminl (C++11) (C++11) (C++11) smaller of two floating point values (function) [edit] fdim fdimf fdiml (C++11) (C++11) (C++11) positive difference of two floating point values ( \({\small\max{(0, x-y)}}\) max(0, x-y) ) (function) [edit] nan nanf nanl (C++11) (C++11) (C++11) not-a-number (NaN) (function) [edit] Exponential functions exp expf expl (C++11) (C++11) returns e raised to the given power ( \({\small e^x}\) e x ) (function) [edit] exp2 exp2f exp2l (C++11) (C++11) (C++11) returns 2 raised to the given power ( \({\small 2^x}\) 2 x ) (function) [edit] expm1 expm1f expm1l (C++11) (C++11) (C++11) returns e raised to the given power, minus 1 ( \({\small e^x-1}\) e x -1 ) (function) [edit] log logf logl (C++11) (C++11) computes natural (base e ) logarithm ( \({\small\ln{x}}\) ln(x) ) (function) [edit] log10 log10f log10l (C++11) (C++11) computes common (base 10 ) logarithm ( \({\small\log_{10}{x}}\) log 10 (x) ) (function) [edit] log2 log2f log2l (C++11) (C++11) (C++11) base 2 logarithm of the given number ( \({\small\log_{2}{x}}\) log 2 (x) ) (function) [edit] log1p log1pf log1pl (C++11) (C++11) (C++11) natural logarithm (to base e ) of 1 plus the given number ( \({\small\ln{(1+x)}}\) ln(1+x) ) (function) [edit] Power functions pow powf powl (C++11) (C++11) raises a number to the given power ( \(\small{x^y}\) x y ) (function) [edit] sqrt sqrtf sqrtl (C++11) (C++11) computes square root ( \(\small{\sqrt{x}}\) √ x ) (function) [edit] cbrt cbrtf cbrtl (C++11) (C++11) (C++11) computes cube root ( \(\small{\sqrt[3]{x}}\) 3 √ x ) (function) [edit] hypot hypotf hypotl (C++11) (C++11) (C++11) computes hypotenuse \(\scriptsize{\sqrt{x^2+y^2}}\) √ x 2 +y 2 and \(\scriptsize{\sqrt{x^2+y^2+z^2}}\) √ x 2 +y 2 +z 2 (since C++17) (function) [edit] Trigonometric functions sin sinf sinl (C++11) (C++11) computes sine ( \({\small\sin{x}}\) sin(x) ) (function) [edit] cos cosf cosl (C++11) (C++11) computes cosine ( \({\small\cos{x}}\) cos(x) ) (function) [edit] tan tanf tanl (C++11) (C++11) computes tangent ( \({\small\tan{x}}\) tan(x) ) (function) [edit] asin asinf asinl (C++11) (C++11) computes arc sine ( \({\small\arcsin{x}}\) arcsin(x) ) (function) [edit] acos acosf acosl (C++11) (C++11) computes arc cosine ( \({\small\arccos{x}}\) arccos(x) ) (function) [edit] atan atanf atanl (C++11) (C++11) computes arc tangent ( \({\small\arctan{x}}\) arctan(x) ) (function) [edit] atan2 atan2f atan2l (C++11) (C++11) arc tangent, using signs to determine quadrants (function) [edit] Hyperbolic functions sinh sinhf sinhl (C++11) (C++11) computes hyperbolic sine ( \({\small\sinh{x}}\) sinh(x) ) (function) [edit] cosh coshf coshl (C++11) (C++11) computes hyperbolic cosine ( \({\small\cosh{x}}\) cosh(x) ) (function) [edit] tanh tanhf tanhl (C++11) (C++11) computes hyperbolic tangent ( \({\small\tanh{x}}\) tanh(x) ) (function) [edit] asinh asinhf asinhl (C++11) (C++11) (C++11) computes the inverse hyperbolic sine ( \({\small\operatorname{arsinh}{x}}\) arsinh(x) ) (function) [edit] acosh acoshf acoshl (C++11) (C++11) (C++11) computes the inverse hyperbolic cosine ( \({\small\operatorname{arcosh}{x}}\) arcosh(x) ) (function) [edit] atanh atanhf atanhl (C++11) (C++11) (C++11) computes the inverse hyperbolic tangent ( \({\small\operatorname{artanh}{x}}\) artanh(x) ) (function) [edit] Error and gamma functions erf erff erfl (C++11) (C++11) (C++11) error function (function) [edit] erfc erfcf erfcl (C++11) (C++11) (C++11) complementary error function (function) [edit] tgamma tgammaf tgammal (C++11) (C++11) (C++11) gamma function (function) [edit] lgamma lgammaf lgammal (C++11) (C++11) (C++11) natural logarithm of the gamma function (function) [edit] Nearest integer floating point operations ceil ceilf ceill (C++11) (C++11) nearest integer not less than the given value (function) [edit] floor floorf floorl (C++11) (C++11) nearest integer not greater than the given value (function) [edit] trunc truncf truncl (C++11) (C++11) (C++11) nearest integer not greater in magnitude than the given value (function) [edit] round roundf roundl lround lroundf lroundl llround llroundf llroundl (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) nearest integer, rounding away from zero in halfway cases (function) [edit] nearbyint nearbyintf nearbyintl (C++11) (C++11) (C++11) nearest integer using current rounding mode (function) [edit] rint rintf rintl lrint lrintf lrintl llrint llrintf llrintl (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) nearest integer using current rounding mode with exception if the result differs (function) [edit] Floating point manipulation functions frexp frexpf frexpl (C++11) (C++11) decomposes a number into significand and base- 2 exponent (function) [edit] ldexp ldexpf ldexpl (C++11) (C++11) multiplies a number by 2 raised to an integral power (function) [edit] modf modff modfl (C++11) (C++11) decomposes a number into integer and fractional parts (function) [edit] scalbn scalbnf scalbnl scalbln scalblnf scalblnl (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) multiplies a number by FLT_RADIX raised to a power (function) [edit] ilogb ilogbf ilogbl (C++11) (C++11) (C++11) extracts exponent of the number (function) [edit] logb logbf logbl (C++11) (C++11) (C++11) extracts exponent of the number (function) [edit] nextafter nextafterf nextafterl nexttoward nexttowardf nexttowardl (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) next representable floating-point value towards the given value (function) [edit] copysign copysignf copysignl (C++11) (C++11) (C++11) copies the sign of a floating point value (function) [edit] Classification and comparison fpclassify (C++11) categorizes the given floating-point value (function) [edit] isfinite (C++11) checks if the given number has finite value (function) [edit] isinf (C++11) checks if the given number is infinite (function) [edit] isnan (C++11) checks if the given number is NaN (function) [edit] isnormal (C++11) checks if the given number is normal (function) [edit] signbit (C++11) checks if the given number is negative (function) [edit] isgreater (C++11) checks if the first floating-point argument is greater than the second (function) [edit] isgreaterequal (C++11) checks if the first floating-point argument is greater or equal than the second (function) [edit] isless (C++11) checks if the first floating-point argument is less than the second (function) [edit] islessequal (C++11) checks if the first floating-point argument is less or equal than the second (function) [edit] islessgreater (C++11) checks if the first floating-point argument is less or greater than the second (function) [edit] isunordered (C++11) checks if two floating-point values are unordered (function) [edit] [ edit ] Types Defined in header <cstdlib> div_t structure type, returned by std::div (typedef) [edit] ldiv_t structure type, returned by std::ldiv (typedef) [edit] lldiv_t (C++11) structure type, returned by std::lldiv (typedef) [edit] Defined in header <cinttypes> imaxdiv_t (C++11) structure type, returned by std::imaxdiv (typedef) [edit] Defined in header <cmath> float_t (C++11) most efficient floating-point type at least as wide as float (typedef) [edit] double_t (C++11) most efficient floating-point type at least as wide as double (typedef) [edit] [ edit ] Macro constants Defined in header <cmath> HUGE_VALF HUGE_VAL HUGE_VALL (C++11) (C++11) indicates the overflow value for float , double and long double respectively (macro constant) [edit] INFINITY (C++11) evaluates to positive infinity or the value guaranteed to overflow a float (macro constant) [edit] NAN (C++11) evaluates to a quiet NaN of type float (macro constant) [edit] math_errhandling MATH_ERRNO MATH_ERREXCEPT (C++11) (C++11) (C++11) defines the error handling mechanism used by the common mathematical functions (macro constant) [edit] Classification FP_NORMAL FP_SUBNORMAL FP_ZERO FP_INFINITE FP_NAN (C++11) (C++11) (C++11) (C++11) (C++11) indicates a floating-point category (macro constant) [edit] [ edit ] Notes Feature-test macro Value Std Feature __cpp_lib_constexpr_cmath 202202L (C++23) Constexpr for FP environment agnostic mathematical functions in <cmath> and <cstdlib> 202306L (C++26) Constexpr for most mathematical functions in <cmath> [ edit ] See also Mathematical special functions C documentation for Common mathematical functions Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/numeric/math&oldid=159219 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Česky Deutsch Español Français Italiano 日本語 Polski Português Русский Türkçe 中文 This page was last modified on 16 September 2023, at 15:20. Privacy policy About cppreference.com Disclaimers