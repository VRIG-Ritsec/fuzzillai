std::floor, std::floorf, std::floorl - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: floor, std:: floorf, std:: floorl From cppreference.com < cpp ‎ | numeric ‎ | math C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Numerics library Common mathematical functions Mathematical special functions (C++17) Mathematical constants (C++20) Basic linear algebra algorithms (C++26) Data-parallel types (SIMD) (C++26) Floating-point environment (C++11) Complex numbers Numeric array ( valarray ) Pseudo-random number generation Bit manipulation (C++20) Saturation arithmetic (C++26) Factor operations gcd (C++17) lcm (C++17) Interpolations midpoint (C++20) lerp (C++20) Generic numeric operations iota (C++11) ranges::iota (C++23) accumulate inner_product adjacent_difference partial_sum reduce (C++17) transform_reduce (C++17) inclusive_scan (C++17) exclusive_scan (C++17) transform_inclusive_scan (C++17) transform_exclusive_scan (C++17) C-style checked integer arithmetic ckd_add (C++26) ckd_sub (C++26) ckd_mul (C++26) [edit] Common mathematical functions Functions Basic operations abs(int) labs llabs imaxabs (C++11) abs(float) fabs div ldiv lldiv imaxdiv (C++11) fmod remainder (C++11) remquo (C++11) fma (C++11) fmax (C++11) fmin (C++11) fdim (C++11) nan nanf nanl (C++11) (C++11) (C++11) Exponential functions exp exp2 (C++11) expm1 (C++11) log log10 log1p (C++11) log2 (C++11) Power functions sqrt cbrt (C++11) hypot (C++11) pow Trigonometric and hyperbolic functions sin cos tan asin acos atan atan2 sinh cosh tanh asinh (C++11) acosh (C++11) atanh (C++11) Error and gamma functions erf (C++11) erfc (C++11) lgamma (C++11) tgamma (C++11) Nearest integer floating point operations ceil floor round lround llround (C++11) (C++11) (C++11) trunc (C++11) nearbyint (C++11) rint lrint llrint (C++11) (C++11) (C++11) Floating point manipulation functions ldexp scalbn scalbln (C++11) (C++11) ilogb (C++11) logb (C++11) frexp modf nextafter nexttoward (C++11) (C++11) copysign (C++11) Classification and comparison fpclassify (C++11) isfinite (C++11) isinf (C++11) isnan (C++11) isnormal (C++11) signbit (C++11) isgreater (C++11) isgreaterequal (C++11) isless (C++11) islessequal (C++11) islessgreater (C++11) isunordered (C++11) Types div_t ldiv_t lldiv_t (C++11) imaxdiv_t (C++11) float_t (C++11) double_t (C++11) Macro constants HUGE_VALF HUGE_VAL HUGE_VALL (C++11) (C++11) math_errhandling MATH_ERRNO MATH_ERREXCEPT (C++11) INFINITY (C++11) NAN (C++11) Classification FP_NORMAL FP_SUBNORMAL FP_ZERO FP_INFINITE FP_NAN (C++11) (C++11) (C++11) (C++11) (C++11) [edit] Defined in header <cmath> (1) float floor ( float num ) ; double floor ( double num ) ; long double floor ( long double num ) ; (until C++23) constexpr /*floating-point-type*/ floor ( /*floating-point-type*/ num ) ; (since C++23) float floorf ( float num ) ; (2) (since C++11) (constexpr since C++23) long double floorl ( long double num ) ; (3) (since C++11) (constexpr since C++23) SIMD overload (since C++26) Defined in header <simd> template < /*math-floating-point*/ V > constexpr /*deduced-simd-t*/ < V > floor ( const V & v_num ) ; (S) (since C++26) Additional overloads (since C++11) Defined in header <cmath> template < class Integer > double floor ( Integer num ) ; (A) (constexpr since C++23) 1-3) Computes the largest integer value not greater than num . The library provides overloads of std::floor for all cv-unqualified floating-point types as the type of the parameter. (since C++23) S) The SIMD overload performs an element-wise std::floor on v_num . (See math-floating-point and deduced-simd-t for their definitions.) (since C++26) A) Additional overloads are provided for all integer types, which are treated as double . (since C++11) Contents 1 Parameters 2 Return value 3 Error handling 4 Notes 5 Example 6 See also [ edit ] Parameters num - floating-point or integer value [ edit ] Return value If no errors occur, the largest integer value not greater than num , that is ⌊num⌋ , is returned. Return value num [ edit ] Error handling Errors are reported as specified in math_errhandling . If the implementation supports IEEE floating-point arithmetic (IEC 60559), The current rounding mode has no effect. If num is ±∞, it is returned, unmodified. If num is ±0, it is returned, unmodified. If num is NaN, NaN is returned. [ edit ] Notes FE_INEXACT may be (but isn't required to be) raised when rounding a non-integer finite value. The largest representable floating-point values are exact integers in all standard floating-point formats, so this function never overflows on its own; however the result may overflow any integer type (including std::intmax_t ), when stored in an integer variable. The additional overloads are not required to be provided exactly as (A) . They only need to be sufficient to ensure that for their argument num of integer type, std :: floor ( num ) has the same effect as std :: floor ( static_cast < double > ( num ) ) . [ edit ] Example Run this code #include <cmath> #include <iostream> int main ( ) { std:: cout << std:: fixed << "floor(+2.7) = " << std :: floor ( + 2.7 ) << ' \n ' << "floor(-2.7) = " << std :: floor ( - 2.7 ) << ' \n ' << "floor(-0.0) = " << std :: floor ( - 0.0 ) << ' \n ' << "floor(-Inf) = " << std :: floor ( - INFINITY ) << ' \n ' ; } Output: floor(+2.7) = 2.000000 floor(-2.7) = -3.000000 floor(-0.0) = -0.000000 floor(-Inf) = -inf [ edit ] See also ceil ceilf ceill (C++11) (C++11) nearest integer not less than the given value (function) [edit] trunc truncf truncl (C++11) (C++11) (C++11) nearest integer not greater in magnitude than the given value (function) [edit] round roundf roundl lround lroundf lroundl llround llroundf llroundl (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) (C++11) nearest integer, rounding away from zero in halfway cases (function) [edit] C documentation for floor Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/numeric/math/floor&oldid=160767 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Polski Português Русский 中文 This page was last modified on 15 October 2023, at 22:29. Privacy policy About cppreference.com Disclaimers