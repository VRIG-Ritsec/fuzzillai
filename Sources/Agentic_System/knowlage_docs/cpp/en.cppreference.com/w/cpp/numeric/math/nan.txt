std::nan, std::nanf, std::nanl - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: nan, std:: nanf, std:: nanl From cppreference.com < cpp ‎ | numeric ‎ | math C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Numerics library Common mathematical functions Mathematical special functions (C++17) Mathematical constants (C++20) Basic linear algebra algorithms (C++26) Data-parallel types (SIMD) (C++26) Floating-point environment (C++11) Complex numbers Numeric array ( valarray ) Pseudo-random number generation Bit manipulation (C++20) Saturation arithmetic (C++26) Factor operations gcd (C++17) lcm (C++17) Interpolations midpoint (C++20) lerp (C++20) Generic numeric operations iota (C++11) ranges::iota (C++23) accumulate inner_product adjacent_difference partial_sum reduce (C++17) transform_reduce (C++17) inclusive_scan (C++17) exclusive_scan (C++17) transform_inclusive_scan (C++17) transform_exclusive_scan (C++17) C-style checked integer arithmetic ckd_add (C++26) ckd_sub (C++26) ckd_mul (C++26) [edit] Common mathematical functions Functions Basic operations abs(int) labs llabs imaxabs (C++11) abs(float) fabs div ldiv lldiv imaxdiv (C++11) fmod remainder (C++11) remquo (C++11) fma (C++11) fmax (C++11) fmin (C++11) fdim (C++11) nan nanf nanl (C++11) (C++11) (C++11) Exponential functions exp exp2 (C++11) expm1 (C++11) log log10 log1p (C++11) log2 (C++11) Power functions sqrt cbrt (C++11) hypot (C++11) pow Trigonometric and hyperbolic functions sin cos tan asin acos atan atan2 sinh cosh tanh asinh (C++11) acosh (C++11) atanh (C++11) Error and gamma functions erf (C++11) erfc (C++11) lgamma (C++11) tgamma (C++11) Nearest integer floating point operations ceil floor round lround llround (C++11) (C++11) (C++11) trunc (C++11) nearbyint (C++11) rint lrint llrint (C++11) (C++11) (C++11) Floating point manipulation functions ldexp scalbn scalbln (C++11) (C++11) ilogb (C++11) logb (C++11) frexp modf nextafter nexttoward (C++11) (C++11) copysign (C++11) Classification and comparison fpclassify (C++11) isfinite (C++11) isinf (C++11) isnan (C++11) isnormal (C++11) signbit (C++11) isgreater (C++11) isgreaterequal (C++11) isless (C++11) islessequal (C++11) islessgreater (C++11) isunordered (C++11) Types div_t ldiv_t lldiv_t (C++11) imaxdiv_t (C++11) float_t (C++11) double_t (C++11) Macro constants HUGE_VALF HUGE_VAL HUGE_VALL (C++11) (C++11) math_errhandling MATH_ERRNO MATH_ERREXCEPT (C++11) INFINITY (C++11) NAN (C++11) Classification FP_NORMAL FP_SUBNORMAL FP_ZERO FP_INFINITE FP_NAN (C++11) (C++11) (C++11) (C++11) (C++11) [edit] Defined in header <cmath> float nanf ( const char * arg ) ; (1) (since C++11) double nan ( const char * arg ) ; (2) (since C++11) long double nanl ( const char * arg ) ; (3) (since C++11) Converts the character string arg into the corresponding quiet NaN value, as if by calling std::strtof , std::strtod , or std::strtold , respectively. 1) The call std :: nanf ( " n-char-sequence ") , where n-char-sequence is a sequence of digits, ASCII letters, and underscores, is equivalent to the call std:: strtof ( "NAN( n-char-sequence ) " , ( char ** ) nullptr ) ; . The call std :: nanf ( "" ) is equivalent to the call std:: strtof ( "NAN()" , ( char ** ) nullptr ) ; . The call std :: nanf ( " string ") , where string is neither an n-char-sequence nor an empty string, is equivalent to the call std:: strtof ( "NAN" , ( char ** ) nullptr ) ; . 2) Same as (1) , but calls std::strtod instead of std::strtof . 3) Same as (1) , but calls std::strtold instead of std::strtof . Contents 1 Parameters 2 Return value 3 Error handling 4 Example 5 See also [ edit ] Parameters arg - narrow character string identifying the contents of a NaN [ edit ] Return value The quiet NaN value that corresponds to the identifying string arg or zero if the implementation does not support quiet NaNs. If the implementation supports IEEE floating-point arithmetic (IEC 60559), it also supports quiet NaNs. [ edit ] Error handling This function is not subject to any of the error conditions specified in math_errhandling . [ edit ] Example Run this code #include <cmath> #include <cstdint> #include <cstring> #include <iostream> int main ( ) { double f1 = std :: nan ( "1" ) ; std:: uint64_t f1n ; std:: memcpy ( & f1n, & f1, sizeof f1 ) ; std:: cout << "nan( \" 1 \" ) = " << f1 << " (" << std:: hex << f1n << ") \n " ; double f2 = std :: nan ( "2" ) ; std:: uint64_t f2n ; std:: memcpy ( & f2n, & f2, sizeof f2 ) ; std:: cout << "nan( \" 2 \" ) = " << f2 << " (" << std:: hex << f2n << ") \n " ; } Possible output: nan("1") = nan (7ff0000000000001) nan("2") = nan (7ff0000000000002) [ edit ] See also isnan (C++11) checks if the given number is NaN (function) [edit] NAN (C++11) evaluates to a quiet NaN of type float (macro constant) [edit] has_quiet_NaN [static] identifies floating-point types that can represent the special value "quiet not-a-number" (NaN) (public static member constant of std::numeric_limits<T> ) [edit] has_signaling_NaN [static] identifies floating-point types that can represent the special value "signaling not-a-number" (NaN) (public static member constant of std::numeric_limits<T> ) [edit] quiet_NaN [static] returns a quiet NaN value of the given floating-point type (public static member function of std::numeric_limits<T> ) [edit] signaling_NaN [static] returns a signaling NaN value of the given floating-point type (public static member function of std::numeric_limits<T> ) [edit] C documentation for nanf , nan , nanl Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/numeric/math/nan&oldid=149109 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 14 March 2023, at 02:28. Privacy policy About cppreference.com Disclaimers