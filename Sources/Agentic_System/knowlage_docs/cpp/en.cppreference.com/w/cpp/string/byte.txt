Null-terminated byte strings - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions Null-terminated byte strings From cppreference.com < cpp ‎ | string C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Text processing library Localization library Regular expressions library (C++11) Formatting library (C++20) Null-terminated sequence utilities Byte strings Multibyte strings Wide strings Primitive numeric conversions to_chars (C++17) to_chars_result (C++17) from_chars (C++17) from_chars_result (C++17) chars_format (C++17) Text encoding identifications text_encoding (C++26) [edit] Null-terminated byte strings Functions Character classification isalnum isalpha islower isupper isdigit isxdigit isblank (C++11) iscntrl isgraph isspace isprint ispunct Character manipulation tolower toupper Conversions to numeric formats atof atoi atol atoll (C++11) strtol strtoll (C++11) strtoul strtoull (C++11) strtof strtod strtold (C++11) (C++11) strtoimax strtouimax (C++11) (C++11) String manipulation strcpy strncpy strxfrm strcat strncat String examination strlen strcmp strncmp strcoll strchr strrchr strspn strcspn strpbrk strstr strtok Character array functions memchr memcmp memset memcpy memmove Miscellaneous strerror [edit] A null-terminated byte string (NTBS) is a possibly empty sequence of nonzero bytes followed by a byte with value zero (the terminating null character). Each byte in a byte string encodes one character of some character set. For example, the character array { ' \x63 ' , ' \x61 ' , ' \x74 ' , ' \0 ' } is an NTBS holding the string "cat" in ASCII encoding. Contents 1 Functions 1.1 Character classification 1.2 Character manipulation 1.3 Conversions to numeric formats 1.4 String manipulation 1.5 String examination 1.6 Character array functions 1.7 Miscellaneous 2 See also [ edit ] Functions Character classification Defined in header <cctype> isalnum checks if a character is alphanumeric (function) [edit] isalpha checks if a character is alphabetic (function) [edit] islower checks if a character is lowercase (function) [edit] isupper checks if a character is an uppercase character (function) [edit] isdigit checks if a character is a digit (function) [edit] isxdigit checks if a character is a hexadecimal character (function) [edit] iscntrl checks if a character is a control character (function) [edit] isgraph checks if a character is a graphical character (function) [edit] isspace checks if a character is a space character (function) [edit] isblank (C++11) checks if a character is a blank character (function) [edit] isprint checks if a character is a printing character (function) [edit] ispunct checks if a character is a punctuation character (function) [edit] Character manipulation tolower converts a character to lowercase (function) [edit] toupper converts a character to uppercase (function) [edit] ASCII values characters iscntrl iswcntrl isprint iswprint isspace iswspace isblank iswblank isgraph iswgraph ispunct iswpunct isalnum iswalnum isalpha iswalpha isupper iswupper islower iswlower isdigit iswdigit isxdigit iswxdigit decimal hexadecimal octal 0–8 \x0 – \x8 \0 – \10 control codes ( NUL , etc.) ≠0 0 0 0 0 0 0 0 0 0 0 0 9 \x9 \11 tab ( \t ) ≠0 0 ≠0 ≠0 0 0 0 0 0 0 0 0 10–13 \xA – \xD \12 – \15 whitespaces ( \n , \v , \f , \r ) ≠0 0 ≠0 0 0 0 0 0 0 0 0 0 14–31 \xE – \x1F \16 – \37 control codes ≠0 0 0 0 0 0 0 0 0 0 0 0 32 \x20 \40 space 0 ≠0 ≠0 ≠0 0 0 0 0 0 0 0 0 33–47 \x21 – \x2F \41 – \57 !"#$%&'()*+,-./ 0 ≠0 0 0 ≠0 ≠0 0 0 0 0 0 0 48–57 \x30 – \x39 \60 – \71 0123456789 0 ≠0 0 0 ≠0 0 ≠0 0 0 0 ≠0 ≠0 58–64 \x3A – \x40 \72 – \100 :;<=>?@ 0 ≠0 0 0 ≠0 ≠0 0 0 0 0 0 0 65–70 \x41 – \x46 \101 – \106 ABCDEF 0 ≠0 0 0 ≠0 0 ≠0 ≠0 ≠0 0 0 ≠0 71–90 \x47 – \x5A \107 – \132 GHIJKLMNOP QRSTUVWXYZ 0 ≠0 0 0 ≠0 0 ≠0 ≠0 ≠0 0 0 0 91–96 \x5B – \x60 \133 – \140 [\]^_` 0 ≠0 0 0 ≠0 ≠0 0 0 0 0 0 0 97–102 \x61 – \x66 \141 – \146 abcdef 0 ≠0 0 0 ≠0 0 ≠0 ≠0 0 ≠0 0 ≠0 103–122 \x67 – \x7A \147 – \172 ghijklmnop qrstuvwxyz 0 ≠0 0 0 ≠0 0 ≠0 ≠0 0 ≠0 0 0 123–126 \x7B – \x7E \172 – \176 {|}~ 0 ≠0 0 0 ≠0 ≠0 0 0 0 0 0 0 127 \x7F \177 backspace character ( DEL ) ≠0 0 0 0 0 0 0 0 0 0 0 0 Conversions to numeric formats Defined in header <cstdlib> atof converts a byte string to a floating point value (function) [edit] atoi atol atoll (C++11) converts a byte string to an integer value (function) [edit] strtol strtoll (C++11) converts a byte string to an integer value (function) [edit] strtoul strtoull (C++11) converts a byte string to an unsigned integer value (function) [edit] strtof strtod strtold converts a byte string to a floating-point value (function) [edit] Defined in header <cinttypes> strtoimax strtoumax (C++11) (C++11) converts a byte string to std::intmax_t or std::uintmax_t (function) [edit] String manipulation Defined in header <cstring> strcpy copies one string to another (function) [edit] strncpy copies a certain amount of characters from one string to another (function) [edit] strcat concatenates two strings (function) [edit] strncat concatenates a certain amount of characters of two strings (function) [edit] strxfrm transform a string so that strcmp would produce the same result as strcoll (function) [edit] String examination Defined in header <cstring> strlen returns the length of a given string (function) [edit] strcmp compares two strings (function) [edit] strncmp compares a certain number of characters from two strings (function) [edit] strcoll compares two strings in accordance to the current locale (function) [edit] strchr finds the first occurrence of a character (function) [edit] strrchr finds the last occurrence of a character (function) [edit] strspn returns the length of the maximum initial segment that consists of only the characters found in another byte string (function) [edit] strcspn returns the length of the maximum initial segment that consists of only the characters not found in another byte string (function) [edit] strpbrk finds the first location of any character from a set of separators (function) [edit] strstr finds the first occurrence of a substring of characters (function) [edit] strtok finds the next token in a byte string (function) [edit] Character array functions Defined in header <cstring> memchr searches an array for the first occurrence of a character (function) [edit] memcmp compares two buffers (function) [edit] memset fills a buffer with a character (function) [edit] memcpy copies one buffer to another (function) [edit] memmove moves one buffer to another (function) [edit] Miscellaneous Defined in header <cstring> strerror returns a text version of a given error code (function) [edit] [ edit ] See also C documentation for Null -terminated byte strings Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/string/byte&oldid=148422 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Česky Deutsch Español Français Italiano 日本語 Polski Português Русский 中文 This page was last modified on 21 February 2023, at 15:28. Privacy policy About cppreference.com Disclaimers