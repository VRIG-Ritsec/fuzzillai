std::strpbrk - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: strpbrk From cppreference.com < cpp ‎ | string ‎ | byte C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Text processing library Localization library Regular expressions library (C++11) Formatting library (C++20) Null-terminated sequence utilities Byte strings Multibyte strings Wide strings Primitive numeric conversions to_chars (C++17) to_chars_result (C++17) from_chars (C++17) from_chars_result (C++17) chars_format (C++17) Text encoding identifications text_encoding (C++26) [edit] Null-terminated byte strings Functions Character classification isalnum isalpha islower isupper isdigit isxdigit isblank (C++11) iscntrl isgraph isspace isprint ispunct Character manipulation tolower toupper Conversions to numeric formats atof atoi atol atoll (C++11) strtol strtoll (C++11) strtoul strtoull (C++11) strtof strtod strtold (C++11) (C++11) strtoimax strtouimax (C++11) (C++11) String manipulation strcpy strncpy strxfrm strcat strncat String examination strlen strcmp strncmp strcoll strchr strrchr strspn strcspn strpbrk strstr strtok Character array functions memchr memcmp memset memcpy memmove Miscellaneous strerror [edit] Defined in header <cstring> const char * strpbrk ( const char * dest, const char * breakset ) ; char * strpbrk ( char * dest, const char * breakset ) ; Scans the null-terminated byte string pointed to by dest for any character from the null-terminated byte string pointed to by breakset , and returns a pointer to that character. Contents 1 Parameters 2 Return value 3 Notes 4 Example 5 See also [ edit ] Parameters dest - pointer to the null-terminated byte string to be analyzed breakset - pointer to the null-terminated byte string that contains the characters to search for [ edit ] Return value Pointer to the first character in dest , that is also in breakset , or null pointer if no such character exists. [ edit ] Notes The name stands for "string pointer break", because it returns a pointer to the first of the separator ("break") characters. [ edit ] Example Run this code #include <cstring> #include <iomanip> #include <iostream> int main ( ) { const char * str = "hello world, friend of mine!" ; const char * sep = " ,!" ; unsigned int cnt = 0 ; do { str = std :: strpbrk ( str, sep ) ; // find separator std:: cout << std:: quoted ( str ) << ' \n ' ; if ( str ) str + = std:: strspn ( str, sep ) ; // skip separator ++ cnt ; // increment word count } while ( str && * str ) ; std:: cout << "There are " << cnt << " words \n " ; } Output: " world, friend of mine!" ", friend of mine!" " of mine!" " mine!" "!" There are 5 words [ edit ] See also strcspn returns the length of the maximum initial segment that consists of only the characters not found in another byte string (function) [edit] strtok finds the next token in a byte string (function) [edit] strchr finds the first occurrence of a character (function) [edit] wcspbrk finds the first location of any wide character in one wide string, in another wide string (function) [edit] C documentation for strpbrk Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/string/byte/strpbrk&oldid=152859 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 6 June 2023, at 09:30. Privacy policy About cppreference.com Disclaimers