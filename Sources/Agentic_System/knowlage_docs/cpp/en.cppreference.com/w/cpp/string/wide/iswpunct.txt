std::iswpunct - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: iswpunct From cppreference.com < cpp ‎ | string ‎ | wide C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Text processing library Localization library Regular expressions library (C++11) Formatting library (C++20) Null-terminated sequence utilities Byte strings Multibyte strings Wide strings Primitive numeric conversions to_chars (C++17) to_chars_result (C++17) from_chars (C++17) from_chars_result (C++17) chars_format (C++17) Text encoding identifications text_encoding (C++26) [edit] Null-terminated wide strings Functions Character classification iswalnum iswalpha iswlower iswupper iswdigit iswxdigit wctype iswblank (C++11) iswctype iswcntrl iswgraph iswspace iswprint iswpunct Character manipulation towlower towupper towctrans wctrans Conversions to numeric formats wcstol wcstoll (C++11) wcstof wcstod wcstold (C++11) (C++11) wcstoul wcstoull (C++11) wcstoimax wcstouimax (C++11) (C++11) String manipulation wcslen wcscmp wcscoll wcsncmp wcschr wcsrchr wcspbrk wcsspn wcscspn wcsstr wcstok String examination wcscpy wcsncpy wcsxfrm wcscat wcsncat Array manipulation wmemcpy wmemmove wmemcmp wmemchr wmemset Types wctrans_t wctype_t wint_t Macros WCHAR_MIN WCHAR_MAX WEOF [edit] Defined in header <cwctype> int iswpunct ( std:: wint_t ch ) ; Checks if the given wide character is a punctuation character, i.e. it is one of !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ or any punctuation character specific to the current locale. If the value of ch is neither representable as a wchar_t nor equal to the value of the macro WEOF , the behavior is undefined. Contents 1 Parameters 2 Return value 3 Notes 4 Example 5 See also [ edit ] Parameters ch - wide character [ edit ] Return value Non-zero value if the wide character is a punctuation character, zero otherwise. [ edit ] Notes ISO 30112 specifies which Unicode characters are include in POSIX punct category. [ edit ] Example Run this code #include <clocale> #include <cwctype> #include <iostream> int main ( ) { wchar_t c = L ' \u2051 ' ; // Two asterisks ('⁑') std:: cout << std:: hex << std:: showbase << std:: boolalpha << "in the default locale, iswpunct(" << static_cast < std:: wint_t > ( c ) << ") = " << static_cast < bool > ( std :: iswpunct ( c ) ) << ' \n ' ; std:: setlocale ( LC_ALL , "en_US.utf8" ) ; std:: cout << "in Unicode locale, iswpunct(" << static_cast < std:: wint_t > ( c ) << ") = " << static_cast < bool > ( std :: iswpunct ( c ) ) << ' \n ' ; } Output: in the default locale, iswpunct(0x2051) = false in Unicode locale, iswpunct(0x2051) = true [ edit ] See also ispunct (std::locale) checks if a character is classified as punctuation by a locale (function template) [edit] ispunct checks if a character is a punctuation character (function) [edit] C documentation for iswpunct ASCII values characters iscntrl iswcntrl isprint iswprint isspace iswspace isblank iswblank isgraph iswgraph ispunct iswpunct isalnum iswalnum isalpha iswalpha isupper iswupper islower iswlower isdigit iswdigit isxdigit iswxdigit decimal hexadecimal octal 0–8 \x0 – \x8 \0 – \10 control codes ( NUL , etc.) ≠0 0 0 0 0 0 0 0 0 0 0 0 9 \x9 \11 tab ( \t ) ≠0 0 ≠0 ≠0 0 0 0 0 0 0 0 0 10–13 \xA – \xD \12 – \15 whitespaces ( \n , \v , \f , \r ) ≠0 0 ≠0 0 0 0 0 0 0 0 0 0 14–31 \xE – \x1F \16 – \37 control codes ≠0 0 0 0 0 0 0 0 0 0 0 0 32 \x20 \40 space 0 ≠0 ≠0 ≠0 0 0 0 0 0 0 0 0 33–47 \x21 – \x2F \41 – \57 !"#$%&'()*+,-./ 0 ≠0 0 0 ≠0 ≠0 0 0 0 0 0 0 48–57 \x30 – \x39 \60 – \71 0123456789 0 ≠0 0 0 ≠0 0 ≠0 0 0 0 ≠0 ≠0 58–64 \x3A – \x40 \72 – \100 :;<=>?@ 0 ≠0 0 0 ≠0 ≠0 0 0 0 0 0 0 65–70 \x41 – \x46 \101 – \106 ABCDEF 0 ≠0 0 0 ≠0 0 ≠0 ≠0 ≠0 0 0 ≠0 71–90 \x47 – \x5A \107 – \132 GHIJKLMNOP QRSTUVWXYZ 0 ≠0 0 0 ≠0 0 ≠0 ≠0 ≠0 0 0 0 91–96 \x5B – \x60 \133 – \140 [\]^_` 0 ≠0 0 0 ≠0 ≠0 0 0 0 0 0 0 97–102 \x61 – \x66 \141 – \146 abcdef 0 ≠0 0 0 ≠0 0 ≠0 ≠0 0 ≠0 0 ≠0 103–122 \x67 – \x7A \147 – \172 ghijklmnop qrstuvwxyz 0 ≠0 0 0 ≠0 0 ≠0 ≠0 0 ≠0 0 0 123–126 \x7B – \x7E \172 – \176 {|}~ 0 ≠0 0 0 ≠0 ≠0 0 0 0 0 0 0 127 \x7F \177 backspace character ( DEL ) ≠0 0 0 0 0 0 0 0 0 0 0 0 Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/string/wide/iswpunct&oldid=159087 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 15 September 2023, at 10:26. Privacy policy About cppreference.com Disclaimers