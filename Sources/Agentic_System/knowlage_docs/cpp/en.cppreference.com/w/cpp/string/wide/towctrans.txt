std::towctrans - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: towctrans From cppreference.com < cpp ‎ | string ‎ | wide C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Text processing library Localization library Regular expressions library (C++11) Formatting library (C++20) Null-terminated sequence utilities Byte strings Multibyte strings Wide strings Primitive numeric conversions to_chars (C++17) to_chars_result (C++17) from_chars (C++17) from_chars_result (C++17) chars_format (C++17) Text encoding identifications text_encoding (C++26) [edit] Null-terminated wide strings Functions Character classification iswalnum iswalpha iswlower iswupper iswdigit iswxdigit wctype iswblank (C++11) iswctype iswcntrl iswgraph iswspace iswprint iswpunct Character manipulation towlower towupper towctrans wctrans Conversions to numeric formats wcstol wcstoll (C++11) wcstof wcstod wcstold (C++11) (C++11) wcstoul wcstoull (C++11) wcstoimax wcstouimax (C++11) (C++11) String manipulation wcslen wcscmp wcscoll wcsncmp wcschr wcsrchr wcspbrk wcsspn wcscspn wcsstr wcstok String examination wcscpy wcsncpy wcsxfrm wcscat wcsncat Array manipulation wmemcpy wmemmove wmemcmp wmemchr wmemset Types wctrans_t wctype_t wint_t Macros WCHAR_MIN WCHAR_MAX WEOF [edit] Defined in header <cwctype> std:: wint_t towctrans ( std:: wint_t ch, std:: wctrans_t desc ) ; Maps the wide character ch using the current C locale's LC_CTYPE mapping category identified by desc . If the value of ch is neither representable as a wchar_t nor equal to the value of the macro WEOF , the behavior is undefined. Contents 1 Parameters 2 Return value 3 Example 4 See also [ edit ] Parameters ch - the wide character to map desc - the LC_CTYPE mapping, obtained from a call to std::wctrans [ edit ] Return value The mapped value of ch using the mapping identified by desc in LC_CTYPE facet of the current C locale. [ edit ] Example The following example demonstrates katakana to hiragana character mapping. Run this code #include <algorithm> #include <clocale> #include <cwctype> #include <iostream> std:: wstring tohira ( std:: wstring str ) { std:: transform ( str. begin ( ) , str. end ( ) , str. begin ( ) , [ ] ( wchar_t c ) { return std :: towctrans ( c, std:: wctrans ( "tojhira" ) ) ; } ) ; return str ; } int main ( ) { std:: setlocale ( LC_ALL , "ja_JP.UTF-8" ) ; std:: wstring kana = L "ヒラガナ" ; std:: wcout << "katakana characters " << kana << " are " << tohira ( kana ) << " in hiragana \n " ; } Output: katakana characters ヒラガナ are ひらがな in hiragana [ edit ] See also wctrans looks up a character mapping category in the current C locale (function) [edit] C documentation for towctrans Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/string/wide/towctrans&oldid=153713 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 18 June 2023, at 08:38. Privacy policy About cppreference.com Disclaimers