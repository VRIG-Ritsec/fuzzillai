std::is_eq, std::is_neq, std::is_lt, std::is_gt, std::is_lteq, std::is_gteq - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: is_eq, std:: is_neq, std:: is_lt, std:: is_gt, std:: is_lteq, std:: is_gteq From cppreference.com < cpp ‎ | utility C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Utilities library Language support Type support (basic types, RTTI) Library feature-test macros (C++20) Program utilities Variadic functions initializer_list (C++11) is_constant_evaluated (C++20) is_within_lifetime (C++26) source_location (C++20) Coroutine support (C++20) Contract support (C++26) Three-way comparison three_way_comparable three_way_comparable_with (C++20) (C++20) strong_ordering (C++20) weak_ordering (C++20) partial_ordering (C++20) common_comparison_category (C++20) compare_three_way_result (C++20) compare_three_way (C++20) strong_order (C++20) weak_order (C++20) partial_order (C++20) compare_strong_order_fallback (C++20) compare_weak_order_fallback (C++20) compare_partial_order_fallback (C++20) is_eq is_lt is_lteq (C++20) (C++20) (C++20) is_neq is_gt is_gteq (C++20) (C++20) (C++20) General utilities Function objects Bit manipulation (C++20) C-style bit manipulation (C++26) bitset hash (C++11) Relational operators (deprecated in C++20) rel_ops::operator!= rel_ops::operator> rel_ops::operator<= rel_ops::operator>= Integer comparison functions cmp_equal cmp_less cmp_less_than (C++20) (C++20) (C++20) cmp_not_equal cmp_greater cmp_greater_than (C++20) (C++20) (C++20) in_range (C++20) Swap and type operations swap ranges::swap (C++20) exchange (C++14) declval (C++11) to_underlying (C++23) forward (C++11) forward_like (C++23) move (C++11) move_if_noexcept (C++11) as_const (C++17) Common vocabulary types pair tuple (C++11) optional (C++17) any (C++17) variant (C++17) tuple_size (C++11) tuple_element (C++11) apply (C++17) make_from_tuple (C++17) expected (C++23) [edit] Defined in header <compare> constexpr bool is_eq ( std:: partial_ordering cmp ) noexcept ; (1) (since C++20) constexpr bool is_neq ( std:: partial_ordering cmp ) noexcept ; (2) (since C++20) constexpr bool is_lt ( std:: partial_ordering cmp ) noexcept ; (3) (since C++20) constexpr bool is_lteq ( std:: partial_ordering cmp ) noexcept ; (4) (since C++20) constexpr bool is_gt ( std:: partial_ordering cmp ) noexcept ; (5) (since C++20) constexpr bool is_gteq ( std:: partial_ordering cmp ) noexcept ; (6) (since C++20) These functions take a result of 3-way comparison and convert it to the result of one of the six relational operators Specifically, these functions return 1) cmp == 0 2) cmp ! = 0 3) cmp < 0 4) cmp <= 0 5) cmp > 0 6) cmp >= 0 Contents 1 Parameters 2 Return value 3 Example 4 See also [ edit ] Parameters cmp - result of 3-way comparison [ edit ] Return value bool result of the corresponding relational operation [ edit ] Example This section is incomplete Reason: no example [ edit ] See also partial_ordering (C++20) the result type of 3-way comparison that supports all 6 operators, is not substitutable, and allows incomparable values (class) [edit] Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/utility/compare/named_comparison_functions&oldid=157701 " Category : Todo no example Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español 日本語 Русский 中文 This page was last modified on 1 September 2023, at 12:28. Privacy policy About cppreference.com Disclaimers