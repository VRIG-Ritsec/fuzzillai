std::unexpect_t, std::unexpect - cppreference.com cppreference.com Create account Log in Namespaces Page Discussion Variants Views View Edit History Actions std:: unexpect_t, std:: unexpect From cppreference.com < cpp ‎ | utility ‎ | expected C++ Compiler support Freestanding and hosted Language Standard library Standard library headers Named requirements Feature test macros (C++20) Language support library Concepts library (C++20) Diagnostics library Memory management library Metaprogramming library (C++11) General utilities library Containers library Iterators library Ranges library (C++20) Algorithms library Strings library Text processing library Numerics library Date and time library Input/output library Filesystem library (C++17) Concurrency support library (C++11) Execution control library (C++26) Technical specifications Symbols index External libraries [edit] Utilities library Language support Type support (basic types, RTTI) Library feature-test macros (C++20) Program utilities Variadic functions initializer_list (C++11) is_constant_evaluated (C++20) is_within_lifetime (C++26) source_location (C++20) Coroutine support (C++20) Contract support (C++26) Three-way comparison three_way_comparable three_way_comparable_with (C++20) (C++20) strong_ordering (C++20) weak_ordering (C++20) partial_ordering (C++20) common_comparison_category (C++20) compare_three_way_result (C++20) compare_three_way (C++20) strong_order (C++20) weak_order (C++20) partial_order (C++20) compare_strong_order_fallback (C++20) compare_weak_order_fallback (C++20) compare_partial_order_fallback (C++20) is_eq is_lt is_lteq (C++20) (C++20) (C++20) is_neq is_gt is_gteq (C++20) (C++20) (C++20) General utilities Function objects Bit manipulation (C++20) C-style bit manipulation (C++26) bitset hash (C++11) Relational operators (deprecated in C++20) rel_ops::operator!= rel_ops::operator> rel_ops::operator<= rel_ops::operator>= Integer comparison functions cmp_equal cmp_less cmp_less_than (C++20) (C++20) (C++20) cmp_not_equal cmp_greater cmp_greater_than (C++20) (C++20) (C++20) in_range (C++20) Swap and type operations swap ranges::swap (C++20) exchange (C++14) declval (C++11) to_underlying (C++23) forward (C++11) forward_like (C++23) move (C++11) move_if_noexcept (C++11) as_const (C++17) Common vocabulary types pair tuple (C++11) optional (C++17) any (C++17) variant (C++17) tuple_size (C++11) tuple_element (C++11) apply (C++17) make_from_tuple (C++17) expected (C++23) [edit] std::expected Member functions expected::expected expected::~expected expected::operator= Observers expected::operator-> expected::operator* expected::operator bool expected::has_value expected::value expected::error expected::value_or expected::error_or Monadic operations expected::and_then expected::or_else expected::transform expected::transform_error Modifiers expected::emplace expected::swap Non-member functions operator== (std::expected) swap (std::expected) Helper classes unexpected bad_expected_access unexpect_t unexpect [edit] Defined in header <expected> struct unexpect_t { explicit unexpect_t ( ) = default ; } ; (1) (since C++23) inline constexpr std :: unexpect_t unexpect { } ; (2) (since C++23) 1) A tag type for in-place construction of an unexpected value in an std::expected object. 2) A constant of type const std :: unexpect_t which is usually directly passed to a constructor of std::expected to construct an unexpected value. [ edit ] Notes Like other construction tag types, unexpect_t is a trivial, empty class with an explicit default constructor. [ edit ] See also (constructor) constructs the expected object (public member function) [edit] in_place in_place_type in_place_index in_place_t in_place_type_t in_place_index_t (C++17) in-place construction tag (tag) [edit] Retrieved from " https://en.cppreference.com/mwiki/index.php?title=cpp/utility/expected/unexpect_t&oldid=177510 " Navigation Support us Recent changes FAQ Offline version Toolbox What links here Related changes Upload file Special pages Printable version Permanent link Page information In other languages Deutsch Español Français Italiano 日本語 Português Русский 中文 This page was last modified on 3 November 2024, at 06:01. Privacy policy About cppreference.com Disclaimers