Array.prototype.includes() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Array includes() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Español Français 日本語 한국어 Português (do Brasil) Русский 中文 (简体) 正體中文 (繁體) Array.prototype.includes() Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨August 2016⁩. Learn more See full compatibility Report feedback The includes() method of Array instances determines whether an array includes a certain value among its entries, returning true or false as appropriate. In this article Try it Syntax Description Examples Specifications Browser compatibility See also Try it const array = [1, 2, 3]; console.log(array.includes(2)); // Expected output: true const pets = ["cat", "dog", "bat"]; console.log(pets.includes("cat")); // Expected output: true console.log(pets.includes("at")); // Expected output: false Syntax js includes(searchElement) includes(searchElement, fromIndex) Parameters searchElement The value to search for. fromIndex Optional Zero-based index at which to start searching, converted to an integer . Negative index counts back from the end of the array — if -array.length <= fromIndex < 0 , fromIndex + array.length is used. However, the array is still searched from front to back in this case. If fromIndex < -array.length or fromIndex is omitted, 0 is used, causing the entire array to be searched. If fromIndex >= array.length , the array is not searched and false is returned. Return value A boolean value which is true if the value searchElement is found within the array (or the part of the array indicated by the index fromIndex , if specified). Description The includes() method compares searchElement to elements of the array using the SameValueZero algorithm. Values of zero are all considered to be equal, regardless of sign. (That is, -0 is equal to 0 ), but false is not considered to be the same as 0 . NaN can be correctly searched for. When used on sparse arrays , the includes() method iterates empty slots as if they have the value undefined . The includes() method is generic . It only expects the this value to have a length property and integer-keyed properties. Examples Using includes() js [1, 2, 3].includes(2); // true [1, 2, 3].includes(4); // false [1, 2, 3].includes(3, 3); // false [1, 2, 3].includes(3, -1); // true [1, 2, NaN].includes(NaN); // true ["1", "2", "3"].includes(3); // false fromIndex is greater than or equal to the array length If fromIndex is greater than or equal to the length of the array, false is returned. The array will not be searched. js const arr = ["a", "b", "c"]; arr.includes("c", 3); // false arr.includes("c", 100); // false Computed index is less than 0 If fromIndex is negative, the computed index is calculated to be used as a position in the array at which to begin searching for searchElement . If the computed index is less than or equal to 0 , the entire array will be searched. js // array length is 3 // fromIndex is -100 // computed index is 3 + (-100) = -97 const arr = ["a", "b", "c"]; arr.includes("a", -100); // true arr.includes("b", -100); // true arr.includes("c", -100); // true arr.includes("a", -2); // false Using includes() on sparse arrays You can search for undefined in a sparse array and get true . js console.log([1, , 3].includes(undefined)); // true Calling includes() on non-array objects The includes() method reads the length property of this and then accesses each property whose key is a nonnegative integer less than length . js const arrayLike = { length: 3, 0: 2, 1: 3, 2: 4, 3: 1, // ignored by includes() since length is 3 }; console.log(Array.prototype.includes.call(arrayLike, 2)); // true console.log(Array.prototype.includes.call(arrayLike, 1)); // false Specifications Specification ECMAScript® 2026 Language Specification # sec-array.prototype.includes Browser compatibility Loading… See also Polyfill of Array.prototype.includes in core-js es-shims polyfill of Array.prototype.includes Indexed collections guide Array Array.prototype.indexOf() Array.prototype.find() Array.prototype.findIndex() TypedArray.prototype.includes() String.prototype.includes() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 20, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Array Constructor Array() Static methods from() fromAsync() isArray() of() Static properties [Symbol .species] Instance methods at() concat() copyWithin() entries() every() fill() filter() find() findIndex() findLast() findLastIndex() flat() flatMap() forEach() includes() indexOf() join() keys() lastIndexOf() map() pop() push() reduce() reduceRight() reverse() shift() slice() some() sort() splice() toLocaleString() toReversed() toSorted() toSpliced() toString() unshift() values() with() [Symbol .iterator]() Instance properties length [Symbol .unscopables] Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .