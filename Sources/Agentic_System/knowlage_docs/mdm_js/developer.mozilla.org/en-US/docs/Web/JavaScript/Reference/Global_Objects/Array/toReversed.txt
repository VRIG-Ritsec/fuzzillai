Array.prototype.toReversed() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Array toReversed() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) 日本語 한국어 Русский 中文 (简体) Array.prototype.toReversed() Baseline 2023 Newly available Since ⁨July 2023⁩, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers. Learn more See full compatibility Report feedback The toReversed() method of Array instances is the copying counterpart of the reverse() method. It returns a new array with the elements in reversed order. In this article Syntax Description Examples Specifications Browser compatibility See also Syntax js toReversed() Parameters None. Return value A new array containing the elements in reversed order. Description The toReversed() method transposes the elements of the calling array object in reverse order and returns a new array. When used on sparse arrays , the toReversed() method iterates empty slots as if they have the value undefined . The toReversed() method is generic . It only expects the this value to have a length property and integer-keyed properties. Examples Reversing the elements in an array The following example creates an array items , containing three elements, then creates a new array that's the reverse of items . The items array remains unchanged. js const items = [1, 2, 3]; console.log(items); // [1, 2, 3] const reversedItems = items.toReversed(); console.log(reversedItems); // [3, 2, 1] console.log(items); // [1, 2, 3] Using toReversed() on sparse arrays The return value of toReversed() is never sparse. Empty slots become undefined in the returned array. js console.log([1, , 3].toReversed()); // [3, undefined, 1] console.log([1, , 3, 4].toReversed()); // [4, 3, undefined, 1] Calling toReversed() on non-array objects The toReversed() method reads the length property of this . It then visits each property having an integer key between length - 1 and 0 in descending order, adding the value of the current property to the end of the array to be returned. js const arrayLike = { length: 3, unrelated: "foo", 2: 4, }; console.log(Array.prototype.toReversed.call(arrayLike)); // [4, undefined, undefined] // The '0' and '1' indices are not present so they become undefined Specifications Specification ECMAScript® 2026 Language Specification # sec-array.prototype.toreversed Browser compatibility Loading… See also Polyfill of Array.prototype.toReversed in core-js es-shims polyfill of Array.prototype.toReversed Indexed collections guide Array.prototype.reverse() Array.prototype.toSorted() Array.prototype.toSpliced() Array.prototype.with() TypedArray.prototype.toReversed() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Array Constructor Array() Static methods from() fromAsync() isArray() of() Static properties [Symbol .species] Instance methods at() concat() copyWithin() entries() every() fill() filter() find() findIndex() findLast() findLastIndex() flat() flatMap() forEach() includes() indexOf() join() keys() lastIndexOf() map() pop() push() reduce() reduceRight() reverse() shift() slice() some() sort() splice() toLocaleString() toReversed() toSorted() toSpliced() toString() unshift() values() with() [Symbol .iterator]() Instance properties length [Symbol .unscopables] Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .