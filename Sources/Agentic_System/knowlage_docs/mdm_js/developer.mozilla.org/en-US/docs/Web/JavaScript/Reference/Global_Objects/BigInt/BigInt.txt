BigInt() constructor - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects BigInt BigInt() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 中文 (简体) BigInt() constructor Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨September 2020⁩. Learn more See full compatibility Report feedback The BigInt() function returns primitive values of type BigInt. In this article Syntax Examples Specifications Browser compatibility See also Syntax js BigInt(value) Note: BigInt() can only be called without new . Attempting to construct it with new throws a TypeError . Parameters value The value to be converted to a BigInt value. It may be a string, an integer, a boolean, or another BigInt . Return value A BigInt value. Number values must be integers and are converted to BigInts. The boolean value true becomes 1n , and false becomes 0n . Strings are parsed as if they are source text for integer literals, which means they can have leading and trailing whitespaces and can be prefixed with 0b , 0o , or 0x . Exceptions RangeError Thrown if the parameter is a non-integral number. TypeError Thrown in one of the following cases: The parameter cannot be converted to a primitive. After conversion to a primitive, the result is undefined , null , symbol . SyntaxError Thrown if the parameter is a string that cannot be parsed as a BigInt . Examples Using BigInt() to convert a number to a BigInt BigInt() is the only case where a number can be converted to a BigInt without throwing, because it's very explicit. However, only integers are allowed. js BigInt(123); // 123n BigInt(123.3); // RangeError: The number 123.3 cannot be converted to a BigInt because it is not an integer Using string values js BigInt("123"); // 123n BigInt("0b10101"); // 21n, which is 10101 in binary BigInt("0o123"); // 83n, which is 123 in octal BigInt("0x123"); // 291n, which is 123 in hexadecimal BigInt(" 123 "); // 123n, leading and trailing whitespaces are allowed Specifications Specification ECMAScript® 2026 Language Specification # sec-bigint-constructor Browser compatibility Loading… See also BigInt Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects BigInt Constructor BigInt() Static methods asIntN() asUintN() Instance methods toLocaleString() toString() valueOf() Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .