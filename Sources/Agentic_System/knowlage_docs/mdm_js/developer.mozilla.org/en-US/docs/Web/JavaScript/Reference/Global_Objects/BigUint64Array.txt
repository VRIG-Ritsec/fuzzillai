BigUint64Array - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects BigUint64Array Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 BigUint64Array Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨September 2021⁩. Learn more See full compatibility Report feedback The BigUint64Array typed array represents an array of 64-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0n unless initialization data is explicitly provided. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation). BigUint64Array is a subclass of the hidden TypedArray class. In this article Constructor Static properties Static methods Instance properties Instance methods Examples Specifications Browser compatibility See also Constructor BigUint64Array() Creates a new BigUint64Array object. Static properties Also inherits static properties from its parent TypedArray . BigUint64Array.BYTES_PER_ELEMENT Returns a number value of the element size. 8 in the case of BigUint64Array . Static methods Inherits static methods from its parent TypedArray . Instance properties Also inherits instance properties from its parent TypedArray . These properties are defined on BigUint64Array.prototype and shared by all BigUint64Array instances. BigUint64Array.prototype.BYTES_PER_ELEMENT Returns a number value of the element size. 8 in the case of a BigUint64Array . BigUint64Array.prototype.constructor The constructor function that created the instance object. For BigUint64Array instances, the initial value is the BigUint64Array constructor. Instance methods Inherits instance methods from its parent TypedArray . Examples Different ways to create a BigUint64Array js // From a length const biguint64 = new BigUint64Array(2); biguint64[0] = 42n; console.log(biguint64[0]); // 42n console.log(biguint64.length); // 2 console.log(biguint64.BYTES_PER_ELEMENT); // 8 // From an array const x = new BigUint64Array([21n, 31n]); console.log(x[1]); // 31n // From another TypedArray const y = new BigUint64Array(x); console.log(y[0]); // 21n // From an ArrayBuffer const buffer = new ArrayBuffer(64); const z = new BigUint64Array(buffer, 8, 4); console.log(z.byteOffset); // 8 // From an iterable const iterable = (function* () { yield* [1n, 2n, 3n]; })(); const biguint64FromIterable = new BigUint64Array(iterable); console.log(biguint64FromIterable); // BigUint64Array [1n, 2n, 3n] Specifications Specification ECMAScript® 2026 Language Specification # sec-typedarray-objects Browser compatibility Loading… See also JavaScript typed arrays guide TypedArray ArrayBuffer DataView Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects BigUint64Array Constructor BigUint64Array() Inheritance TypedArray Static methods from() of() Static properties BYTES_PER_ELEMENT [Symbol .species] Instance methods at() copyWithin() entries() every() fill() filter() find() findIndex() findLast() findLastIndex() forEach() includes() indexOf() join() keys() lastIndexOf() map() reduce() reduceRight() reverse() set() slice() some() sort() subarray() toLocaleString() toReversed() toSorted() toString() values() with() [Symbol .iterator]() Instance properties buffer byteLength byteOffset length Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages BigInt64Array Float16Array Float32Array Float64Array Int8Array Int16Array Int32Array Uint8Array Uint8ClampedArray Uint16Array Uint32Array Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .