Boolean() constructor - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Boolean Boolean() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Español Français 日本語 한국어 中文 (简体) Boolean() constructor Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨July 2015⁩. Learn more See full compatibility Report feedback The Boolean() constructor creates Boolean objects. When called as a function, it returns primitive values of type Boolean. In this article Try it Syntax Description Examples Specifications Browser compatibility See also Try it const flag = new Boolean(); console.log(typeof flag); // Expected output: object console.log(flag === false); // Expected output: false const flag2 = Boolean(); console.log(typeof flag2); // Expected output: boolean console.log(flag2 === false); // Expected output: true Syntax js new Boolean(value) Boolean(value) Note: Boolean() can be called with or without new , but with different effects. See Return value . Parameters value The initial value of the Boolean object. Return value When Boolean() is called as a function (without new ), it returns value coerced to a boolean primitive . When Boolean() is called as a constructor (with new ), it coerces value to a boolean primitive and returns a wrapping Boolean object, which is not a primitive. Warning: You should rarely find yourself using Boolean as a constructor. Description The value passed as the first parameter is converted to a boolean value . If the value is omitted or is 0 , -0 , 0n , null , false , NaN , undefined , or the empty string ( "" ), then the object has an initial value of false . All other values, including any object, an empty array ( [] ), or the string "false" , create an object with an initial value of true . Note: When the non-standard property document.all is used as an argument for this constructor, the result is a Boolean object with the value false . This property is legacy and non-standard and should not be used. Examples Creating Boolean objects with an initial value of false js const bZero = new Boolean(0); const bNull = new Boolean(null); const bEmptyString = new Boolean(""); const bfalse = new Boolean(false); typeof bfalse; // "object" Boolean(bfalse); // true Note how converting a Boolean object to a primitive with Boolean() always yields true , even if the object holds a value of false . You are therefore always advised to avoid constructing Boolean wrapper objects. If you need to take the primitive value out from the wrapper object, instead of using the Boolean() function, use the object's valueOf() method instead. js const bfalse = new Boolean(false); bfalse.valueOf(); // false Creating Boolean objects with an initial value of true js const btrue = new Boolean(true); const btrueString = new Boolean("true"); const bfalseString = new Boolean("false"); const bSuLin = new Boolean("Su Lin"); const bArrayProto = new Boolean([]); const bObjProto = new Boolean({}); Specifications Specification ECMAScript® 2026 Language Specification # sec-boolean-constructor Browser compatibility Loading… See also Boolean Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Boolean Constructor Boolean() Instance methods toString() valueOf() Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .