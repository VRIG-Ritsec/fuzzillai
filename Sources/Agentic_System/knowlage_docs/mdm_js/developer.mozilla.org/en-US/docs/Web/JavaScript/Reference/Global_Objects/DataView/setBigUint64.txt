DataView.prototype.setBigUint64() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects DataView setBigUint64() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 中文 (简体) DataView.prototype.setBigUint64() Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨September 2021⁩. Learn more See full compatibility Report feedback The setBigUint64() method of DataView instances takes a BigInt and stores it as a 64-bit unsigned integer in the 8 bytes starting at the specified byte offset of this DataView . There is no alignment constraint; multi-byte values may be stored at any offset within bounds. In this article Try it Syntax Examples Specifications Browser compatibility See also Try it // Create an ArrayBuffer with a size in bytes const buffer = new ArrayBuffer(16); // Highest possible BigInt value that fits in an unsigned 64-bit integer const max = 2n ** 64n - 1n; const view = new DataView(buffer); view.setBigUint64(1, max); console.log(view.getBigUint64(1)); // Expected output: 18446744073709551615n Syntax js setBigUint64(byteOffset, value) setBigUint64(byteOffset, value, littleEndian) Parameters byteOffset The offset, in bytes, from the start of the view to store the data in. value The value to set as a BigInt . For how the value is encoded in bytes, see Value encoding and normalization . littleEndian Optional Indicates whether the data is stored in little- or big-endian format. If false or undefined , a big-endian value is written. Return value undefined . Exceptions RangeError Thrown if the byteOffset is set such that it would store beyond the end of the view. Examples Using setBigUint64() js const buffer = new ArrayBuffer(10); const dataview = new DataView(buffer); dataview.setBigUint64(0, 3n); dataview.getBigUint64(1); // 768n Specifications Specification ECMAScript® 2026 Language Specification # sec-dataview.prototype.setbiguint64 Browser compatibility Loading… See also JavaScript typed arrays guide DataView ArrayBuffer BigUint64Array Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects DataView Constructor DataView() Instance methods getBigInt64() getBigUint64() getFloat16() getFloat32() getFloat64() getInt8() getInt16() getInt32() getUint8() getUint16() getUint32() setBigInt64() setBigUint64() setFloat16() setFloat32() setFloat64() setInt8() setInt16() setInt32() setUint8() setUint16() setUint32() Instance properties buffer byteLength byteOffset Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .