Date.prototype.setYear() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Date setYear() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 Português (do Brasil) Русский 中文 (简体) Date.prototype.setYear() Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time. The setYear() method of Date instances sets the year for a specified date according to local time. However, the way the legacy setYear() method sets year values is different from how the preferred setFullYear() method sets year values — and in some cases, also different from how new Date() and Date.parse() set year values. Specifically, given two-digit numbers, such as 22 and 61 : setYear() interprets any two-digit number as an offset to 1900 ; so date.setYear(22) results in the year value being set to 1922 , and date.setYear(61) results in the year value being set to 1961 . (In contrast, while new Date(61, 1) also results in the year value being set to 1961 , new Date("2/1/22") results in the year value being set to 2022 ; and similarly for Date.parse() ). setFullYear() does no special interpretation but instead uses the literal two-digit value as-is to set the year; so date.setFullYear(61) results in the year value being set to 0061 , and date.setFullYear(22) results in the year value being set to 0022 . Because of those differences in behavior, you should no longer use the legacy setYear() method, but should instead use the preferred setFullYear() method. In this article Syntax Description Examples Specifications Browser compatibility See also Syntax js setYear(yearValue) Parameters yearValue An integer. Return value Changes the Date object in place, and returns its new timestamp . If yearValue is NaN (or other values that get coerced to NaN , such as undefined ), the date is set to Invalid Date and NaN is returned. Description If yearValue is a number between 0 and 99 (inclusive), then the year for dateObj is set to 1900 + yearValue . Otherwise, the year for dateObj is set to yearValue . Examples Using setYear() The first two lines set the year to 1996. The third sets the year to 2000. js const theBigDay = new Date(); theBigDay.setYear(96); theBigDay.setYear(1996); theBigDay.setYear(2000); Specifications Specification ECMAScript® 2026 Language Specification # sec-date.prototype.setyear Browser compatibility Loading… See also Polyfill of Date.prototype.setYear in core-js Date.prototype.getFullYear() Date.prototype.getUTCFullYear() Date.prototype.setFullYear() Date.prototype.setUTCFullYear() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Date Constructor Date() Static methods now() parse() UTC() Instance methods getDate() getDay() getFullYear() getHours() getMilliseconds() getMinutes() getMonth() getSeconds() getTime() getTimezoneOffset() getUTCDate() getUTCDay() getUTCFullYear() getUTCHours() getUTCMilliseconds() getUTCMinutes() getUTCMonth() getUTCSeconds() getYear() Deprecated setDate() setFullYear() setHours() setMilliseconds() setMinutes() setMonth() setSeconds() setTime() setUTCDate() setUTCFullYear() setUTCHours() setUTCMilliseconds() setUTCMinutes() setUTCMonth() setUTCSeconds() setYear() Deprecated toDateString() toISOString() toJSON() toLocaleDateString() toLocaleString() toLocaleTimeString() toString() toTemporalInstant() Experimental toTimeString() toUTCString() valueOf() [Symbol .toPrimitive]() Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .