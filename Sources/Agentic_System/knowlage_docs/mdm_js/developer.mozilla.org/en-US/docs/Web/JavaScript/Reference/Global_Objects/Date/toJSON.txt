Date.prototype.toJSON() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Date toJSON() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Español Français 日本語 한국어 Português (do Brasil) Русский 中文 (简体) Date.prototype.toJSON() Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨July 2015⁩. Learn more See full compatibility Report feedback The toJSON() method of Date instances returns a string representing this date in the same ISO format as toISOString() . In this article Try it Syntax Description Examples Specifications Browser compatibility See also Try it const event = new Date("August 19, 1975 23:15:30 UTC"); const jsonDate = event.toJSON(); console.log(jsonDate); // Expected output: "1975-08-19T23:15:30.000Z" console.log(new Date(jsonDate).toUTCString()); // Expected output: "Tue, 19 Aug 1975 23:15:30 GMT" Syntax js toJSON() Parameters None. Return value A string representing the given date in the date time string format according to universal time, or null when the date is invalid . For valid dates, the return value is the same as that of toISOString() . Description The toJSON() method is automatically called by JSON.stringify() when a Date object is stringified. This method is generally intended to, by default, usefully serialize Date objects during JSON serialization, which can then be deserialized using the Date() constructor as the reviver of JSON.parse() . The method first attempts to convert its this value to a primitive by calling its [Symbol.toPrimitive]() (with "number" as hint), valueOf() , and toString() methods, in that order. If the result is a non-finite number, null is returned. (This generally corresponds to an invalid date, whose valueOf() returns NaN .) Otherwise, if the converted primitive is not a number or is a finite number, the return value of this.toISOString() is returned. Note that the method does not check whether the this value is a valid Date object. However, calling Date.prototype.toJSON() on non- Date objects fails unless the object's number primitive representation is NaN , or the object also has a toISOString() method. Examples Using toJSON() js const jsonDate = new Date(0).toJSON(); // '1970-01-01T00:00:00.000Z' const backToDate = new Date(jsonDate); console.log(jsonDate); // 1970-01-01T00:00:00.000Z Serialization round-tripping When parsing JSON containing date strings, you can use the Date() constructor to revive them into the original date objects. js const fileData = { author: "Maria", title: "Date.prototype.toJSON()", createdAt: new Date(2019, 3, 15), updatedAt: new Date(2020, 6, 26), }; const response = JSON.stringify(fileData); // Imagine transmission through network const data = JSON.parse(response, (key, value) => { if (key === "createdAt" || key === "updatedAt") { return new Date(value); } return value; }); console.log(data); Note: The reviver of JSON.parse() must be specific to the payload shape you expect, because the serialization is irreversible : it's not possible to distinguish between a string that represents a Date and a normal string. Specifications Specification ECMAScript® 2026 Language Specification # sec-date.prototype.tojson Browser compatibility Loading… See also Date.prototype.toLocaleDateString() Date.prototype.toTimeString() Date.prototype.toUTCString() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Date Constructor Date() Static methods now() parse() UTC() Instance methods getDate() getDay() getFullYear() getHours() getMilliseconds() getMinutes() getMonth() getSeconds() getTime() getTimezoneOffset() getUTCDate() getUTCDay() getUTCFullYear() getUTCHours() getUTCMilliseconds() getUTCMinutes() getUTCMonth() getUTCSeconds() getYear() Deprecated setDate() setFullYear() setHours() setMilliseconds() setMinutes() setMonth() setSeconds() setTime() setUTCDate() setUTCFullYear() setUTCHours() setUTCMilliseconds() setUTCMinutes() setUTCMonth() setUTCSeconds() setYear() Deprecated toDateString() toISOString() toJSON() toLocaleDateString() toLocaleString() toLocaleTimeString() toString() toTemporalInstant() Experimental toTimeString() toUTCString() valueOf() [Symbol .toPrimitive]() Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .