DisposableStack.prototype.defer() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects DisposableStack defer() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) DisposableStack.prototype.defer() Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback The defer() method of DisposableStack instances takes a callback function to be called when the stack is disposed. In this article Syntax Description Examples Specifications Browser compatibility See also Syntax js defer(onDispose) Parameters onDispose A function that will be called when the stack is disposed. The function receives no arguments. Return value None ( undefined ). Exceptions TypeError Thrown if onDispose is not a function. ReferenceError Thrown if the stack is already disposed. Description The primary purpose of defer() is to register a cleanup callback that's not specific to the disposal of a particular resource. If the callback is specific to a resource, you should use use() or adopt() instead. You can also use defer when the resource is not claimed within your code: js function consumeReader(reader) { using disposer = new DisposableStack(); disposer.defer(() => reader.releaseLock()); // Do something with reader } Examples Using defer() This function sets a simple lock to prevent multiple async operations from running at the same time. The lock is released when the function completes. js let isLocked = false; async function requestWithLock(url, options) { if (isLocked) { return undefined; } using disposer = new DisposableStack(); isLocked = true; disposer.defer(() => (isLocked = false)); const data = await fetch(url, options).then((res) => res.json()); return data; } Specifications Specification ECMAScript Async Explicit Resource Management # sec-asyncdisposablestack.prototype.defer Browser compatibility Loading… See also JavaScript resource management DisposableStack DisposableStack.prototype.adopt() DisposableStack.prototype.use() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 30, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects DisposableStack Constructor DisposableStack() Instance methods adopt() defer() dispose() move() use() [Symbol .dispose]() Instance properties disposed Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .