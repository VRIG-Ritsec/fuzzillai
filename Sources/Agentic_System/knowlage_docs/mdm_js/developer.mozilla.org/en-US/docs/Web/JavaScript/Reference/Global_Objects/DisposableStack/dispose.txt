DisposableStack.prototype.dispose() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects DisposableStack dispose() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) DisposableStack.prototype.dispose() Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback The dispose() method of DisposableStack instances disposes this stack by calling all disposers registered to it in reverse order of registration. If the stack is already disposed, this method does nothing. It performs the same action as using disposer = new DisposableStack() at scope exit. It can be used if you need to clean up at a point other than scope exit. In this article Syntax Examples Specifications Browser compatibility See also Syntax js dispose() Parameters None. Return value None ( undefined ). Exceptions SuppressedError Thrown if multiple disposers in the stack threw an error. If only one error is thrown, it is rethrown as-is. Otherwise, for each additional error, a new SuppressedError is created, with the original error as the suppressed property, and the new error as the error property. Examples Disposing a stack Here we push three disposers to the stack, using the use() , adopt() , and defer() methods. When dispose() is called, the disposers are called in reverse order of registration. Note that usually you don't need to call dispose() manually. Declare the stack with using , and its [Symbol.dispose]() method will be automatically called when the stack goes out of scope. js class Resource { dispose() { console.log("Resource disposed"); } [Symbol.dispose]() { console.log("Resource disposed via Symbol.dispose"); } } { const disposer = new DisposableStack(); const resource = disposer.use(new Resource()); const resource2 = disposer.adopt(new Resource(), (resource) => resource.dispose(), ); disposer.defer(() => console.log("Deferred disposer")); disposer.dispose(); // Logs in order: // Deferred disposer // Resource disposed // Resource disposed via Symbol.dispose } Specifications Specification ECMAScript Async Explicit Resource Management # sec-disposablestack.prototype.dispose Browser compatibility Loading… See also JavaScript resource management DisposableStack DisposableStack.prototype.adopt() DisposableStack.prototype.defer() DisposableStack.prototype.use() DisposableStack.prototype[Symbol.dispose]() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Aug 2, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects DisposableStack Constructor DisposableStack() Instance methods adopt() defer() dispose() move() use() [Symbol .dispose]() Instance properties disposed Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .