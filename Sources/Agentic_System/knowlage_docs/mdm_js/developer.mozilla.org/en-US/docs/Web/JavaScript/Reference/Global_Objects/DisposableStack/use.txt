DisposableStack.prototype.use() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects DisposableStack use() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) DisposableStack.prototype.use() Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback The use() method of DisposableStack instances registers a value that implements the disposable protocol to the stack. In this article Syntax Description Examples Specifications Browser compatibility See also Syntax js use(value) Parameters value The value to register to the stack. Must either contain a [Symbol.dispose]() method, or be null or undefined . Return value The same value that was passed in. Exceptions TypeError Thrown if value is not null or undefined , and does not contain a [Symbol.dispose]() method. ReferenceError Thrown if the stack is already disposed. Description The primary purpose of use() is to register a value that implements the disposable protocol to the stack, as the equivalent of the using declaration. If the value does not implement the disposable protocol (it doesn't have the [Symbol.dispose]() method), use adopt() instead, passing a callback that calls the resource's cleanup method. You should make your resource registered as soon as it's declared. This means you should always wrap your resource acquisition expression in use() , instead of extracting it to a separate statement. js using disposer = new DisposableStack(); const reader = stream.getReader(); disposer.use(reader); Examples Using use() This code consumes a ReadableStream via a ReadableStreamDefaultReader . The reader is automatically closed when the function completes, assuming it implements an [Symbol.dispose]() method that synchronously releases the lock on the stream. js { using disposer = new DisposableStack(); const reader = disposer.use(stream.getReader()); const { value, done } = reader.read(); if (!done) { // Process the value } // The reader.releaseLock() method is called here before exiting } Specifications Specification ECMAScript Async Explicit Resource Management # sec-disposablestack.prototype.use Browser compatibility Loading… See also JavaScript resource management DisposableStack DisposableStack.prototype.adopt() DisposableStack.prototype.defer() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 30, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects DisposableStack Constructor DisposableStack() Instance methods adopt() defer() dispose() move() use() [Symbol .dispose]() Instance properties disposed Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .