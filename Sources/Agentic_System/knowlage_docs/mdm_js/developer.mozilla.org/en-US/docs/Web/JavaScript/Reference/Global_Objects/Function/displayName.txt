Function: displayName - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Function displayName Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Español Français 日本語 한국어 Português (do Brasil) Русский 中文 (简体) Function: displayName Non-standard: This feature is not standardized. We do not recommend using non-standard features in production, as they have limited browser support, and may change or be removed. However, they can be a suitable alternative in specific cases where no standard option exists. The optional displayName property of a Function instance specifies the display name of the function. In this article Value Description Examples Specifications Browser compatibility See also Value The displayName property is not initially present on any function — it's added by the code authors. For the purpose of display, it should be a string. Description The displayName property, if present, may be preferred by consoles and profilers over the name property to be displayed as the name of a function. Among browsers, only the Firefox console utilizes this property. React devtools also use the displayName property when displaying the component tree. Firefox does some basic attempts to decode the displayName that's possibly generated by the anonymous JavaScript functions naming convention algorithm. The following patterns are detected: If displayName ends with a sequence of alphanumeric characters, _ , and $ , the longest such suffix is displayed. If displayName ends with a sequence of [] -enclosed characters, that sequence is displayed without the square brackets. If displayName ends with a sequence of alphanumeric characters and _ followed by some / , . , or < , the sequence is returned without the trailing / , . , or < characters. If displayName ends with a sequence of alphanumeric characters and _ followed by (^) , the sequence is displayed without the (^) . If none of the above patterns match, the entire displayName is displayed. Examples Setting a displayName By entering the following in a Firefox console, it should display as something like function MyFunction() : js function a() {} a.displayName = "MyFunction"; a; // function MyFunction() Changing displayName dynamically You can dynamically change the displayName of a function: js const object = { // anonymous someMethod: function someMethod(value) { someMethod.displayName = `someMethod (${value})`; }, }; console.log(object.someMethod.displayName); // undefined object.someMethod("123"); console.log(object.someMethod.displayName); // "someMethod (123)" Cleaning of displayName Firefox devtools would clean up a few common patterns in the displayName property before displaying it. js function foo() {} function testName(name) { foo.displayName = name; console.log(foo); } testName("$foo$"); // function $foo$() testName("foo bar"); // function bar() testName("Foo.prototype.add"); // function add() testName("foo ."); // function foo .() testName("foo <"); // function foo <() testName("foo?"); // function foo?() testName("foo()"); // function foo()() testName("[...]"); // function ...() testName("foo<"); // function foo() testName("foo..."); // function foo() testName("foo(^)"); // function foo() Specifications Not part of any standard. Browser compatibility Loading… See also Function.prototype.name Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Function Constructor Function() Instance methods apply() bind() call() toString() [Symbol .hasInstance]() Instance properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .