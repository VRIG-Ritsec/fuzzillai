Intl.DisplayNames - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Intl Intl.DisplayNames Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 中文 (简体) Intl.DisplayNames Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨April 2021⁩. Learn more See full compatibility Report feedback The Intl.DisplayNames object enables the consistent translation of language, region and script display names. In this article Try it Constructor Static methods Instance properties Instance methods Examples Specifications Browser compatibility See also Try it const regionNamesInEnglish = new Intl.DisplayNames(["en"], { type: "region" }); const regionNamesInTraditionalChinese = new Intl.DisplayNames(["zh-Hant"], { type: "region", }); console.log(regionNamesInEnglish.of("US")); // Expected output: "United States" console.log(regionNamesInTraditionalChinese.of("US")); // Expected output: "美國" Constructor Intl.DisplayNames() Creates a new Intl.DisplayNames object. Static methods Intl.DisplayNames.supportedLocalesOf() Returns an array containing those of the provided locales that are supported without having to fall back to the runtime's default locale. Instance properties These properties are defined on Intl.DisplayNames.prototype and shared by all Intl.DisplayNames instances. Intl.DisplayNames.prototype.constructor The constructor function that created the instance object. For Intl.DisplayNames instances, the initial value is the Intl.DisplayNames constructor. Intl.DisplayNames.prototype[Symbol.toStringTag] The initial value of the [Symbol.toStringTag] property is the string "Intl.DisplayNames" . This property is used in Object.prototype.toString() . Instance methods Intl.DisplayNames.prototype.of() This method receives a code and returns a string based on the locale and options provided when instantiating Intl.DisplayNames . Intl.DisplayNames.prototype.resolvedOptions() Returns a new object with properties reflecting the locale and formatting options computed during initialization of the object. Examples Region Code Display Names To create an Intl.DisplayNames for a locale and get the display name for a region code. js // Get display names of region in English let regionNames = new Intl.DisplayNames(["en"], { type: "region" }); regionNames.of("419"); // "Latin America" regionNames.of("BZ"); // "Belize" regionNames.of("US"); // "United States" regionNames.of("BA"); // "Bosnia & Herzegovina" regionNames.of("MM"); // "Myanmar (Burma)" // Get display names of region in Traditional Chinese regionNames = new Intl.DisplayNames(["zh-Hant"], { type: "region" }); regionNames.of("419"); // "拉丁美洲" regionNames.of("BZ"); // "貝里斯" regionNames.of("US"); // "美國" regionNames.of("BA"); // "波士尼亞與赫塞哥維納" regionNames.of("MM"); // "緬甸" Language Display Names To create an Intl.DisplayNames for a locale and get the display name for a language-script-region sequence. js // Get display names of language in English let languageNames = new Intl.DisplayNames(["en"], { type: "language" }); languageNames.of("fr"); // "French" languageNames.of("de"); // "German" languageNames.of("fr-CA"); // "Canadian French" languageNames.of("zh-Hant"); // "Traditional Chinese" languageNames.of("en-US"); // "American English" languageNames.of("zh-TW"); // "Chinese (Taiwan)"] // Get display names of language in Traditional Chinese languageNames = new Intl.DisplayNames(["zh-Hant"], { type: "language" }); languageNames.of("fr"); // "法文" languageNames.of("zh"); // "中文" languageNames.of("de"); // "德文" Script Code Display Names To create an Intl.DisplayNames for a locale and get the display name for a script code. js // Get display names of script in English let scriptNames = new Intl.DisplayNames(["en"], { type: "script" }); // Get script names scriptNames.of("Latn"); // "Latin" scriptNames.of("Arab"); // "Arabic" scriptNames.of("Kana"); // "Katakana" // Get display names of script in Traditional Chinese scriptNames = new Intl.DisplayNames(["zh-Hant"], { type: "script" }); scriptNames.of("Latn"); // "拉丁文" scriptNames.of("Arab"); // "阿拉伯文" scriptNames.of("Kana"); // "片假名" Currency Code Display Names To create an Intl.DisplayNames for a locale and get the display name for currency code. js // Get display names of currency code in English let currencyNames = new Intl.DisplayNames(["en"], { type: "currency" }); // Get currency names currencyNames.of("USD"); // "US Dollar" currencyNames.of("EUR"); // "Euro" currencyNames.of("TWD"); // "New Taiwan Dollar" currencyNames.of("CNY"); // "Chinese Yuan" // Get display names of currency code in Traditional Chinese currencyNames = new Intl.DisplayNames(["zh-Hant"], { type: "currency" }); currencyNames.of("USD"); // "美元" currencyNames.of("EUR"); // "歐元" currencyNames.of("TWD"); // "新台幣" currencyNames.of("CNY"); // "人民幣" Specifications Specification ECMAScript® 2026 Internationalization API Specification # intl-displaynames-objects Browser compatibility Loading… See also Polyfill of Intl.DisplayNames in FormatJS Intl Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Intl .DisplayNames Constructor Intl .DisplayNames() Static methods supportedLocalesOf() Instance methods of() resolvedOptions() Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages Intl Intl .Collator Intl .DateTimeFormat Intl .DurationFormat Intl .ListFormat Intl .Locale Intl .NumberFormat Intl .PluralRules Intl .RelativeTimeFormat Intl .Segmenter Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .