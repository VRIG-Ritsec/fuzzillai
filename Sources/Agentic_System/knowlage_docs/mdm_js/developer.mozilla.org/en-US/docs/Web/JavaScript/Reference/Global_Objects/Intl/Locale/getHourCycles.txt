Intl.Locale.prototype.getHourCycles() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Intl Intl.Locale getHourCycles() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 Intl.Locale.prototype.getHourCycles() Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback The getHourCycles() method of Intl.Locale instances returns a list of one or more unique hour cycle identifiers for this locale. Note: In some versions of some browsers, this method was implemented as an accessor property called hourCycles . However, because it returns a new array on each access, it is now implemented as a method to prevent the situation of locale.hourCycles === locale.hourCycles returning false . Check the browser compatibility table for details. In this article Syntax Examples Specifications Browser compatibility See also Syntax js getHourCycles() Parameters None. Return value An array of strings representing all hour cycle types commonly used for the Locale , sorted in descending preference. If the Locale already has an hourCycle , then the returned array contains that single value. Below is a list of supported hour cycle types. Supported hour cycle types h12 Hour system using 1–12; corresponds to 'h' in patterns. The 12 hour clock, with midnight starting at 12:00 am. As used, for example, in the United States. h23 Hour system using 0–23; corresponds to 'H' in patterns. The 24 hour clock, with midnight starting at 0:00. h11 Hour system using 0–11; corresponds to 'K' in patterns. The 12 hour clock, with midnight starting at 0:00 am. Mostly used in Japan. h24 Hour system using 1–24; corresponds to 'k' in pattern. The 24 hour clock, with midnight starting at 24:00. Not used anywhere. Examples Obtaining supported hour cycles If the Locale object doesn't have a hourCycle already, getHourCycles() lists all commonly-used hour cycle identifiers for the given Locale . For examples of explicitly setting a hourCycle , see hourCycle examples . js const arEG = new Intl.Locale("ar-EG"); console.log(arEG.getHourCycles()); // ["h12"] js const jaJP = new Intl.Locale("ja-JP"); console.log(jaJP.getHourCycles()); // ["h23"] Specifications Specification Intl Locale Info Proposal # sec-Intl.Locale.prototype.getHourCycles Browser compatibility Loading… See also Intl.Locale Intl.Locale.prototype.hourCycle Unicode Hour Cycle Identifier in the Unicode locale data markup language spec Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Intl .Locale Constructor Intl .Locale() Instance methods getCalendars() getCollations() getHourCycles() getNumberingSystems() getTextInfo() getTimeZones() getWeekInfo() maximize() minimize() toString() Instance properties baseName calendar caseFirst collation hourCycle language numberingSystem numeric region script variants Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages Intl Intl .Collator Intl .DateTimeFormat Intl .DisplayNames Intl .DurationFormat Intl .ListFormat Intl .NumberFormat Intl .PluralRules Intl .RelativeTimeFormat Intl .Segmenter Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .