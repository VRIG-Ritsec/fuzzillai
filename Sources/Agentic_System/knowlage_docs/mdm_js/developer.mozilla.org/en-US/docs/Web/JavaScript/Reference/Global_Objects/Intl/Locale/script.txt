Intl.Locale.prototype.script - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Intl Intl.Locale script Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 Intl.Locale.prototype.script Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨September 2020⁩. Learn more See full compatibility Report feedback The script accessor property of Intl.Locale instances returns the script used for writing the particular language used in this locale. In this article Description Examples Specifications Browser compatibility See also Description Script, sometimes called writing system, is one of the core attributes of a locale. It indicates the set of symbols, or glyphs, that are used to write a particular language. For instance, the script associated with English is Latin, whereas the script typically associated with Korean is Hangul. In many cases, denoting a script is not strictly necessary, since the language (which is necessary) is only written in a single script. There are exceptions to this rule, however, and it is important to indicate the script when multiple scripts are applicable. The script property's value is set at construction time, either through the part of the locale identifier after language or through the script option of the Intl.Locale() constructor. The latter takes priority if they are both present; and if neither is present, the property has value undefined . The set accessor of script is undefined . You cannot change this property directly. Examples Like other locale subtags, the script can be added to the Intl.Locale object via the locale string, or a configuration object argument to the constructor. Adding a script via the locale string The script, if present, is the second part of a valid Unicode language identifier string, and can be added to the initial locale identifier string that is passed into the Intl.Locale() constructor. Note that the script is not a required part of a locale identifier. js const locale = new Intl.Locale("en-Latn-US"); console.log(locale.script); // "Latn" Adding a script via the configuration object argument The Intl.Locale() constructor has an optional configuration object argument. Set the script property of the configuration object to your desired script, and then pass it into the constructor. js const locale = new Intl.Locale("fr-FR", { script: "Latn" }); console.log(locale.script); // "Latn" Specifications Specification ECMAScript® 2026 Internationalization API Specification # sec-Intl.Locale.prototype.script Browser compatibility Loading… See also Intl.Locale Unicode script subtag in the Unicode locale data markup language spec Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 22, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Intl .Locale Constructor Intl .Locale() Instance methods getCalendars() getCollations() getHourCycles() getNumberingSystems() getTextInfo() getTimeZones() getWeekInfo() maximize() minimize() toString() Instance properties baseName calendar caseFirst collation hourCycle language numberingSystem numeric region script variants Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages Intl Intl .Collator Intl .DateTimeFormat Intl .DisplayNames Intl .DurationFormat Intl .ListFormat Intl .NumberFormat Intl .PluralRules Intl .RelativeTimeFormat Intl .Segmenter Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .