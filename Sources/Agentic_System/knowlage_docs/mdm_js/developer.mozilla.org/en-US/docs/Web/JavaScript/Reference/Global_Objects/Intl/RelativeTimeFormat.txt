Intl.RelativeTimeFormat - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Intl Intl.RelativeTimeFormat Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Español Français 日本語 한국어 Português (do Brasil) 中文 (简体) Intl.RelativeTimeFormat Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨September 2020⁩. Learn more See full compatibility Report feedback The Intl.RelativeTimeFormat object enables language-sensitive relative time formatting. In this article Try it Constructor Static methods Instance properties Instance methods Examples Specifications Browser compatibility See also Try it const rtf1 = new Intl.RelativeTimeFormat("en", { style: "short" }); console.log(rtf1.format(3, "quarter")); // Expected output: "in 3 qtrs." console.log(rtf1.format(-1, "day")); // Expected output: "1 day ago" const rtf2 = new Intl.RelativeTimeFormat("es", { numeric: "auto" }); console.log(rtf2.format(2, "day")); // Expected output: "pasado mañana" Constructor Intl.RelativeTimeFormat() Creates a new Intl.RelativeTimeFormat object. Static methods Intl.RelativeTimeFormat.supportedLocalesOf() Returns an array containing those of the provided locales that are supported without having to fall back to the runtime's default locale. Instance properties These properties are defined on Intl.RelativeTimeFormat.prototype and shared by all Intl.RelativeTimeFormat instances. Intl.RelativeTimeFormat.prototype.constructor The constructor function that created the instance object. For Intl.RelativeTimeFormat instances, the initial value is the Intl.RelativeTimeFormat constructor. Intl.RelativeTimeFormat.prototype[Symbol.toStringTag] The initial value of the [Symbol.toStringTag] property is the string "Intl.RelativeTimeFormat" . This property is used in Object.prototype.toString() . Instance methods Intl.RelativeTimeFormat.prototype.format() Formats a value and a unit according to the locale and formatting options of the given Intl.RelativeTimeFormat object. Intl.RelativeTimeFormat.prototype.formatToParts() Returns an Array of objects representing the relative time format in parts that can be used for custom locale-aware formatting. Intl.RelativeTimeFormat.prototype.resolvedOptions() Returns a new object with properties reflecting the locale and formatting options computed during initialization of the object. Examples Basic format usage The following example shows how to use a relative time formatter for the English language. js // Create a relative time formatter in your locale // with default values explicitly passed in. const rtf = new Intl.RelativeTimeFormat("en", { localeMatcher: "best fit", // other values: "lookup" numeric: "always", // other values: "auto" style: "long", // other values: "short" or "narrow" }); // Format relative time using negative value (-1). rtf.format(-1, "day"); // "1 day ago" // Format relative time using positive value (1). rtf.format(1, "day"); // "in 1 day" Using formatToParts The following example shows how to create a relative time formatter returning formatted parts. js const rtf = new Intl.RelativeTimeFormat("en", { numeric: "auto" }); // Format relative time using the day unit. rtf.formatToParts(-1, "day"); // [{ type: "literal", value: "yesterday"}] rtf.formatToParts(100, "day"); // [ // { type: "literal", value: "in " }, // { type: "integer", value: "100", unit: "day" }, // { type: "literal", value: " days" } // ] Specifications Specification ECMAScript® 2026 Internationalization API Specification # relativetimeformat-objects Browser compatibility Loading… See also Polyfill of Intl.RelativeTimeFormat in FormatJS Intl Intl.RelativeTimeFormat on v8.dev (2018) Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Intl .RelativeTimeFormat Constructor Intl .RelativeTimeFormat() Static methods supportedLocalesOf() Instance methods format() formatToParts() resolvedOptions() Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages Intl Intl .Collator Intl .DateTimeFormat Intl .DisplayNames Intl .DurationFormat Intl .ListFormat Intl .Locale Intl .NumberFormat Intl .PluralRules Intl .Segmenter Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .