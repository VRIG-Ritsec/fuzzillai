Math - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Math Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Español Français 日本語 한국어 Português (do Brasil) Русский 中文 (简体) 正體中文 (繁體) Math Baseline Widely available * This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨July 2015⁩. * Some parts of this feature may have varying levels of support. Learn more See full compatibility Report feedback The Math namespace object contains static properties and methods for mathematical constants and functions. Math works with the Number type. It doesn't work with BigInt . In this article Description Static properties Static methods Examples Specifications Browser compatibility See also Description Unlike most global objects, Math is not a constructor. You cannot use it with the new operator or invoke the Math object as a function. All properties and methods of Math are static. Note: Many Math functions have a precision that's implementation-dependent . This means that different browsers can give a different result. Even the same JavaScript engine on a different OS or architecture can give different results! Static properties Math.E Euler's number and the base of natural logarithms; approximately 2.718 . Math.LN10 Natural logarithm of 10 ; approximately 2.303 . Math.LN2 Natural logarithm of 2 ; approximately 0.693 . Math.LOG10E Base-10 logarithm of E ; approximately 0.434 . Math.LOG2E Base-2 logarithm of E ; approximately 1.443 . Math.PI Ratio of a circle's circumference to its diameter; approximately 3.14159 . Math.SQRT1_2 Square root of ½; approximately 0.707 . Math.SQRT2 Square root of 2 ; approximately 1.414 . Math[Symbol.toStringTag] The initial value of the [Symbol.toStringTag] property is the string "Math" . This property is used in Object.prototype.toString() . Static methods Math.abs() Returns the absolute value of the input. Math.acos() Returns the arccosine of the input. Math.acosh() Returns the hyperbolic arccosine of the input. Math.asin() Returns the arcsine of the input. Math.asinh() Returns the hyperbolic arcsine of a number. Math.atan() Returns the arctangent of the input. Math.atan2() Returns the arctangent of the quotient of its arguments. Math.atanh() Returns the hyperbolic arctangent of the input. Math.cbrt() Returns the cube root of the input. Math.ceil() Returns the smallest integer greater than or equal to the input. Math.clz32() Returns the number of leading zero bits of the 32-bit integer input. Math.cos() Returns the cosine of the input. Math.cosh() Returns the hyperbolic cosine of the input. Math.exp() Returns e x , where x is the argument, and e is Euler's number ( 2.718 …, the base of the natural logarithm). Math.expm1() Returns subtracting 1 from exp(x) . Math.floor() Returns the largest integer less than or equal to the input. Math.f16round() Returns the nearest half precision float representation of the input. Math.fround() Returns the nearest single precision float representation of the input. Math.hypot() Returns the square root of the sum of squares of its arguments. Math.imul() Returns the result of the 32-bit integer multiplication of the inputs. Math.log() Returns the natural logarithm (㏒ e ; also, ㏑) of the input. Math.log10() Returns the base-10 logarithm of the input. Math.log1p() Returns the natural logarithm (㏒ e ; also ㏑) of 1 + x for the number x . Math.log2() Returns the base-2 logarithm of the input. Math.max() Returns the largest of zero or more numbers. Math.min() Returns the smallest of zero or more numbers. Math.pow() Returns base x to the exponent power y (that is, x y ). Math.random() Returns a pseudo-random number between 0 and 1 . Math.round() Returns the value of the input rounded to the nearest integer. Math.sign() Returns the sign of the input, indicating whether it is positive, negative, or zero. Math.sin() Returns the sine of the input. Math.sinh() Returns the hyperbolic sine of the input. Math.sqrt() Returns the positive square root of the input. Math.sumPrecise() Returns the sum of a passed iterable of numbers, avoiding floating point precision loss in intermediate results. Math.tan() Returns the tangent of the input. Math.tanh() Returns the hyperbolic tangent of the input. Math.trunc() Returns the integer portion of the input, removing any fractional digits. Examples Converting between degrees and radians The trigonometric functions sin() , cos() , tan() , asin() , acos() , atan() , and atan2() expect (and return) angles in radians . Since humans tend to think in degrees, and some functions (such as CSS transforms) can accept degrees, it is a good idea to keep functions handy that convert between the two: js function degToRad(degrees) { return degrees * (Math.PI / 180); } function radToDeg(rad) { return rad / (Math.PI / 180); } Calculating the height of an equilateral triangle If we want to calculate the height of an equilateral triangle, and we know its side length is 100, we can use the formulae length of the adjacent multiplied by the tangent of the angle is equal to the opposite. In JavaScript, we can do this with the following: js 50 * Math.tan(degToRad(60)); We use our degToRad() function to convert 60 degrees to radians, as Math.tan() expects an input value in radians. Returning a random integer between two bounds This can be achieved with a combination of Math.random() and Math.floor() : js function random(min, max) { const num = Math.floor(Math.random() * (max - min + 1)) + min; return num; } random(1, 10); Specifications Specification ECMAScript® 2026 Language Specification # sec-math-object Browser compatibility Loading… See also Number Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Math Static methods abs() acos() acosh() asin() asinh() atan() atan2() atanh() cbrt() ceil() clz32() cos() cosh() exp() expm1() f16round() floor() fround() hypot() imul() log() log1p() log2() log10() max() min() pow() random() round() sign() sin() sinh() sqrt() sumPrecise() tan() tanh() trunc() Static properties E LN2 LN10 LOG2E LOG10E PI SQRT1_2 SQRT2 Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .