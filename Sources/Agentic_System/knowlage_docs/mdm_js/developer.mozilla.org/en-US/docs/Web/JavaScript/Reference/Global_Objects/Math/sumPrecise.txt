Math.sumPrecise() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Math sumPrecise() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) 日本語 Math.sumPrecise() Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback The Math.sumPrecise() static method takes an iterable of numbers and returns the sum of them. It is more precise than summing them up in a loop, because it avoids floating point precision loss in intermediate results. In this article Try it Syntax Description Examples Specifications Browser compatibility See also Try it console.log(Math.sumPrecise([1, 2])); // Expected output: 3 console.log(Math.sumPrecise([1e20, 0.1, -1e20])); // Expected output: 0.1 Syntax js Math.sumPrecise(numbers) Parameters numbers An iterable (such as an Array ) of numbers. Return value A number that is the sum of the numbers in the numbers iterable. If the iterable is empty, the return value is -0 ( not 0 ). Exceptions TypeError If numbers is not an iterable, or if any of the numbers in the iterable is not of the number type. Description Because sumPrecise() is a static method of Math , you always use it as Math.sumPrecise() , rather than as a method of a Math object you created ( Math is not a constructor). The method is called Math.sumPrecise() because it is more precise than naïvely summing up numbers in a loop. Consider the following example: js let sum = 0; const numbers = [1e20, 0.1, -1e20]; for (const number of numbers) { sum += number; } console.log(sum); // 0 The output is 0. This is because 1e20 + 0.1 cannot be represented precisely in 64-bit floats, so the intermediate result is rounded to 1e20 . Then, the sum of 1e20 and -1e20 is 0 , so the final result is 0 . Math.sumPrecise() avoids this issue by using some specialized summing algorithm. It works as if the floating point numbers are summed up using their precise mathematical values, and the final result is then converted to the nearest representable 64-bit float. This still cannot avoid the 0.1 + 0.2 precision problem: js console.log(Math.sumPrecise([0.1, 0.2])); // 0.30000000000000004 Because the floating point literals 0.1 and 0.2 already represent mathematical values greater than 0.1 and 0.2 , and their sum's closest 64-bit float representation is actually 0.30000000000000004 . Examples Using Math.sumPrecise() js console.log(Math.sumPrecise([1, 2, 3])); // 6 console.log(Math.sumPrecise([1e20, 0.1, -1e20])); // 0.1 Specifications Specification Math.sumPrecise # sec-math.sumprecise Browser compatibility Loading… See also Polyfill of Math.sumPrecise in core-js es-shims polyfill of Math.sumPrecise Array.prototype.reduce() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Math Static methods abs() acos() acosh() asin() asinh() atan() atan2() atanh() cbrt() ceil() clz32() cos() cosh() exp() expm1() f16round() floor() fround() hypot() imul() log() log1p() log2() log10() max() min() pow() random() round() sign() sin() sinh() sqrt() sumPrecise() tan() tanh() trunc() Static properties E LN2 LN10 LOG2E LOG10E PI SQRT1_2 SQRT2 Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .