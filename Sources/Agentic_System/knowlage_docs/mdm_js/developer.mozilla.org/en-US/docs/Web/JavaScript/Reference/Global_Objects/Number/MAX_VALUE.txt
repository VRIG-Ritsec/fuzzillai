Number.MAX_VALUE - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Number MAX_VALUE Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Español Français 日本語 한국어 Português (do Brasil) Русский 中文 (简体) Number.MAX_VALUE Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨July 2015⁩. Learn more See full compatibility Report feedback The Number.MAX_VALUE static data property represents the maximum numeric value representable in JavaScript. In this article Try it Value Description Examples Specifications Browser compatibility See also Try it function multiply(x, y) { if (x * y > Number.MAX_VALUE) { return "Process as Infinity"; } return x * y; } console.log(multiply(1.7976931348623157e308, 1)); // Expected output: 1.7976931348623157e+308 console.log(multiply(1.7976931348623157e308, 2)); // Expected output: "Process as Infinity" Value 2 1024 - 2 971 , or approximately 1.7976931348623157E+308 . Property attributes of Number.MAX_VALUE Writable no Enumerable no Configurable no Description Values larger than MAX_VALUE are represented as Infinity and will lose their actual value. As mentioned in Number.EPSILON , the precision of numbers depends on their magnitude. Integers can only be represented precisely up to Number.MAX_SAFE_INTEGER , which is 2 53 - 1. Because MAX_VALUE is a static property of Number , you always use it as Number.MAX_VALUE , rather than as a property of a number value. Examples Using MAX_VALUE The following code multiplies two numeric values. If the result is less than or equal to MAX_VALUE , the func1 function is called; otherwise, the func2 function is called. js if (num1 * num2 <= Number.MAX_VALUE) { func1(); } else { func2(); } Specifications Specification ECMAScript® 2026 Language Specification # sec-number.max_value Browser compatibility Loading… See also Number.MIN_VALUE Number.MAX_SAFE_INTEGER Number Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Oct 22, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Number Constructor Number() Static methods isFinite() isInteger() isNaN() isSafeInteger() parseFloat() parseInt() Static properties EPSILON MAX_SAFE_INTEGER MAX_VALUE MIN_SAFE_INTEGER MIN_VALUE NaN NEGATIVE_INFINITY POSITIVE_INFINITY Instance methods toExponential() toFixed() toLocaleString() toPrecision() toString() valueOf() Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .