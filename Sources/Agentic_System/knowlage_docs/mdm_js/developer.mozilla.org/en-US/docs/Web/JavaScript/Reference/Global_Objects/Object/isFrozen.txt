Object.isFrozen() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Object isFrozen() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Español Français 日本語 한국어 Português (do Brasil) Русский 中文 (简体) Object.isFrozen() Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨July 2015⁩. Learn more See full compatibility Report feedback The Object.isFrozen() static method determines if an object is frozen . In this article Try it Syntax Description Examples Specifications Browser compatibility See also Try it const object = { foo: 42, }; console.log(Object.isFrozen(object)); // Expected output: false Object.freeze(object); console.log(Object.isFrozen(object)); // Expected output: true Syntax js Object.isFrozen(obj) Parameters obj The object which should be checked. Return value A Boolean indicating whether or not the given object is frozen. Description An object is frozen if and only if it is not extensible , all its properties are non-configurable, and all its data properties (that is, properties which are not accessor properties with getter or setter components) are non-writable. Examples Using Object.isFrozen js // A new object is extensible, so it is not frozen. Object.isFrozen({}); // false // An empty object which is not extensible // is vacuously frozen. const vacuouslyFrozen = Object.preventExtensions({}); Object.isFrozen(vacuouslyFrozen); // true // A new object with one property is also extensible, // ergo not frozen. const oneProp = { p: 42 }; Object.isFrozen(oneProp); // false // Preventing extensions to the object still doesn't // make it frozen, because the property is still // configurable (and writable). Object.preventExtensions(oneProp); Object.isFrozen(oneProp); // false // Deleting that property makes the object vacuously frozen. delete oneProp.p; Object.isFrozen(oneProp); // true // A non-extensible object with a non-writable // but still configurable property is not frozen. const nonWritable = { e: "plep" }; Object.preventExtensions(nonWritable); Object.defineProperty(nonWritable, "e", { writable: false, }); // make non-writable Object.isFrozen(nonWritable); // false // Changing that property to non-configurable // then makes the object frozen. Object.defineProperty(nonWritable, "e", { configurable: false, }); // make non-configurable Object.isFrozen(nonWritable); // true // A non-extensible object with a non-configurable // but still writable property also isn't frozen. const nonConfigurable = { release: "the kraken!" }; Object.preventExtensions(nonConfigurable); Object.defineProperty(nonConfigurable, "release", { configurable: false, }); Object.isFrozen(nonConfigurable); // false // Changing that property to non-writable // then makes the object frozen. Object.defineProperty(nonConfigurable, "release", { writable: false, }); Object.isFrozen(nonConfigurable); // true // A non-extensible object with a configurable // accessor property isn't frozen. const accessor = { get food() { return "yum"; }, }; Object.preventExtensions(accessor); Object.isFrozen(accessor); // false // When we make that property non-configurable it becomes frozen. Object.defineProperty(accessor, "food", { configurable: false, }); Object.isFrozen(accessor); // true // But the easiest way for an object to be frozen // is if Object.freeze has been called on it. const frozen = { 1: 81 }; Object.isFrozen(frozen); // false Object.freeze(frozen); Object.isFrozen(frozen); // true // By definition, a frozen object is non-extensible. Object.isExtensible(frozen); // false // Also by definition, a frozen object is sealed. Object.isSealed(frozen); // true Non-object argument In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError . In ES2015, it will return true without any errors if a non-object argument is passed, since primitives are, by definition, immutable. js Object.isFrozen(1); // TypeError: 1 is not an object (ES5 code) Object.isFrozen(1); // true (ES2015 code) Specifications Specification ECMAScript® 2026 Language Specification # sec-object.isfrozen Browser compatibility Loading… See also Object.freeze() Object.preventExtensions() Object.isExtensible() Object.seal() Object.isSealed() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 20, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Object Constructor Object() Static methods assign() create() defineProperties() defineProperty() entries() freeze() fromEntries() getOwnPropertyDescriptor() getOwnPropertyDescriptors() getOwnPropertyNames() getOwnPropertySymbols() getPrototypeOf() groupBy() hasOwn() is() isExtensible() isFrozen() isSealed() keys() preventExtensions() seal() setPrototypeOf() values() Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .