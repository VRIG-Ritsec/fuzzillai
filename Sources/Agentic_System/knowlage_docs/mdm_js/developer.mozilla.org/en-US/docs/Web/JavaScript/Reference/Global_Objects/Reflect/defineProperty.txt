Reflect.defineProperty() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Reflect defineProperty() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 Português (do Brasil) Русский 中文 (简体) Reflect.defineProperty() Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨September 2016⁩. Learn more See full compatibility Report feedback The Reflect.defineProperty() static method is like Object.defineProperty() but returns a Boolean . In this article Try it Syntax Description Examples Specifications Browser compatibility See also Try it const object = {}; if (Reflect.defineProperty(object, "foo", { value: 42 })) { console.log("foo created!"); // Expected output: "foo created!" } else { console.log("problem creating foo"); } console.log(object.foo); // Expected output: 42 Syntax js Reflect.defineProperty(target, propertyKey, attributes) Parameters target The target object on which to define the property. propertyKey The name of the property to be defined or modified. attributes The attributes for the property being defined or modified. Return value A boolean indicating whether or not the property was successfully defined. Exceptions TypeError Thrown if target or attributes is not an object. Description Reflect.defineProperty() provides the reflective semantic of defining an own property on an object. At the very low level, defining a property returns a boolean (as is the case with the proxy handler ). Object.defineProperty() provides nearly the same semantic, but it throws a TypeError if the status is false (the operation was unsuccessful), while Reflect.defineProperty() directly returns the status. Many built-in operations would also define own properties on objects. The most significant difference between defining properties and setting them is that setters aren't invoked. For example, class fields directly define properties on the instance without invoking setters. js class B extends class A { set a(v) { console.log("Setter called"); } } { a = 1; // Nothing logged } Reflect.defineProperty() invokes the [[DefineOwnProperty]] object internal method of target . Examples Using Reflect.defineProperty() js const obj = {}; Reflect.defineProperty(obj, "x", { value: 7 }); // true console.log(obj.x); // 7 Checking if property definition has been successful With Object.defineProperty() , which returns an object if successful, or throws a TypeError otherwise, you would use a try...catch block to catch any error that occurred while defining a property. Because Reflect.defineProperty() returns a Boolean success status, you can just use an if...else block here: js if (Reflect.defineProperty(target, property, attributes)) { // success } else { // failure } Specifications Specification ECMAScript® 2026 Language Specification # sec-reflect.defineproperty Browser compatibility Loading… See also Polyfill of Reflect.defineProperty in core-js Reflect Object.defineProperty() handler.defineProperty() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 20, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Reflect Static methods apply() construct() defineProperty() deleteProperty() get() getOwnPropertyDescriptor() getPrototypeOf() has() isExtensible() ownKeys() preventExtensions() set() setPrototypeOf() Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .