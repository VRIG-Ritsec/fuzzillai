RegExp.prototype.hasIndices - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects RegExp hasIndices Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 中文 (简体) RegExp.prototype.hasIndices Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨September 2021⁩. Learn more See full compatibility Report feedback The hasIndices accessor property of RegExp instances returns whether or not the d flag is used with this regular expression. In this article Try it Description Examples Specifications Browser compatibility See also Try it const regex1 = /foo/d; console.log(regex1.hasIndices); // Expected output: true const regex2 = /bar/; console.log(regex2.hasIndices); // Expected output: false Description RegExp.prototype.hasIndices has the value true if the d flag was used; otherwise, false . The d flag indicates that the result of a regular expression match should contain the start and end indices of the substrings of each capture group. It does not change the regex's interpretation or matching behavior in any way, but only provides additional information in the matching result. This flag primarily affects the return value of exec() . If the d flag is present, the array returned by exec() has an additional indices property as described in the exec() method's return value . Because all other regex-related methods (such as String.prototype.match() ) call exec() internally, they will also return the indices if the regex has the d flag. The set accessor of hasIndices is undefined . You cannot change this property directly. Examples There's a more detailed usage example at Groups and backreferences > Using groups and match indices . Using hasIndices js const str1 = "foo bar foo"; const regex1 = /foo/dg; console.log(regex1.hasIndices); // true console.log(regex1.exec(str1).indices[0]); // [0, 3] console.log(regex1.exec(str1).indices[0]); // [8, 11] const str2 = "foo bar foo"; const regex2 = /foo/; console.log(regex2.hasIndices); // false console.log(regex2.exec(str2).indices); // undefined Specifications Specification ECMAScript® 2026 Language Specification # sec-get-regexp.prototype.hasIndices Browser compatibility Loading… See also RegExp.prototype.lastIndex RegExp.prototype.exec() RegExp.prototype.dotAll RegExp.prototype.global RegExp.prototype.ignoreCase RegExp.prototype.multiline RegExp.prototype.source RegExp.prototype.sticky RegExp.prototype.unicode Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects RegExp Constructor RegExp() Static methods escape() Static properties $1, …, $9 Deprecated input ($_) Deprecated lastMatch ($&) Deprecated lastParen ($+) Deprecated leftContext ($`) Deprecated rightContext ($') Deprecated [Symbol .species] Instance methods compile() Deprecated exec() test() toString() [Symbol .match]() [Symbol .matchAll]() [Symbol .replace]() [Symbol .search]() [Symbol .split]() Instance properties lastIndex dotAll flags global hasIndices ignoreCase multiline source sticky unicode unicodeSets Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .