RegExp.prototype.unicodeSets - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all‚Ä¶ HTML guides Responsive images HTML cheatsheet Date & time formats See all‚Ä¶ Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all‚Ä¶ CSS guides Box model Animations Flexbox Colors See all‚Ä¶ Layout cookbook Column layouts Centering an element Card component See all‚Ä¶ JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all‚Ä¶ JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all‚Ä¶ Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all‚Ä¶ Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all‚Ä¶ Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects RegExp unicodeSets Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Êó•Êú¨Ë™û ÌïúÍµ≠Ïñ¥ RegExp.prototype.unicodeSets Baseline 2023 Newly available Since ‚Å®September 2023‚Å©, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers. Learn more See full compatibility Report feedback The unicodeSets accessor property of RegExp instances returns whether or not the v flag is used with this regular expression. In this article Try it Description Examples Specifications Browser compatibility See also Try it const regex1 = /[\p{Lowercase}&&\p{Script=Greek}]/; const regex2 = /[\p{Lowercase}&&\p{Script=Greek}]/v; console.log(regex1.unicodeSets); // Expected output: false console.log(regex2.unicodeSets); // Expected output: true Description RegExp.prototype.unicodeSets has the value true if the v flag was used; otherwise, false . The v flag is an "upgrade" to the u flag that enables more Unicode-related features. ("v" is the next letter after "u" in the alphabet.) Because u and v interpret the same regex in incompatible ways, using both flags results in a SyntaxError . With the v flag, you get all features mentioned in the u flag description, plus: The \p escape sequence can be additionally used to match properties of strings, instead of just characters. The character class syntax is upgraded to allow intersection, union, and subtraction syntaxes, as well as matching multiple Unicode characters. The character class complement syntax [^...] constructs a complement class instead of negating the match result, avoiding some confusing behaviors with case-insensitive matching. For more information, see Complement classes and case-insensitive matching . Some valid u -mode regexes become invalid in v -mode. Specifically, the character class syntax is different and some characters can no longer appear literally. For more information, see v -mode character class . Note: The v mode does not interpret grapheme clusters as single characters; they are still multiple code points. For example, /[üá∫üá≥]/v is still able to match "üá∫" . The set accessor of unicodeSets is undefined . You cannot change this property directly. Examples Using the unicodeSets property js const regex = /[\p{Script_Extensions=Greek}&&\p{Letter}]/v; console.log(regex.unicodeSets); // true Specifications Specification ECMAScript¬Æ 2026 Language Specification # sec-get-regexp.prototype.unicodesets Browser compatibility Loading‚Ä¶ See also RegExp.prototype.lastIndex RegExp.prototype.dotAll RegExp.prototype.global RegExp.prototype.hasIndices RegExp.prototype.ignoreCase RegExp.prototype.multiline RegExp.prototype.source RegExp.prototype.sticky RegExp.prototype.unicode RegExp v flag with set notation and properties of strings on v8.dev (2022) Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ‚Å®Jul 10, 2025‚Å© by MDN contributors . View this page on GitHub ‚Ä¢ Report a problem with this content Filter sidebar Standard built-in objects RegExp Constructor RegExp() Static methods escape() Static properties $1, ‚Ä¶, $9 Deprecated input ($_) Deprecated lastMatch ($&) Deprecated lastParen ($+) Deprecated leftContext ($`) Deprecated rightContext ($') Deprecated [Symbol .species] Instance methods compile() Deprecated exec() test() toString() [Symbol .match]() [Symbol .matchAll]() [Symbol .replace]() [Symbol .search]() [Symbol .split]() Instance properties lastIndex dotAll flags global hasIndices ignoreCase multiline source sticky unicode unicodeSets Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation‚Äôs not-for-profit parent, the Mozilla Foundation . Portions of this content are ¬©1998‚Äì‚Å®2025‚Å© by individual mozilla.org contributors. Content available under a Creative Commons license .