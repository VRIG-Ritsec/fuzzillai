SharedArrayBuffer.prototype.slice() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects SharedArrayBuffer slice() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 中文 (简体) SharedArrayBuffer.prototype.slice() Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨December 2021⁩. Learn more See full compatibility Report feedback The slice() method of SharedArrayBuffer instances returns a new SharedArrayBuffer whose contents are a copy of this SharedArrayBuffer 's bytes from start , inclusive, up to end , exclusive. If either start or end is negative, it refers to an index from the end of the array, as opposed to from the beginning. In this article Try it Syntax Examples Specifications Browser compatibility See also Try it // Create a SharedArrayBuffer with a size in bytes const buffer = new SharedArrayBuffer(16); const int32View = new Int32Array(buffer); // Create the view // Produces Int32Array [0, 0, 0, 0] int32View[1] = 42; const sliced = new Int32Array(buffer.slice(4, 12)); console.log(sliced); // Expected output: Int32Array [42, 0] Syntax js slice() slice(start) slice(start, end) Parameters start Optional Zero-based index at which to start extraction, converted to an integer . Negative index counts back from the end of the buffer — if -buffer.length <= start < 0 , start + buffer.length is used. If start < -buffer.length or start is omitted, 0 is used. If start >= buffer.length , an empty buffer is returned. end Optional Zero-based index at which to end extraction, converted to an integer . slice() extracts up to but not including end . Negative index counts back from the end of the buffer — if -buffer.length <= end < 0 , end + buffer.length is used. If end < -buffer.length , 0 is used. If end >= buffer.length or end is omitted or undefined , buffer.length is used, causing all elements until the end to be extracted. If end implies a position before or at the position that start implies, an empty buffer is returned. Return value A new SharedArrayBuffer containing the extracted elements. Examples Using slice() js const sab = new SharedArrayBuffer(1024); sab.slice(); // SharedArrayBuffer { byteLength: 1024 } sab.slice(2); // SharedArrayBuffer { byteLength: 1022 } sab.slice(-2); // SharedArrayBuffer { byteLength: 2 } sab.slice(0, 1); // SharedArrayBuffer { byteLength: 1 } Specifications Specification ECMAScript® 2026 Language Specification # sec-sharedarraybuffer.prototype.slice Browser compatibility Loading… See also SharedArrayBuffer ArrayBuffer.prototype.slice() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects SharedArrayBuffer Constructor SharedArrayBuffer() Static properties [Symbol .species] Instance methods grow() slice() Instance properties byteLength growable maxByteLength Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .