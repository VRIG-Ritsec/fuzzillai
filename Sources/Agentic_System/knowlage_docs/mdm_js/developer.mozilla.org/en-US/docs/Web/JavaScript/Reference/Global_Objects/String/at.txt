String.prototype.at() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects String at() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Français 日本語 한국어 中文 (简体) String.prototype.at() Baseline Widely available This feature is well established and works across many devices and browser versions. It’s been available across browsers since ⁨March 2022⁩. Learn more See full compatibility Report feedback The at() method of String values takes an integer value and returns a new String consisting of the single UTF-16 code unit located at the specified offset. This method allows for positive and negative integers. Negative integers count back from the last string character. In this article Try it Syntax Examples Specifications Browser compatibility See also Try it const sentence = "The quick brown fox jumps over the lazy dog."; let index = 5; console.log(`An index of ${index} returns the character ${sentence.at(index)}`); // Expected output: "An index of 5 returns the character u" index = -4; console.log(`An index of ${index} returns the character ${sentence.at(index)}`); // Expected output: "An index of -4 returns the character d" Syntax js at(index) Parameters index The index (position) of the string character to be returned. Supports relative indexing from the end of the string when passed a negative index; i.e., if a negative number is used, the character returned will be found by counting back from the end of the string. Return value A String consisting of the single UTF-16 code unit located at the specified position. Returns undefined if the given index can not be found. Examples Return the last character of a string The following example provides a function which returns the last character found in a specified string. js // A function which returns the last character of a given string function returnLast(str) { return str.at(-1); } let invoiceRef = "my-invoice01"; console.log(returnLast(invoiceRef)); // '1' invoiceRef = "my-invoice02"; console.log(returnLast(invoiceRef)); // '2' Comparing methods Here we compare different ways to select the penultimate (last but one) character of a String . Whilst all below methods are valid, it highlights the succinctness and readability of the at() method. js const myString = "Every green bus drives fast."; // Using length property and charAt() method const lengthWay = myString.charAt(myString.length - 2); console.log(lengthWay); // 't' // Using slice() method const sliceWay = myString.slice(-2, -1); console.log(sliceWay); // 't' // Using at() method const atWay = myString.at(-2); console.log(atWay); // 't' Specifications Specification ECMAScript® 2026 Language Specification # sec-string.prototype.at Browser compatibility Loading… See also Polyfill of String.prototype.at in core-js es-shims polyfill of String.prototype.at String.prototype.indexOf() String.prototype.lastIndexOf() String.prototype.charCodeAt() String.prototype.codePointAt() String.prototype.split() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects String Constructor String() Static methods fromCharCode() fromCodePoint() raw() Instance methods anchor() Deprecated at() big() Deprecated blink() Deprecated bold() Deprecated charAt() charCodeAt() codePointAt() concat() endsWith() fixed() Deprecated fontcolor() Deprecated fontsize() Deprecated includes() indexOf() isWellFormed() italics() Deprecated lastIndexOf() link() Deprecated localeCompare() match() matchAll() normalize() padEnd() padStart() repeat() replace() replaceAll() search() slice() small() Deprecated split() startsWith() strike() Deprecated sub() Deprecated substr() Deprecated substring() sup() Deprecated toLocaleLowerCase() toLocaleUpperCase() toLowerCase() toString() toUpperCase() toWellFormed() trim() trimEnd() trimStart() valueOf() [Symbol .iterator]() Instance properties length Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .