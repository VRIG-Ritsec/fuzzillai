String.prototype.substr() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects String substr() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Español Français 日本語 한국어 Português (do Brasil) Русский 中文 (简体) String.prototype.substr() Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time. The substr() method of String values returns a portion of this string, starting at the specified index and extending for a given number of characters afterwards. Note: substr() is not part of the main ECMAScript specification — it's defined in Annex B: Additional ECMAScript Features for Web Browsers , which is normative optional for non-browser runtimes. Therefore, people are advised to use the standard String.prototype.substring() and String.prototype.slice() methods instead to make their code maximally cross-platform friendly. The String.prototype.substring() page has some comparisons between the three methods. In this article Try it Syntax Description Examples Specifications Browser compatibility See also Try it const str = "Mozilla"; console.log(str.substr(1, 2)); // Expected output: "oz" console.log(str.substr(2)); // Expected output: "zilla" Syntax js substr(start) substr(start, length) Parameters start The index of the first character to include in the returned substring. length Optional The number of characters to extract. Return value A new string containing the specified part of the given string. Description A string's substr() method extracts length characters from the string, counting from the start index. If start >= str.length , an empty string is returned. If start < 0 , the index starts counting from the end of the string. More formally, in this case the substring starts at max(start + str.length, 0) . If start is omitted or undefined , it's treated as 0 . If length is omitted or undefined , or if start + length >= str.length , substr() extracts characters to the end of the string. If length < 0 , an empty string is returned. For both start and length , NaN is treated as 0 . Although you are encouraged to avoid using substr() , there is no trivial way to migrate substr() to either slice() or substring() in legacy code without essentially writing a polyfill for substr() . For example, str.substr(a, l) , str.slice(a, a + l) , and str.substring(a, a + l) all have different results when str = "01234", a = 1, l = -2 — substr() returns an empty string, slice() returns "123" , while substring() returns "0" . The actual refactoring path depends on the knowledge of the range of a and l . Examples Using substr() js const string = "Mozilla"; console.log(string.substr(0, 1)); // 'M' console.log(string.substr(1, 0)); // '' console.log(string.substr(-1, 1)); // 'a' console.log(string.substr(1, -1)); // '' console.log(string.substr(-3)); // 'lla' console.log(string.substr(1)); // 'ozilla' console.log(string.substr(-20, 2)); // 'Mo' console.log(string.substr(20, 2)); // '' Specifications Specification ECMAScript® 2026 Language Specification # sec-string.prototype.substr Browser compatibility Loading… See also Polyfill of String.prototype.substr in core-js es-shims polyfill of String.prototype.substr String.prototype.slice() String.prototype.substring() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Aug 19, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects String Constructor String() Static methods fromCharCode() fromCodePoint() raw() Instance methods anchor() Deprecated at() big() Deprecated blink() Deprecated bold() Deprecated charAt() charCodeAt() codePointAt() concat() endsWith() fixed() Deprecated fontcolor() Deprecated fontsize() Deprecated includes() indexOf() isWellFormed() italics() Deprecated lastIndexOf() link() Deprecated localeCompare() match() matchAll() normalize() padEnd() padStart() repeat() replace() replaceAll() search() slice() small() Deprecated split() startsWith() strike() Deprecated sub() Deprecated substr() Deprecated substring() sup() Deprecated toLocaleLowerCase() toLocaleUpperCase() toLowerCase() toString() toUpperCase() toWellFormed() trim() trimEnd() trimStart() valueOf() [Symbol .iterator]() Instance properties length Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .