Temporal.Instant.prototype.since() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Temporal Temporal.Instant since() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Temporal.Instant.prototype.since() Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback Experimental: This is an experimental technology Check the Browser compatibility table carefully before using this in production. The since() method of Temporal.Instant instances returns a new Temporal.Duration object representing the duration from another instant (in a form convertible by Temporal.Instant.from() ) to this instant. The duration is positive if the other instant is before this instant, and negative if after. This method does this - other . To do other - this , use the until() method. In this article Syntax Examples Specifications Browser compatibility See also Syntax js since(other) since(other, options) Parameters other A string or a Temporal.Instant instance representing an instant to subtract from this instant. It is converted to a Temporal.Instant object using the same algorithm as Temporal.Instant.from() . options Optional An object containing the options for Temporal.Duration.prototype.round() , which includes largestUnit , roundingIncrement , roundingMode , and smallestUnit . largestUnit and smallestUnit only accept the units: "hours" , "minutes" , "seconds" , "milliseconds" , "microseconds" , "nanoseconds" , or their singular forms. For largestUnit , the default value "auto" means "seconds" or smallestUnit , whichever is greater. For smallestUnit , the default value is "nanoseconds" . Return value A new Temporal.Duration object representing the duration since other to this instant. The duration is positive if other is before this instant, and negative if after. Exceptions RangeError Thrown if any of the options is invalid. Examples Using since() js const lastUpdated = Temporal.Instant.fromEpochMilliseconds(1735235418000); const now = Temporal.Now.instant(); const duration = now.since(lastUpdated, { smallestUnit: "minute" }); console.log(`Last updated ${duration.toLocaleString("en-US")} ago`); Balancing the resulting duration Because an instant does not carry calendar information, the resulting duration avoids calendar durations , which are ambiguous without a calendar and time reference. Therefore, the result is unbalanced because hours may be greater than 24 . To balance the duration, round the resulting duration again with the desired largestUnit , passing a relativeTo that carries the calendar information. js const lastUpdated = Temporal.Instant.fromEpochMilliseconds(1735235418000); const now = Temporal.Now.instant(); const duration = now.since(lastUpdated, { smallestUnit: "minutes" }); const roundedDuration = duration.round({ largestUnit: "years", // Use the ISO calendar; you can convert to another calendar using // withCalendar() relativeTo: now.toZonedDateTimeISO("UTC"), }); console.log(`Last updated ${roundedDuration.toLocaleString("en-US")} ago`); Specifications Specification Temporal # sec-temporal.instant.prototype.since Browser compatibility Loading… See also Temporal.Instant Temporal.Duration Temporal.Instant.prototype.add() Temporal.Instant.prototype.subtract() Temporal.Instant.prototype.until() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Temporal .Instant Experimental Constructor Temporal .Instant() Experimental Static methods compare() Experimental from() Experimental fromEpochMilliseconds() Experimental fromEpochNanoseconds() Experimental Instance methods add() Experimental equals() Experimental round() Experimental since() Experimental subtract() Experimental toJSON() Experimental toLocaleString() Experimental toString() Experimental toZonedDateTimeISO() Experimental until() Experimental valueOf() Experimental Instance properties epochMilliseconds Experimental epochNanoseconds Experimental Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages Temporal Experimental Temporal .Duration Experimental Temporal .Now Experimental Temporal .PlainDate Experimental Temporal .PlainDateTime Experimental Temporal .PlainMonthDay Experimental Temporal .PlainTime Experimental Temporal .PlainYearMonth Experimental Temporal .ZonedDateTime Experimental Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .