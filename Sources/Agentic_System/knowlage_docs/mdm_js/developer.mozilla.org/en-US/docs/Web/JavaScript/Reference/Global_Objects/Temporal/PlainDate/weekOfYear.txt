Temporal.PlainDate.prototype.weekOfYear - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Temporal Temporal.PlainDate weekOfYear Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Temporal.PlainDate.prototype.weekOfYear Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback Experimental: This is an experimental technology Check the Browser compatibility table carefully before using this in production. The weekOfYear accessor property of Temporal.PlainDate instances returns a positive integer representing the 1-based week index in the yearOfWeek of this date, or undefined if the calendar does not have a well-defined week system. The first week of the year is 1 . It is calendar -dependent. Note that for ISO 8601, the first and last few days of the year may be attributed to the last week of the previous year or the first week of the next year. Namely, if a week crosses two years, then it belongs to the year that has the majority of its days. To get the year that the weekOfYear belongs to, use the yearOfWeek property, not the year property. The set accessor of weekOfYear is undefined . You cannot change this property directly. To create a new Temporal.PlainDate object with the desired new weekOfYear value, use the add() or subtract() method with the appropriate number of weeks . In this article Examples Specifications Browser compatibility See also Examples Using weekOfYear js const date = Temporal.PlainDate.from("2021-07-01"); console.log(date.weekOfYear); // 26 // If 01-01 is a Friday/Saturday/Sunday, it belongs to the last week of the previous year const date2 = Temporal.PlainDate.from("2021-01-01"); console.log(date2.dayOfWeek); // 5 console.log(date2.weekOfYear); // 53; 2020 has 53 weeks console.log(date2.yearOfWeek); // 2020 // Otherwise, it belongs to the first week of the year const date3 = Temporal.PlainDate.from("2020-01-01"); console.log(date3.dayOfWeek); // 3 console.log(date3.weekOfYear); // 1 console.log(date3.yearOfWeek); // 2020 // Similarly, if 12-31 is a Monday/Tuesday/Wednesday, it belongs to the first week of the next year const date4 = Temporal.PlainDate.from("2019-12-31"); console.log(date4.dayOfWeek); // 2 console.log(date4.weekOfYear); // 1 console.log(date4.yearOfWeek); // 2020 Changing weekOfYear PlainDate does not support changing weekOfYear directly. To change the week, you need to first figure out the difference in weeks to your desired week, then use add or subtract to adjust the date accordingly. For example, to change to the previous week: js const date = Temporal.PlainDate.from("2021-07-01"); const previousWeek = date.subtract({ weeks: 1 }); console.log(previousWeek.toString()); // 2021-06-24 Specifications Specification Temporal # sec-get-temporal.plaindate.prototype.weekofyear Browser compatibility Loading… See also Temporal.PlainDate Temporal.PlainDate.prototype.with() Temporal.PlainDate.prototype.add() Temporal.PlainDate.prototype.subtract() Temporal.PlainDate.prototype.yearOfWeek Temporal.PlainDate.prototype.dayOfWeek Temporal.PlainDate.prototype.daysInWeek Temporal.PlainDate.prototype.daysInYear Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Temporal .PlainDate Experimental Constructor Temporal .PlainDate() Experimental Static methods compare() Experimental from() Experimental Instance methods add() Experimental equals() Experimental since() Experimental subtract() Experimental toJSON() Experimental toLocaleString() Experimental toPlainDateTime() Experimental toPlainMonthDay() Experimental toPlainYearMonth() Experimental toString() Experimental toZonedDateTime() Experimental until() Experimental valueOf() Experimental with() Experimental withCalendar() Experimental Instance properties calendarId Experimental day Experimental dayOfWeek Experimental dayOfYear Experimental daysInMonth Experimental daysInWeek Experimental daysInYear Experimental era Experimental eraYear Experimental inLeapYear Experimental month Experimental monthCode Experimental monthsInYear Experimental weekOfYear Experimental year Experimental yearOfWeek Experimental Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages Temporal Experimental Temporal .Duration Experimental Temporal .Instant Experimental Temporal .Now Experimental Temporal .PlainDateTime Experimental Temporal .PlainMonthDay Experimental Temporal .PlainTime Experimental Temporal .PlainYearMonth Experimental Temporal .ZonedDateTime Experimental Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .