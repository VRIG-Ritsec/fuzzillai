Temporal.PlainYearMonth() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Temporal Temporal.PlainYearMonth Temporal.PlainYearMonth() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Temporal.PlainYearMonth() Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback Experimental: This is an experimental technology Check the Browser compatibility table carefully before using this in production. The Temporal.PlainYearMonth() constructor creates Temporal.PlainYearMonth objects. This constructor allows you to create instances by directly supplying the underlying data. Like all other Temporal classes, you should usually construct Temporal.PlainYearMonth objects using the Temporal.PlainYearMonth.from() static method, which can handle a variety of input types. In this article Syntax Examples Specifications Browser compatibility See also Syntax js new Temporal.PlainYearMonth(year, month) new Temporal.PlainYearMonth(year, month, calendar) new Temporal.PlainYearMonth(year, month, calendar, referenceDay) Note: Temporal.PlainYearMonth() can only be constructed with new . Attempting to call it without new throws a TypeError . Warning: Avoid using the calendar and referenceDay parameters, because equals() and compare() will consider the reference day for comparison, causing two equivalent year-months to be considered different if they have different reference days. To create a Temporal.PlainYearMonth object with a non-ISO calendar, use the Temporal.PlainYearMonth.from() static method. Parameters year Optional A number, truncated to an integer, representing the year in the ISO calendar system. month A number, truncated to an integer, representing the month in the ISO calendar system. calendar Optional A string representing the calendar to use. See Intl.supportedValuesOf() for a list of commonly supported calendar types. Defaults to "iso8601" . Note that irrespective of the calendar , the year , month , and referenceDay must be in the ISO 8601 calendar system. referenceDay A number, truncated to an integer, representing the day of the month in the ISO calendar system. Defaults to 1 . The same ISO year-month can represent different months on different days with non-ISO calendars. For example, the days 2021-07-01 and 2021-07-31 may fall in different months in a non-Gregorian calendar, and just specifying "2021-07" is insufficient to unambiguously determine a month in the target calendar. Therefore, you virtually always want to specify a referenceDay when using a non-ISO calendar. Return value A new Temporal.PlainYearMonth object, representing the year-month of the date specified by year , month , and referenceDay (in the ISO calendar), interpreted in the calendar system specified by calendar . Exceptions TypeError Thrown if calendar is not a string or undefined . RangeError Thrown in one of the following cases: year , month , or referenceDay is not a finite number. The year , month , and referenceDay combination does not represent a valid date in the ISO calendar system, or is not in the representable range , which is ±(10 8 + 1) days, or about ±273,972.6 years, from the Unix epoch. calendar is not a valid calendar identifier. Examples Using Temporal.PlainYearMonth() js const ym = new Temporal.PlainYearMonth(2021, 7); console.log(ym.toString()); // 2021-07 const ym2 = new Temporal.PlainYearMonth(2021, 7, "chinese"); console.log(ym2.toString()); // 2021-07-01[u-ca=chinese] const ym3 = new Temporal.PlainYearMonth(2021, 7, "chinese", 31); console.log(ym3.toString()); // 2021-07-31[u-ca=chinese] Improper usage You should avoid using the calendar and referenceDay parameters, unless you know that the referenceDay is the canonical reference day that would be selected by Temporal.PlainYearMonth.from() for the same year-month. js const ym = new Temporal.PlainYearMonth(2021, 7, "chinese", 1); const ym2 = Temporal.PlainYearMonth.from("2021-07-01[u-ca=chinese]"); console.log(ym.equals(ym2)); // false console.log(ym.toString()); // 2021-07-01[u-ca=chinese] console.log(ym2.toString()); // 2021-06-10[u-ca=chinese] Specifications Specification Temporal # sec-temporal-plainyearmonth-constructor Browser compatibility Loading… See also Temporal.PlainYearMonth Temporal.PlainYearMonth.from() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Temporal .PlainYearMonth Experimental Constructor Temporal .PlainYearMonth() Experimental Static methods compare() Experimental from() Experimental Instance methods add() Experimental equals() Experimental since() Experimental subtract() Experimental toJSON() Experimental toLocaleString() Experimental toPlainDate() Experimental toString() Experimental until() Experimental valueOf() Experimental with() Experimental Instance properties calendarId Experimental daysInMonth Experimental daysInYear Experimental era Experimental eraYear Experimental inLeapYear Experimental month Experimental monthCode Experimental monthsInYear Experimental year Experimental Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages Temporal Experimental Temporal .Duration Experimental Temporal .Instant Experimental Temporal .Now Experimental Temporal .PlainDate Experimental Temporal .PlainDateTime Experimental Temporal .PlainMonthDay Experimental Temporal .PlainTime Experimental Temporal .ZonedDateTime Experimental Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .