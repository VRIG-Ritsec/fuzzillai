Temporal.ZonedDateTime.prototype.since() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Temporal Temporal.ZonedDateTime since() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Temporal.ZonedDateTime.prototype.since() Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback Experimental: This is an experimental technology Check the Browser compatibility table carefully before using this in production. The since() method of Temporal.ZonedDateTime instances returns a new Temporal.Duration object representing the duration from another date-time (in a form convertible by Temporal.ZonedDateTime.from() ) to this date-time. The duration is positive if the other date-time is before this date-time, and negative if after. This method does this - other . To do other - this , use the until() method. In this article Syntax Description Examples Specifications Browser compatibility See also Syntax js since(other) since(other, options) Parameters other A string, an object, or a Temporal.ZonedDateTime instance representing a date-time to subtract from this date-time. It is converted to a Temporal.ZonedDateTime object using the same algorithm as Temporal.ZonedDateTime.from() . It must have the same calendar as this . options Optional An object containing the options for Temporal.Duration.prototype.round() , which includes largestUnit , roundingIncrement , roundingMode , and smallestUnit . largestUnit and smallestUnit accept all possible units. For largestUnit , the default value "auto" means "hours" or smallestUnit , whichever is greater. For smallestUnit , the default value is "nanoseconds" . The current date is used as the relativeTo option. Note that using units larger than "hours" may make the duration not portable to other calendars, dates, or time zones. Return value A new Temporal.Duration object representing the duration since other to this date-time. The duration is positive if other is before this date-time, and negative if after. Exceptions RangeError Thrown in one of the following cases: other has a different calendar than this . Any of the options is invalid. other has a different time zone than this , and largestUnit is "days" or above. Description The duration returned is a "hybrid" duration. This means that the duration's date portion represents full calendar days like Temporal.PlainDateTime.prototype.since() would return, while its time portion represents real-world elapsed time like Temporal.Instant.prototype.since() would return. This "hybrid duration" approach automatically adjusts for DST and matches widely-adopted industry standards like RFC 5545 (iCalendar) . See below for examples. Examples Offset transitions When transitions happen, a day may not have exactly 24 hours. js const start = Temporal.ZonedDateTime.from( "2024-11-03T01:00:00-04:00[America/New_York]", ); const end = Temporal.ZonedDateTime.from( "2024-11-04T01:00:00-05:00[America/New_York]", ); console.log(end.since(start).toString()); // PT25H console.log(end.since(start, { largestUnit: "days" }).toString()); // PT1D const start2 = Temporal.ZonedDateTime.from( "2024-03-10T01:00:00-05:00[America/New_York]", ); const end2 = Temporal.ZonedDateTime.from( "2024-03-11T01:00:00-04:00[America/New_York]", ); console.log(end2.since(start2).toString()); // PT23H console.log(end2.since(start2, { largestUnit: "days" }).toString()); // PT1D For this reason, the returned duration is purely time-based with no date portion by default, so that it stays unambiguous. Different time zones The time portion of the returned duration is purely based on instants and is not affected by time zones. However, if you want to include any date units like day , then the start and end must be in the same time zone. js const start = Temporal.ZonedDateTime.from( "2024-11-03T01:00:00-04:00[America/New_York]", ); // Peru does not use DST so its offset remains -05:00 year-round const end = Temporal.ZonedDateTime.from( "2024-11-04T01:00:00-05:00[America/Lima]", ); end.since(start); // PT25H end.since(start, { largestUnit: "days" }); // RangeError: time zones "America/Lima" and "America/New_York" aren't compatible end.withTimeZone("America/New_York").since(start, { largestUnit: "days" }); // P1D end.since(start.withTimeZone("America/Lima"), { largestUnit: "days" }); // P1D1H For more examples about how to use since() , especially with rounding, see Temporal.PlainDate.prototype.since() and Temporal.PlainTime.prototype.since() . Specifications Specification Temporal # sec-temporal.zoneddatetime.prototype.since Browser compatibility Loading… See also Temporal.ZonedDateTime Temporal.Duration Temporal.ZonedDateTime.prototype.add() Temporal.ZonedDateTime.prototype.subtract() Temporal.ZonedDateTime.prototype.until() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Temporal .ZonedDateTime Experimental Constructor Temporal .ZonedDateTime() Experimental Static methods compare() Experimental from() Experimental Instance methods add() Experimental equals() Experimental getTimeZoneTransition() Experimental round() Experimental since() Experimental startOfDay() Experimental subtract() Experimental toInstant() Experimental toJSON() Experimental toLocaleString() Experimental toPlainDate() Experimental toPlainDateTime() Experimental toPlainTime() Experimental toString() Experimental until() Experimental valueOf() Experimental with() Experimental withCalendar() Experimental withPlainTime() Experimental withTimeZone() Experimental Instance properties calendarId Experimental day Experimental dayOfWeek Experimental dayOfYear Experimental daysInMonth Experimental daysInWeek Experimental daysInYear Experimental epochMilliseconds Experimental epochNanoseconds Experimental era Experimental eraYear Experimental hour Experimental hoursInDay Experimental inLeapYear Experimental microsecond Experimental millisecond Experimental minute Experimental month Experimental monthCode Experimental monthsInYear Experimental nanosecond Experimental offset Experimental offsetNanoseconds Experimental second Experimental timeZoneId Experimental weekOfYear Experimental year Experimental yearOfWeek Experimental Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages Temporal Experimental Temporal .Duration Experimental Temporal .Instant Experimental Temporal .Now Experimental Temporal .PlainDate Experimental Temporal .PlainDateTime Experimental Temporal .PlainMonthDay Experimental Temporal .PlainTime Experimental Temporal .PlainYearMonth Experimental Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .