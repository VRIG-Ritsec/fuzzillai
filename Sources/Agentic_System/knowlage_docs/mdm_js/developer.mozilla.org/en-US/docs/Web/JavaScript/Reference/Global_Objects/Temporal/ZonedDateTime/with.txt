Temporal.ZonedDateTime.prototype.with() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Temporal Temporal.ZonedDateTime with() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) Temporal.ZonedDateTime.prototype.with() Limited availability This feature is not Baseline because it does not work in some of the most widely-used browsers. Learn more See full compatibility Report feedback Experimental: This is an experimental technology Check the Browser compatibility table carefully before using this in production. The with() method of Temporal.ZonedDateTime instances returns a new Temporal.ZonedDateTime object representing this date-time with some fields replaced by new values. Because all Temporal objects are designed to be immutable, this method essentially functions as the setter for the date-time's fields. To replace the calendarId property, use the withCalendar() method. To replace the timeZoneId property, use the withTimeZone() method. In this article Syntax Examples Specifications Browser compatibility See also Syntax js with(info) with(info, options) Parameters info An object containing at least one of the properties recognized by Temporal.ZonedDateTime.from() (except calendar and timeZone ): day , era and eraYear , hour , microsecond , millisecond , minute , month , monthCode , nanosecond , offset , second , year . Unspecified properties use the values from the original date-time. You only need to provide one of month or monthCode , and one of era and eraYear or year , and the other will be updated accordingly. options Optional An object containing some or all of the following properties (in the order they are retrieved and validated): disambiguation Optional What to do if the local date-time is ambiguous in the given time zone (there are more than one instants with such local time, or the local time does not exist). Possible values are "compatible" , "earlier" , "later" , and "reject" . Defaults to "compatible" . For more information about these values, see ambiguity and gaps from local time to UTC time . offset Optional What to do if the offset is explicitly provided in info but the offset is invalid for the given time zone in the given local time. Possible values are "use" , "ignore" , "reject" , and "prefer" . Defaults to "prefer" . For more information about these values, see offset ambiguity . overflow Optional A string specifying the behavior when a date component is out of range (when using the object info ). Possible values are: "constrain" (default) The date component is clamped to the valid range. "reject" A RangeError is thrown if the date component is out of range. Return value A new Temporal.ZonedDateTime object, where the fields specified in info that are not undefined are replaced by the corresponding values, and the rest of the fields are copied from the original date-time. Exceptions TypeError Thrown in one of the following cases: info is not an object. options is not an object or undefined . RangeError Thrown in one of the following cases: The provided properties that specify the same component are inconsistent. The provided non-numerical properties are not valid; for example, if monthCode is never a valid month code in this calendar. The provided numerical properties are out of range, and options.overflow is set to "reject" . The wall-clock time represented by the provided properties is ambiguous in the time zone, and options.disambiguation is set to "reject" . The result is not in the representable range , which is ±10 8 days, or about ±273,972.6 years, from the Unix epoch. Examples Using with() js const zdt = Temporal.ZonedDateTime.from( "2021-07-01T12:34:56[America/New_York]", ); const newZDT = zdt.with({ hour: 13 }); console.log(newZDT.toString()); // "2021-07-01T13:34:56-04:00[America/New_York]" For more examples, see the documentation for the individual properties that can be set using with() . Offset during date changes By default, the offset option is set to "prefer" , which means we use the original offset (or that provided in info ) if it's valid, and recalculate otherwise. This means if you set to another date that has a different offset due to a DST transition, the offset will be recalculated: js const zdt = Temporal.ZonedDateTime.from( "2021-07-01T12:00:00-04:00[America/New_York]", ); const newZDT = zdt.with({ month: 12 }); // The offset is recalculated to -05:00 console.log(newZDT.toString()); // "2021-12-01T12:00:00-05:00[America/New_York]" And if you set the time to within the DST transition, the offset is used to resolve the ambiguity: js const zdt = Temporal.ZonedDateTime.from( "2024-11-02T01:05:00-04:00[America/New_York]", ); const newZDT = zdt.with({ day: 3 }); console.log(newZDT.toString()); // "2024-11-03T01:05:00-04:00[America/New_York]" const zdt2 = Temporal.ZonedDateTime.from( "2024-11-04T01:05:00-05:00[America/New_York]", ); const newZDT2 = zdt2.with({ day: 3 }); console.log(newZDT2.toString()); // "2024-11-03T01:05:00-05:00[America/New_York]" If you use offset: "use" , then the offset will be used as-is to obtain the exact time first, and then recalculate the offset: js const zdt = Temporal.ZonedDateTime.from( "2021-07-01T12:00:00-04:00[America/New_York]", ); const newZDT = zdt.with({ month: 12 }, { offset: "use" }); // The offset is recalculated to -05:00, but the wall-clock time changes console.log(newZDT.toString()); // "2021-12-01T11:00:00-05:00[America/New_York]" You can also set offset: "reject" to throw an error if the original offset is invalid, forcing an explicit new offset to be specified: js const zdt = Temporal.ZonedDateTime.from( "2021-07-01T12:00:00-04:00[America/New_York]", ); zdt.with({ month: 12 }, { offset: "reject" }); // RangeError: date-time can't be represented in the given time zone zdt.with({ month: 12, offset: "-05:00" }, { offset: "reject" }).toString(); // "2021-12-01T12:00:00-05:00[America/New_York]" Specifications Specification Temporal # sec-temporal.zoneddatetime.prototype.with Browser compatibility Loading… See also Temporal.ZonedDateTime Temporal.ZonedDateTime.prototype.withCalendar() Temporal.ZonedDateTime.prototype.withTimeZone() Temporal.ZonedDateTime.prototype.withPlainTime() Temporal.ZonedDateTime.from() Temporal.ZonedDateTime.prototype.add() Temporal.ZonedDateTime.prototype.subtract() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Temporal .ZonedDateTime Experimental Constructor Temporal .ZonedDateTime() Experimental Static methods compare() Experimental from() Experimental Instance methods add() Experimental equals() Experimental getTimeZoneTransition() Experimental round() Experimental since() Experimental startOfDay() Experimental subtract() Experimental toInstant() Experimental toJSON() Experimental toLocaleString() Experimental toPlainDate() Experimental toPlainDateTime() Experimental toPlainTime() Experimental toString() Experimental until() Experimental valueOf() Experimental with() Experimental withCalendar() Experimental withPlainTime() Experimental withTimeZone() Experimental Instance properties calendarId Experimental day Experimental dayOfWeek Experimental dayOfYear Experimental daysInMonth Experimental daysInWeek Experimental daysInYear Experimental epochMilliseconds Experimental epochNanoseconds Experimental era Experimental eraYear Experimental hour Experimental hoursInDay Experimental inLeapYear Experimental microsecond Experimental millisecond Experimental minute Experimental month Experimental monthCode Experimental monthsInYear Experimental nanosecond Experimental offset Experimental offsetNanoseconds Experimental second Experimental timeZoneId Experimental weekOfYear Experimental year Experimental yearOfWeek Experimental Inheritance Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages Temporal Experimental Temporal .Duration Experimental Temporal .Instant Experimental Temporal .Now Experimental Temporal .PlainDate Experimental Temporal .PlainDateTime Experimental Temporal .PlainMonthDay Experimental Temporal .PlainTime Experimental Temporal .PlainYearMonth Experimental Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .