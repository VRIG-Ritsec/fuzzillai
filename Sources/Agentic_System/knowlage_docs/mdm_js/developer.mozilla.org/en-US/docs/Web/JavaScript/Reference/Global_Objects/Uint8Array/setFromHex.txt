Uint8Array.prototype.setFromHex() - JavaScript | MDN Skip to main content Skip to search MDN HTML HTML: Markup language HTML reference Elements Global attributes Attributes See all… HTML guides Responsive images HTML cheatsheet Date & time formats See all… Markup languages SVG MathML XML CSS CSS: Styling language CSS reference Properties Selectors At-rules Values & units See all… CSS guides Box model Animations Flexbox Colors See all… Layout cookbook Column layouts Centering an element Card component See all… JavaScript JS JavaScript: Scripting language JS reference Standard built-in objects Expressions & operators Statements & declarations Functions See all… JS guides Control flow & error handing Loops and iteration Working with objects Using classes See all… Web APIs Web APIs: Programming interfaces Web API reference File system API Fetch API Geolocation API HTML DOM API Push API Service worker API See all… Web API guides Using the Web animation API Using the Fetch API Working with the History API Using the Web speech API Using web workers All All web technology Technologies Accessibility HTTP URI Web extensions WebAssembly WebDriver See all… Topics Media Performance Privacy Security Progressive web apps Learn Learn web development Frontend developer course Getting started Common questions Curriculum Learn HTML Introduction to HTML Getting started with HTML Learn CSS What is CSS Getting started with CSS Learn JavaScript How to use data attributes Add JavaScript to your web page Tools Discover our tools Playground HTTP Observatory Border-image generator Border-radius generator Box-shadow generator Color format converter Color mixer Shape generator About Get to know MDN better About MDN Advertise with us Community MDN on GitHub Blog Toggle sidebar Web JavaScript Reference Standard built-in objects Uint8Array setFromHex() Theme OS default Light Dark English (US) Remember language Learn more Deutsch English (US) 日本語 Uint8Array.prototype.setFromHex() Baseline 2025 Newly available Since ⁨September 2025⁩, this feature works across the latest devices and browser versions. This feature might not work in older devices or browsers. Learn more See full compatibility Report feedback The setFromHex() method of Uint8Array instances populates this Uint8Array object with bytes from a hex-encoded string, returning an object indicating how many bytes were read and written. This method parses the string into a byte array. To convert the string into a single number, use the parseInt() function with radix set to 16 instead. In this article Syntax Examples Specifications Browser compatibility See also Syntax js setFromHex(string) Parameters string A hexadecimal string encoding bytes to write into a Uint8Array . The string must: Have an even number of characters because two characters encode one byte. Only contain characters in the hexadecimal alphabet, which includes 0–9 and A–F (case-insensitive). Not contain whitespace (unlike Uint8Array.prototype.setFromBase64() ). Note that the string is only read up to the point where the array is filled, so any invalid hex syntax after that point is ignored. Return value An object containing the following properties: read The number of hex characters read from the input string. If the decoded data fits into the array, it is the length of the input string: otherwise, it is the number of complete hex characters that fit into the array. written The number of bytes written to the Uint8Array . Will never be greater than this Uint8Array 's byteLength . Exceptions SyntaxError Thrown if the input string contains characters outside the hex alphabet, or its length is odd. TypeError Thrown if the input string is not a string. Examples Decoding a hexadecimal string This example decodes a hexadecimal string into an existing Uint8Array . js const uint8Array = new Uint8Array(8); const result = uint8Array.setFromHex("cafed00d"); console.log(result); // { read: 8, written: 4 } console.log(uint8Array); // Uint8Array(8) [202, 254, 208, 13, 0, 0, 0, 0] Decoding a big string into a small array If the string contains more data than the array can hold, the method will only write as many bytes as the array can hold. js const uint8Array = new Uint8Array(4); const result = uint8Array.setFromHex("cafed00d-some random stuff"); console.log(result); // { read: 8, written: 4 } console.log(uint8Array); // Uint8Array(4) [202, 254, 208, 13] Excess characters are ignored, even if they are invalid. However the total length of the input string must be even. Setting data at a specific offset The setFromHex() method always starts writing at the beginning of the Uint8Array . If you want to write to the middle of the array, you can write to a TypedArray.prototype.subarray() instead. js const uint8Array = new Uint8Array(8); // Start writing at offset 2 const result = uint8Array.subarray(2).setFromHex("cafed00d"); console.log(result); // { read: 8, written: 4 } console.log(uint8Array); // Uint8Array(8) [0, 0, 202, 254, 208, 13, 0, 0] Specifications Specification Uint8Array to/from base64 # sec-uint8array.prototype.setfromhex Browser compatibility Loading… See also Polyfill of Uint8Array.prototype.setFromHex in core-js es-shims polyfill of Uint8Array.prototype.setFromHex Uint8Array Uint8Array.fromHex() Uint8Array.prototype.toHex() parseInt() Help improve MDN Was this page helpful to you? Yes No Learn how to contribute This page was last modified on ⁨Jul 10, 2025⁩ by MDN contributors . View this page on GitHub • Report a problem with this content Filter sidebar Standard built-in objects Uint8Array Constructor Uint8Array() Static methods fromBase64() fromHex() Instance methods setFromBase64() setFromHex() toBase64() toHex() Inheritance TypedArray Static methods from() of() Static properties BYTES_PER_ELEMENT [Symbol .species] Instance methods at() copyWithin() entries() every() fill() filter() find() findIndex() findLast() findLastIndex() forEach() includes() indexOf() join() keys() lastIndexOf() map() reduce() reduceRight() reverse() set() slice() some() sort() subarray() toLocaleString() toReversed() toSorted() toString() values() with() [Symbol .iterator]() Instance properties buffer byteLength byteOffset length Object/Function Static methods apply() bind() call() toString() [Symbol .hasInstance]() Static properties displayName Non-standard length name prototype arguments Non-standard Deprecated caller Non-standard Deprecated Instance methods __defineGetter__() Deprecated __defineSetter__() Deprecated __lookupGetter__() Deprecated __lookupSetter__() Deprecated hasOwnProperty() isPrototypeOf() propertyIsEnumerable() toLocaleString() toString() valueOf() Instance properties __proto__ Deprecated constructor Related pages BigInt64Array BigUint64Array Float16Array Float32Array Float64Array Int8Array Int16Array Int32Array Uint8ClampedArray Uint16Array Uint32Array Your blueprint for a better internet. MDN About Blog Mozilla careers Advertise with us MDN Plus Product help Contribute MDN Community Community resources Writing guidelines MDN Discord MDN on GitHub Developers Web technologies Learn web development Guides Tutorials Glossary Hacks blog Website Privacy Notice Telemetry Settings Legal Community Participation Guidelines Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation . Portions of this content are ©1998–⁨2025⁩ by individual mozilla.org contributors. Content available under a Creative Commons license .