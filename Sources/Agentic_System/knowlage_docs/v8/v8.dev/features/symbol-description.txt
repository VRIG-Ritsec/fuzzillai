Symbol.prototype.description ¬∑ V8 V8 Show navigation Home Blog Docs Tools JS/Wasm features Research Symbol.prototype.description Published 25 June 2019 ¬∑ Tagged with ECMAScript ES2019 JavaScript Symbol s can be given a description upon creation: const symbol = Symbol ( 'foo' ) ; // ^^^^^ Previously, the only way to access this description programmatically was indirectly through Symbol.prototype.toString() : const symbol = Symbol ( 'foo' ) ; // ^^^^^ symbol . toString ( ) ; // ‚Üí 'Symbol(foo)' // ^^^ symbol . toString ( ) . slice ( 7 , - 1 ) ; // ü§î // ‚Üí 'foo' However, the code is slightly magical-looking, not very self-explanatory, and violates the ‚Äúexpress intent, not implementation‚Äù principle. The above technique also doesn‚Äôt let you distinguish between a symbol with no description (i.e. Symbol() ) and a symbol with the empty string as its description (i.e. Symbol('') ). The new Symbol.prototype.description getter provides a more ergonomic way of accessing the description of a Symbol : const symbol = Symbol ( 'foo' ) ; // ^^^^^ symbol . description ; // ‚Üí 'foo' For Symbol s without a description, the getter returns undefined : const symbol = Symbol ( ) ; symbol . description ; // ‚Üí undefined Symbol.prototype.description support # Chrome: supported since version 70 Firefox: supported since version 63 Safari: supported since version 12.1 Node.js: supported since version 12 Babel: supported about this feature support listing Posted by Mathias Bynens ( @mathias ). Retweet this article! Branding Terms Privacy Twitter Edit this page on GitHub Except as otherwise noted, any code samples from the V8 project are licensed under V8‚Äôs BSD-style license . Other content on this page is licensed under the Creative Commons Attribution 3.0 License . For details, see our site policies .