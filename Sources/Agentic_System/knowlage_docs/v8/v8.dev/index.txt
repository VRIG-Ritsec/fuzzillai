V8 JavaScript engine V8 Show navigation Home Blog Docs Tools JS/Wasm features Research What is V8? V8 is Google’s open source high-performance JavaScript and WebAssembly engine, written in C++. It is used in Chrome and in Node.js, among others. It implements ECMAScript and WebAssembly , and runs on Windows, macOS, and Linux systems that use x64, IA-32, or ARM processors. V8 can be embedded into any C++ application. Latest posts and feature explainers How we made JSON.stringify more than twice as fast 04 August 2025 internals Speculative Optimizations for WebAssembly using Deopts and Inlining 24 June 2025 WebAssembly internals JavaScript's New Superpower: Explicit Resource Management 09 May 2025 ECMAScript Giving V8 a Heads-Up: Faster JavaScript Startup with Explicit Compile Hints 29 April 2025 JavaScript Land ahoy: leaving the Sea of Nodes 25 March 2025 JavaScript internals Turbocharging V8 with mutable heap numbers 25 February 2025 JavaScript benchmarks internals Introducing the WebAssembly JavaScript Promise Integration API 01 July 2024 WebAssembly WebAssembly JSPI has a new API 04 June 2024 WebAssembly The V8 Sandbox 04 April 2024 security Iterator helpers 27 March 2024 ECMAScript More articles can be found in the blog archive and the features section . Branding Terms Privacy Twitter Edit this page on GitHub Except as otherwise noted, any code samples from the V8 project are licensed under V8’s BSD-style license . Other content on this page is licensed under the Creative Commons Attribution 3.0 License . For details, see our site policies .