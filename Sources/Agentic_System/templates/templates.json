{
  "Codegen100": {
    "ProgramTemplateName": "Codegen100",
    "ProgramTemplateSwift": "b in\n        b.buildPrefix()\n        // Go wild.\n        b.build(n: 100)",
    "ProgramTemplateFuzzIL": "const v0 = [3.856950533271881];\nfunction F1() {\n    if (!new.target) { throw 'must be called with new'; }\n    this.a = v0;\n}\nconst v3 = new F1();\nconst v4 = [-5191,-1073741824,61809,5];\n[2147483647,30214,0,7,-4294967295,603468744];\n[v0,v4,v3,[6,52799,64125,9,-256,8,-4294967297],F1];\nclass C8 extends F1 {\n    set b(a10) {\n        const v11 = { h: this };\n    }\n}\nnew C8();\nnew C8();\nnew C8();\nconst v15 = new C8();\nclass C16 extends F1 {\n    static #o(a18, a19, a20) {\n        const v21 = { 0: a19 };\n        return v15;\n    }\n}\nnew C16();\nnew C16();\nclass C24 {\n}\nfunction F26(a28) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.c = a28;\n    this.e = a28;\n}\nnew F26(Int16Array);\nnew Uint8Array(256);\nconst v33 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\nclass C34 {\n    static [v33]() {\n        const v36 = (a37, a38) => {\n        };\n        return this;\n    }\n}\nnew C34();\nfunction f40() {\n}\nconst v41 = [f40];\nfunction F43(a45) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = v41;\n    this.f = 1;\n}\nasync function* f46(a47, a48, a49, a50) {\n    return a49;\n}\nfunction f52(a53) {\n    return \"boolean\";\n}\nconst v55 = `function${false}mm`;\nclass C56 {\n    static [v33]() {\n        const v58 = (a59, a60) => {\n        };\n        return this;\n    }\n}\nnew C56();\nnew Int32Array(2373);\nconst v65 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\nclass C66 {\n    static [v65]() {\n        const v68 = (a69, a70) => {\n        };\n        return this;\n    }\n}\nnew C66();\nfunction F72(a74, a75, a76) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = a74;\n    this.d = a74;\n}\nfunction f77() {\n}\nconst t84 = {};\nt84.c = 1132784457;\nnew Int32Array(2951);\nconst v82 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\nclass C83 {\n    static [v82]() {\n        const v85 = (a86, a87) => {\n        };\n        return this;\n    }\n}\nconst v90 = new Int32Array(2951);\nfunction f91() {\n}\nconst v92 = [f91];\nfunction F94(a96) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = v92;\n    this.f = 1;\n}\nv55.g = C8;\nfor (let v97 = 0; v97 < 50; v97++) {\n}\nasync function* f98(a99, a100, a101, a102) {\n    return a101;\n}\nfunction f103(a104) {\n}\nfunction f105() {\n}\nv4.e = v90;\nfunction F106(a108) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.c = a108;\n    this.e = a108;\n}\nconst v109 = new F106(F106);\nasync function* f111(a112, a113, a114, a115) {\n    return a114;\n}\nf111(F106, v109, f111, 2373);\n"
  },
  "JIT2Functions": {
    "ProgramTemplateName": "JIT2Functions",
    "ProgramTemplateSwift": "b in\n        let smallCodeBlockSize = 5\n        let numIterations = 100\n\n        // Start with a random prefix and some random code.\n        b.buildPrefix()\n        b.build(n: smallCodeBlockSize)\n\n        // Generate a larger function\n        let f1 = b.buildPlainFunction(with: b.randomParameters()) { args in\n            assert(args.count > 0)\n            // Generate (larger) function body\n            b.build(n: 20)\n            b.doReturn(b.randomJsVariable())",
    "ProgramTemplateFuzzIL": "const v0 = [];\nconst v3 = new Float64Array(6);\nfunction F4(a6) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = a6;\n}\nconst v7 = new F4(v3);\nnew F4(6);\n[-0.48068540052100417,-1000000000000.0,369.9460765409199,419.2323165046728,-1.0,-2.2412592629927293,2.220446049250313e-16];\nconst v12 = new Int8Array(12);\nconst v16 = new Float32Array(670);\nlet v17;\ntry { v17 = Float64Array(v7, -65536, 670); } catch (e) {}\nconst v18 = v17?.[12];\nconst v22 = { execution: \"async\", type: \"major\" };\nconst v23 = gc(v22);\nfunction f24(a25, a26, a27) {\n    function f28() {\n    }\n    const v29 = [f28];\n    function F31(a33) {\n        if (!new.target) { throw 'must be called with new'; }\n        this.g = v29;\n        this.f = 1;\n    }\n    const v34 = class {\n        #n(a36, a37, a38, a39) {\n            this.#n(a38, this);\n            return F31;\n        }\n    }\n    new v34();\n    function f42(a43) {\n    }\n    function f44() {\n    }\n    const v45 = [];\n    function F46(a48, a49, a50) {\n        if (!new.target) { throw 'must be called with new'; }\n        this.g = a48;\n        this.d = a48;\n    }\n    class C51 extends f28 {\n        [F46](a53, a54, a55, a56) {\n            return v45;\n        }\n        #b;\n        get g() {\n            return this;\n        }\n    }\n    return a25;\n}\nfunction f58(a59, a60) {\n    class C61 {\n    }\n    new Int32Array(2951);\n    function F66(a68) {\n        if (!new.target) { throw 'must be called with new'; }\n        this.c = a68;\n        this.e = a68;\n    }\n    new F66(Int16Array);\n    const v70 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\n    class C71 {\n        static [v70]() {\n            const v73 = (a74, a75) => {\n            };\n            return this;\n        }\n    }\n    new C71();\n    return C61;\n}\nasync function* f77(a78, a79) {\n    const v82 = Symbol.asyncDispose;\n    const v84 = {\n        value: a79,\n        [v82]() {\n            return this;\n        },\n    };\n    await using v85 = v84;\n    await v3;\n    yield* [Int8Array,v84,v12,v23];\n    return v12;\n}\nf77(12, -65536);\nfor (let v89 = 0; v89 < 100; v89++) {\n    f24(v89, v18, v89);\n}\nfor (let v91 = 0; v91 < 100; v91++) {\n    f58(v91, 670);\n}\nfunction f93(a94, a95, a96, a97) {\n    const v112 = {\n        [\"major\"](a99, a100) {\n            this[4] = v0;\n            function f101(a102, a103) {\n                const t2 = Intl.Segmenter;\n                const v107 = new t2(\"he\");\n                return v107;\n            }\n            f101(a94, a97);\n            const v109 = {\n                apply: f101,\n                construct: f101,\n                defineProperty: f101,\n                deleteProperty: f24,\n                get: f24,\n                getOwnPropertyDescriptor: f77,\n                getPrototypeOf: f101,\n                has: f101,\n                isExtensible: f101,\n                preventExtensions: f101,\n                set: f24,\n                setPrototypeOf: f24,\n            };\n            new Proxy(this, v109);\n            return a95;\n        },\n    };\n    return v112;\n}\nconst v113 = f93(6, 670, 670, v22);\nconst v114 = f93(12, v17, 12, v12);\nconst v115 = f93(v17, 12, 670, v16);\nconst v116 = f93(12, 12, v18, v23);\nconst v117 = f93(-65536, 12, v17, v12);\nf93(v18, 12, 12, f93);\nf58(v23, -65536);\nconst v120 = f24(6, Int8Array, 12);\nfor (let v121 = 0; v121 < 100; v121++) {\n    f24(v121, f93, 670);\n}\nfor (let v123 = 0; v123 < 100; v123++) {\n    f58(v117, -65536);\n}\nfunction f125(a126, a127, a128, a129) {\n    const v139 = {\n        [f93](a131, a132, a133) {\n            try {\n            } catch(e134) {\n            }\n            super[v3];\n            let [,v136,v137,v138] = v17;\n            return v3;\n        },\n        [v116]: a128,\n    };\n    return v139;\n}\nconst v140 = f125(6, v120, v113, 6);\nf125(-65536, v120, v140, v17);\nf125(670, v120, v114, 670);\nf125(v120, -65536, v115, -65536);\nf125(12, v120, v113, v18);\nf125(-65536, 670, f125(v18, 6, v114, 670), -65536);\nf125(-65536, 670, v18, 12);\nf125(12, 6, v140, 6);\nf24(-65536, f125(6, 6, v22, 12), -65536);\nf58(v12, 12);\n"
  },
  "JITTrickyFunction": {
    "ProgramTemplateName": "JITTrickyFunction",
    "ProgramTemplateSwift": "b in\n        // This templates generates functions that behave differently in some of the iterations.\n        // The functions will essentially look like this:\n        //\n        //     function f(arg1, arg2, i) {\n        //         if (i == N) {\n        //             // do stuff\n        //         }\n        //         // do stuff\n        //     }\n        //\n        // Or like this:\n        //\n        //     function f(arg1, arg2, i) {\n        //         if (i % N == 0) {\n        //             // do stuff\n        //         }\n        //         // do stuff\n        //     }\n        //\n        let smallCodeBlockSize = 5\n        let numIterations = 100\n\n        // Helper function to generate code that only runs during some of the iterations.\n        func buildCodeThatRunsInOnlySomeIterations(iterationCount: Variable) {\n            // Decide when to run the code.\n            let cond: Variable\n            if probability(0.5) {\n                // Run the code in one specific iteration\n                let selectedIteration = withEqualProbability({\n                    // Prefer to perform the action during one of the last iterations\n                    assert(numIterations > 10)\n                    return Int.random(in: (numIterations - 10)..<numIterations)",
    "ProgramTemplateFuzzIL": "function f0() {\n}\nfunction F2(a4) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.b = a4;\n}\nconst v5 = new F2(43361);\nconst v6 = new F2(F2);\nnew F2(43361);\nconst v8 = new F2(f0);\nconst v9 = [0.037300367277907975,1000000000000.0,-2.0,3.0,-643095.698275945,4.4219399638278383e+307,-1000000000.0,2.220446049250313e-16,-8.831799567319687e+307,2.2250738585072014e-308];\nclass C10 {\n    valueOf(a12, a13, a14) {\n        this[1582];\n        return v5;\n    }\n    set a(a17) {\n    }\n}\nnew C10();\nfunction f20(a21) {\n    return a21;\n}\nclass C22 extends f20 {\n    static {\n    }\n}\nfunction f24(a25, a26, a27, a28, a29) {\n    const v30 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\n    class C31 {\n        static [v30]() {\n            const v33 = (a34, a35) => {\n            };\n            return this;\n        }\n    }\n    new C31();\n    if ((a25 % 25) == 0) {\n        new Uint8Array(256);\n        async function* f44(a45, a46, a47, a48) {\n            return a47;\n        }\n    }\n    const v49 = [536870912,536870912];\n    const v52 = [v49,v49,-5.0,v49,\"boolean\"];\n    function F53(a55, a56, a57) {\n        if (!new.target) { throw 'must be called with new'; }\n        this.g = a55;\n        this.d = a55;\n    }\n    const v58 = new F53(v52, v49, v49);\n    return \"boolean\";\n    const v60 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\n    class C61 {\n        static [v60]() {\n            const v63 = (a64, a65) => {\n            };\n            return this;\n        }\n    }\n    const v66 = new C61();\n    const v67 = new C61();\n    const v70 = {\n        __proto__: v66,\n        [\"6\"]: C61,\n        a: v67,\n        get e() {\n            return v67;\n        },\n    };\n    return v58;\n}\nv8.g = v6;\nfunction f71() {\n}\nconst v72 = [f71];\nfunction F74(a76) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = v72;\n    this.f = 1;\n}\nconst v77 = class {\n    #n(a79, a80, a81, a82) {\n        this.#n(a81, this);\n        return F74;\n    }\n}\nfor (let i = 0; i < 2; i++) {\n    for (let v84 = 0; v84 < 100; v84++) {\n        if (v84 == 5) {\n            v77 << C10;\n            with (v6) {\n                SyntaxError = 5;\n            }\n        }\n        f24(v84, v77, f20, v6, v6);\n    }\n}\nfor (let v94 = 0; v94 < 100; v94++) {\n    if (v94 == 51) {\n        new Proxy(f20, {});\n        delete v9[289223705];\n    }\n    f24(v94, v5, v6, v5, v77);\n}\n"
  },
  "LazyDeoptFuzzer": {
    "ProgramTemplateName": "LazyDeoptFuzzer",
    "ProgramTemplateSwift": "b in\n    b.buildPrefix()\n    b.build(n: 30)\n\n    let counter = b.loadInt(0)\n    let max = b.loadInt(Int64.random(in: 2...5))\n    let params = b.randomParameters()\n    let dummyFct = b.buildPlainFunction(with: params) { args in\n        b.loadString(\"Dummy function for emitting recursive call\")",
    "ProgramTemplateFuzzIL": "const v0 = [9469073,-220560758,702221650,6,256,240642393];\nfunction F1() {\n    if (!new.target) { throw 'must be called with new'; }\n    this.c = v0;\n    this.f = v0;\n}\nconst v3 = new F1();\nconst v4 = new F1();\nnew F1();\nnew F1();\nconst v7 = [-694088874,128,11,16];\nconst v8 = [728.1587218133611,316502.5677300892,-2.220446049250313e-16,0.9103589541546195,274608.4304502236,-1000.0,Infinity,0.4313440915749286,-3.5277713984222236,0.8255782354172032];\nnew Uint16Array(0);\nclass C12 {\n    static get e() {\n        class C14 {\n        }\n    }\n}\nconst v15 = new C12();\nfunction F16(a18, a19, a20) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = a18;\n    this.d = a18;\n}\nconst v21 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\nclass C22 {\n    static [v21]() {\n        const v24 = (a25, a26) => {\n        };\n        return this;\n    }\n}\nconst v27 = new C22();\nconst v28 = new C22();\nconst v31 = {\n    __proto__: v27,\n    [\"6\"]: C22,\n    a: v28,\n    get e() {\n        return v28;\n    },\n};\nlet v32 = 0;\nfunction f34(a35, a36, a37) {\n}\nfunction f39(a40, a41, a42) {\n    function f43(a44) {\n    }\n    function F45(a47) {\n        if (!new.target) { throw 'must be called with new'; }\n        this.c = a47;\n        this.e = a47;\n    }\n    const v48 = new F45(F45);\n    class C49 {\n        static get e() {\n            class C51 {\n            }\n        }\n    }\n    const v52 = {};\n    v52.h = C49;\n    const v53 = v32 < 5;\n    if (v53) {\n        v32 = v32 + 1;\n        f34(1, 0, v52);\n    }\n    %DeoptimizeNow();;\n    const v57 = [v21,v3,a40,0,\"6\"];\n    function F58(a60, a61, a62) {\n        if (!new.target) { throw 'must be called with new'; }\n        this.e = a61;\n        this.g = a61;\n    }\n    const v63 = new F58(v4, a40, v7);\n    new F58(v15, a41, v48);\n    Object.defineProperty(v57, a40, { enumerable: true, get: f43, set: f43 });\n    let v65 = 0;\n    do {\n        v63.e **= a40;\n        switch (v63[v53] << f43) {\n        }\n        v65++;\n    } while (v65 < 10)\n    function f71() {\n        return 0;\n    }\n    C49 /= C12;\n    let v72 = 10;\n    for (; v72--;) {\n        async function* f74(a75, a76, a77, a78) {\n            await F45;\n            yield f74;\n            return f74;\n        }\n        try { f74(a42, v8, v65, v4); } catch (e) {}\n    }\n    return F1;\n}\nf34 = f39;\n%PrepareFunctionForOptimization(f39);\nf39(5, v32, v32);\n%OptimizeFunctionOnNextCall(f39);\nf39(5, v32, v32);\n"
  },
  "RegExpFuzzer": {
    "ProgramTemplateName": "RegExpFuzzer",
    "ProgramTemplateSwift": "b in\n    // Taken from: https://source.chromium.org/chromium/chromium/src/+/refs/heads/main:v8/test/fuzzer/regexp-builtins.cc;l=212;drc=a61b95c63b0b75c1cfe872d9c8cdf927c226046e\n    let twoByteSubjectString = \"f\\\\uD83D\\\\uDCA9ba\\\\u2603\"\n\n    let replacementCandidates = [\n      \"'X'\",\n      \"'$1$2$3'\",\n      \"'$$$&$`$\\\\'$1'\",\n      \"() => 'X'\",\n      \"(arg0, arg1, arg2, arg3, arg4) => arg0 + arg1 + arg2 + arg3 + arg4\",\n      \"() => 42\"\n    ]\n\n    let lastIndices = [\n      \"undefined\",  \"-1\",         \"0\",\n      \"1\",          \"2\",          \"3\",\n      \"4\",          \"5\",          \"6\",\n      \"7\",          \"8\",          \"9\",\n      \"50\",         \"4294967296\", \"2147483647\",\n      \"2147483648\", \"NaN\",        \"Not a Number\"\n    ]\n\n    let f = b.buildPlainFunction(with: .parameters(n: 0)) { _ in\n        let (pattern, flags) = b.randomRegExpPatternAndFlags()\n        let regExpVar = b.loadRegExp(pattern, flags)\n\n        let lastIndex = chooseUniform(from: lastIndices)\n        let lastIndexString = b.loadString(lastIndex)\n\n        b.setProperty(\"lastIndex\", of: regExpVar, to: lastIndexString)\n\n        let subjectVar: Variable\n\n        if probability(0.1) {\n            subjectVar = b.loadString(twoByteSubjectString)",
    "ProgramTemplateFuzzIL": "function f0() {\n    const v1 = /Q/uymig;\n    v1.lastIndex = \"2147483647\";\n    let v4 = null;\n    try {\n        v4 = v1.exec(\"number\");\n    } catch(e7) {\n    }\n    let v8 = 0;\n    do {\n        Object.prototype = Object;\n        if (true) {\n        } else {\n        }\n        v8++;\n    } while (v8 < 9)\n    return v4;\n}\n%SetForceSlowPath(false);\nf0();\nf0();\n%SetForceSlowPath(true);\nconst v17 = f0();\n%SetForceSlowPath(false);\nfunction f18(a19) {\n    return v17;\n}\nconst v20 = class extends f18 {\n    c;\n    static get b() {\n        super[this];\n        v20?.[Symbol.matchAll];\n        return this;\n    }\n    constructor(a28, a29, a30) {\n        super(a30);\n    }\n}\n"
  },
  "JSONFuzzer": {
    "ProgramTemplateName": "JSONFuzzer",
    "ProgramTemplateSwift": "b in\n        b.buildPrefix()\n\n        // Create some random values that will be JSON.stringified below.\n        b.build(n: 25)\n\n        // Generate random JSON payloads by stringifying random values\n        let JSON = b.createNamedVariable(forBuiltin: \"JSON\")\n        var jsonPayloads = [Variable]()\n        for _ in 0..<Int.random(in: 1...5) {\n            let json = b.callMethod(\"stringify\", on: JSON, withArgs: [b.randomJsVariable()])\n            jsonPayloads.append(json)",
    "ProgramTemplateFuzzIL": "new Float64Array(512);\n/(W\\u0060)/ui;\n[-3.0,3.0756416307132266,1000000.0,9.319539260632325];\n[1.7976931348623157e+308,-2.2250738585072014e-308];\nclass C11 {\n    static get e() {\n        class C13 {\n        }\n    }\n}\nconst v15 = {};\nv15.h = C11;\nv15.c = 1132784457;\nconst v16 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\nclass C17 {\n    static [v16]() {\n        const v19 = (a20, a21) => {\n        };\n        return this;\n    }\n}\nfunction f23(a24) {\n    return \"boolean\";\n}\nlet v25 = 0;\nfor (let i = 0; i < 25; i++) {\n    v25++;\n    for (let v27 = 0; v27 < 50; v27++) {\n    }\n}\nconst v29 = JSON.stringify(v25);\nconst v30 = JSON.stringify(v15);\nconst v31 = JSON.stringify(512);\nconst v32 = JSON.stringify(v16);\nconst v33 = JSON.stringify(v32);\nfunction f34(a35) {\n    function f36(a37) {\n        return Math.floor(0.23126326640454387 * a37);\n    }\n    const v44 = f36(a35.length);\n    const v46 = a35.substring(0, v44);\n    const v49 = a35.substring(v44 + 1);\n    return (v46 + String.fromCharCode(a35.charCodeAt(v44) ^ 119)) + v49;\n}\nconst v56 = f34(v29);\ntry { JSON.parse(v30); } catch (e) {}\ntry { JSON.parse(v56); } catch (e) {}\ntry { JSON.parse(v56); } catch (e) {}\ntry { JSON.parse(v32); } catch (e) {}\ntry { JSON.parse(v30); } catch (e) {}\ntry { JSON.parse(v33); } catch (e) {}\ntry { JSON.parse(v33); } catch (e) {}\ntry { JSON.parse(v31); } catch (e) {}\ntry { JSON.parse(v56); } catch (e) {}\ntry { JSON.parse(v32); } catch (e) {}\nfunction F68(a70) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.c = a70;\n    this.e = a70;\n}\nnew F68(Int16Array);\nconst v72 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\nclass C73 {\n    static [v72]() {\n        const v75 = (a76, a77) => {\n        };\n        return this;\n    }\n}\nconst v78 = new C73();\nconst v79 = new C73();\nconst v81 = {\n    __proto__: v78,\n    [v32]: C73,\n    a: v79,\n    get e() {\n        return v79;\n    },\n};\nclass C82 {\n    static get e() {\n        class C84 {\n        }\n    }\n}\n"
  },
  "JIT1Function": {
    "ProgramTemplateName": "JIT1Function",
    "ProgramTemplateSwift": "b in\n        let smallCodeBlockSize = 5\n        let numIterations = 100\n\n        // Start with a random prefix and some random code.\n        b.buildPrefix()\n        b.build(n: smallCodeBlockSize)\n\n        // Generate a larger function\n        let f = b.buildPlainFunction(with: b.randomParameters()) { args in\n            assert(args.count > 0)\n            // Generate (larger) function body\n            b.build(n: 30)\n            b.doReturn(b.randomJsVariable())",
    "ProgramTemplateFuzzIL": "const v2 = new Map();\nconst v3 = [Map,Map,v2];\nconst v4 = [731960.1920759089,-0.0,0.34539315489009215,7.686104880371452e+307];\nconst v5 = [2.2250738585072014e-308,-1.0,5.0,0.4643615047149342,717.4655701402967,1.7372014019773605e+308,-1.6738197034902864e+308,4.784432816594109];\nnew Float64Array(147);\nnew Date();\nasync function* f12(a13, a14, a15, a16) {\n    return a15;\n}\nfunction F17(a19) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.c = a19;\n    this.e = a19;\n}\nconst v20 = new F17(F17);\nasync function* f21(a22, a23, a24, a25) {\n    return a24;\n}\nf21(F17, v20, f21, 147);\nfunction f27(a28, a29) {\n    const v31 = Symbol.iterator;\n    const v40 = {\n        [v31]() {\n            let v33 = 10;\n            const v39 = {\n                next() {\n                    v33--;\n                    const v37 = v33 == 0;\n                    return { done: v37, value: v33 };\n                },\n            };\n            return v39;\n        },\n    };\n    try { f12(1, v40, f12, v3); } catch (e) {}\n    Math.sqrt(174760161);\n    const v46 = (174760161 % v4) - v4;\n    let v47 = 174760161 ^ 174760161;\n    const v48 = +v46;\n    v4 + v46;\n    --v47;\n    return v48;\n}\nconst v52 = class extends v2.constructor {\n    set f(a54) {\n    }\n    83;\n}\nconst v55 = new v52();\nfor (let v56 = 0; v56 < 100; v56++) {\n    f27(v5, v5);\n}\nv4.includes(f12);\nlet {\"prototype\":v60,...v61} = Date;\nProxy = f27;\nf27(v61, v3);\nfor (let v64 = 0; v64 < 100; v64++) {\n    f27(v4, v3);\n}\nfunction f66(a67) {\n    return v55;\n}\nclass C68 extends f66 {\n    static p(a70, a71) {\n        return v55;\n    }\n}\nf27(v3, v5);\n"
  },
  "ValueSerializerFuzzer": {
    "ProgramTemplateName": "ValueSerializerFuzzer",
    "ProgramTemplateSwift": "b in\n    b.buildPrefix()\n\n    // Create some random values that can be serialized below.\n    b.build(n: 50)\n\n    // Load necessary builtins\n    let d8 = b.createNamedVariable(forBuiltin: \"d8\")\n    let serializer = b.getProperty(\"serializer\", of: d8)\n    let Uint8Array = b.createNamedVariable(forBuiltin: \"Uint8Array\")\n\n    // Serialize a random object\n    let content = b.callMethod(\"serialize\", on: serializer, withArgs: [b.randomJsVariable()])\n    let u8 = b.construct(Uint8Array, withArgs: [content])\n\n    // Choose a random byte to change\n    let index = Int64.random(in: 0..<100)\n\n    // Either flip or replace the byte\n    let newByte: Variable\n    if probability(0.5) {\n        let bit = b.loadInt(1 << Int.random(in: 0..<8))\n        let oldByte = b.getElement(index, of: u8)\n        newByte = b.binary(oldByte, bit, with: .Xor)",
    "ProgramTemplateFuzzIL": "const v1 = /A/vsg;\nconst v2 = [v1,v1,\"n\",v1];\nfunction f4() {\n    return v1;\n}\nfunction f5() {\n    return 133748.27592200134;\n}\nconst v9 = Symbol.iterator;\nconst v18 = {\n    [v9]() {\n        let v11 = 10;\n        const v17 = {\n            next() {\n                v11--;\n                const v15 = v11 == 0;\n                return { done: v15, value: v11 };\n            },\n        };\n        return v17;\n    },\n};\nconst v20 = [-2.0,-1000000000.0,-8.006520285202988,-3.0,9.18656777605381e+307,0.8484594488153092,2.2250738585072014e-308,157.32666699909578];\nconst v22 = [552.8689412603017,256n,256n,false];\nf4 -= f4;\nconst t25 = \"n\";\nt25.__proto__ = v20;\nfunction f24(a25) {\n    return a25;\n}\nclass C26 extends f24 {\n    static get g() {\n        try {\n        } catch(e28) {\n        } finally {\n        }\n        return this;\n    }\n    set a(a30) {\n        const v31 = [\"n\",256n,a30,a30];\n        for (let v32 = 0; v32 < 100; v32++) {\n            f5();\n        }\n        super[v18] = v31;\n        WebAssembly.Instance.prototype;\n        Object.defineProperty(v2, 3557609219, { writable: true, configurable: true, set: f24 });\n    }\n    f;\n    set e(a38) {\n    }\n    static set b(a40) {\n    }\n}\ntry {\n    (\"n\").charCodeAt(127);\n} catch(e43) {\n}\nfunction f44(a45, a46, a47) {\n    'use strict';\n    function f48(a49, a50, a51) {\n        return arguments;\n    }\n    let {\"f\":v55,\"length\":v56,...v57} = f48(256n, 0.19570777116103832);\n    let v58 = 0;\n    while (v58 < 6) {\n        v58++;\n    }\n    return false;\n}\ntry { f44(v22, v22, v18); } catch (e) {}\nconst v64 = d8.serializer;\nconst v66 = v64.serialize(v20);\nconst v67 = new Uint8Array(v66);\nv67[57] = 74;\nconst v69 = v64.deserialize(v66);\ntry { new v69(v67); } catch (e) {}\nfunction f72(a73) {\n    return a73;\n}\nclass C74 extends f72 {\n    #m(a76, a77) {\n        return f5;\n    }\n}\n"
  },
  "MapTransitionFuzzer": {
    "ProgramTemplateName": "MapTransitionFuzzer",
    "ProgramTemplateSwift": "b in\n    // This template is meant to stress the v8 Map transition mechanisms.\n    // Basically, it generates a bunch of CreateObject, GetProperty, SetProperty, FunctionDefinition,\n    // and CallFunction operations operating on a small set of objects and property names.\n\n    let propertyNames = b.fuzzer.environment.customProperties\n    assert(Set(propertyNames).isDisjoint(with: b.fuzzer.environment.customMethods))\n\n    // Use this as base object type. For one, this ensures that the initial map is stable.\n    // Moreover, this guarantees that when querying for this type, we will receive one of\n    // the objects we created and not e.g. a function (which is also an object).\n    assert(propertyNames.contains(\"a\"))\n    let objType = ILType.object(withProperties: [\"a\"])\n\n    // Helper function to pick random properties and values.\n    func randomProperties(in b: ProgramBuilder) -> ([String], [Variable]) {\n        if !b.hasVisibleVariables {\n            // Use integer values if there are no visible variables, which should be a decent fallback.\n            b.loadInt(b.randomInt())",
    "ProgramTemplateFuzzIL": "const v2 = { a: 6540, c: 6540, e: 6540, g: 6540 };\nconst v3 = { a: v2, b: 6540, f: 6540 };\nconst v5 = { a: -2.220446049250313e-16, b: -2.220446049250313e-16, e: v3, f: 6540 };\nv5.b = 256;\nv5.d = -2.220446049250313e-16;\nv5.b = v3;\nconst v11 = { a: -2.220446049250313e-16 };\nv5.d = v11;\nObject.defineProperty(v11, \"c\", { writable: true, enumerable: true, value: 65535 });\nconst v12 = v2.f;\nObject.defineProperty(v2, \"f\", { writable: true, configurable: true, value: v12 });\nv5.g = 6540;\nconst v13 = { a: 8.982228129201381 };\nconst v14 = v2.d;\nfunction f15(a16, a17, a18, a19) {\n    class C20 {\n        a = a16;\n        f = a16;\n        c = v14;\n        e = 65535;\n    }\n    new C20();\n    new C20();\n    const v23 = new C20();\n    return v23;\n}\nlet v24;\ntry { v24 = f15(v3, v14, v13, v2); } catch (e) {}\nlet v25;\ntry { v25 = f15(v13, v5, v3, 65535); } catch (e) {}\nlet v26;\ntry { v26 = f15(v13, v2, v3, v24); } catch (e) {}\nv2.g = -71.30195903387664;\nconst v27 = v5.h;\nObject.defineProperty(v5, \"a\", { writable: true, configurable: true, value: v14 });\nlet v28;\ntry { v28 = new f15(v12, v13, 256, 8.982228129201381); } catch (e) {}\nObject.defineProperty(v11, \"f\", { configurable: true, value: v28 });\nv13.f = v27;\nv13.f = v11;\nv13.f = v5;\nObject.defineProperty(v13, \"b\", { configurable: true, value: v12 });\nv5.e = f15;\nv5.f = 256;\nfor (let v29 = 0; v29 < 100; v29++) {\n    try { f15(v11, v13, v29, v29); } catch (e) {}\n}\nv5.g = v3;\nv5.e = v28;\nv11.f = v24;\nclass C31 extends f15 {\n    a = 65535;\n    c = v28;\n    b = v5;\n    g = 22.12168416079942;\n}\nconst v32 = new C31();\nconst v33 = new C31();\nconst v34 = new C31();\nv3.e = -71.30195903387664;\nObject.defineProperty(v33, \"g\", { writable: true, configurable: true, enumerable: true, value: v25 });\nlet v35;\ntry { v35 = f15(v3, v2, v33, 256); } catch (e) {}\nlet v36;\ntry { v36 = f15(v13, v11, v35, 22.12168416079942); } catch (e) {}\nclass C37 extends C31 {\n    a = v36;\n    g = v26;\n    f = v36;\n}\nconst v38 = new C37();\nconst v39 = new C37();\nconst v40 = new C37();\nv38.f = C31;\nv38.d = v12;\nv13.g = v32;\nv13.a = 65535;\nv39.g = C37;\nconst v41 = v13.d;\nv38.e;\nObject.defineProperty(v39, \"d\", { writable: true, configurable: true, value: v26 });\nv3.g = v11;\nv3.d = v24;\nv13.f = C31;\nv13.d = v34;\nfunction f43(a44, a45, a46, a47) {\n    return { a: 2147483648, b: v12, g: a45, h: v40 };\n}\nconst v49 = f43(v36, v34, v27, 22.12168416079942);\nconst v50 = f43(256, v2, v39, v41);\nconst v51 = f43(f15, f15, v12, v50);\ntry { new f43(v35, v51, v38, v14); } catch (e) {}\ntry { new f15(v2, v11, -2.220446049250313e-16, C37); } catch (e) {}\nconst v54 = v32.f;\nclass C55 extends f15 {\n    a = v54;\n    h = v34;\n}\nconst v56 = new C55();\nconst v57 = new C55();\nconst v58 = new C55();\nlet v59 = 0;\nwhile (v59 < 8) {\n    v59++;\n    Reflect.construct(C37, [], v24);\n}\n%HeapObjectVerify(v2);\n%HeapObjectVerify(v3);\n%HeapObjectVerify(v5);\n%HeapObjectVerify(v11);\n%HeapObjectVerify(v13);\n%HeapObjectVerify(v32);\n%HeapObjectVerify(v33);\n%HeapObjectVerify(v34);\n%HeapObjectVerify(v38);\n%HeapObjectVerify(v39);\n%HeapObjectVerify(v40);\n%HeapObjectVerify(v49);\n%HeapObjectVerify(v50);\n%HeapObjectVerify(v51);\n%HeapObjectVerify(v54);\n%HeapObjectVerify(v56);\n%HeapObjectVerify(v57);\n%HeapObjectVerify(v58);\n"
  },
  "Codegen50": {
    "ProgramTemplateName": "Codegen50",
    "ProgramTemplateSwift": "b in\n        b.buildPrefix()\n        // Go (a little less) wild.\n        b.build(n: 50)",
    "ProgramTemplateFuzzIL": "const v0 = [-51753,-16,5,1073741825];\nfunction F2(a4) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = -5;\n}\nconst v5 = new F2(-5);\nconst v7 = Symbol.iterator;\nconst v16 = {\n    [v7]() {\n        let v9 = 10;\n        const v15 = {\n            next() {\n                v9--;\n                const v13 = v9 == 0;\n                return { done: v13, value: v9 };\n            },\n        };\n        return v15;\n    },\n};\nfunction F17(a19, a20) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.a = -5;\n    this.g = -5;\n}\nconst v21 = new F17(v5, v5);\nconst v22 = new F17(-5, v21);\nnew F17(-5, F17);\nclass C25 {\n    #toString(a27, a28) {\n        return v0;\n    }\n    static c = F2;\n}\nnew C25();\nnew Float32Array(255);\nfunction F34(a36, a37, a38) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = a36;\n    this.d = a36;\n}\nfunction F39(a41) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.c = a41;\n    this.e = a41;\n}\nnew F39(F39);\nnew Int32Array(2951);\nnew Uint8Array(256);\nclass C49 {\n    static get e() {\n        class C51 {\n        }\n    }\n}\nconst v52 = {};\nasync function* f53(a54, a55, a56, a57) {\n    return a56;\n}\nv22.e = F34;\nconst v58 = (a59, a60) => {\n};\nasync function* f61(a62, a63, a64, a65) {\n    return a64;\n}\nnew Uint8Array(256);\nnew Set();\nnew Int32Array(256);\nclass C73 {\n    static get e() {\n        class C75 {\n        }\n    }\n}\nconst v76 = {};\nfunction f77(a78) {\n}\nfunction f79() {\n}\nconst v80 = [f79];\nfunction F82(a84) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = v80;\n    this.f = 1;\n}\nconst v85 = class {\n    #n(a87, a88, a89, a90) {\n        this.#n(a89, this);\n        return F82;\n    }\n}\n"
  },
  "FastApiCallFuzzer": {
    "ProgramTemplateName": "FastApiCallFuzzer",
    "ProgramTemplateSwift": "b in\n    b.buildPrefix()\n    b.build(n: 20)\n    let parameterCount = probability(0.5) ? 0 : Int.random(in: 1...4)\n\n    let f = b.buildPlainFunction(with: .parameters(n: parameterCount)) { args in\n        b.build(n: 10)\n        let target = fastCallables.randomElement()!\n        let apiObj = b.findOrGenerateType(target.group)\n        let functionSig = chooseUniform(from: b.methodSignatures(of: target.method, on: target.group))\n        let apiCall = b.callMethod(target.method, on: apiObj, withArgs: b.findOrGenerateArguments(forSignature: functionSig), guard: true)\n        b.doReturn(apiCall)",
    "ProgramTemplateFuzzIL": "const v0 = [];\nfunction f1() {\n    return v0;\n}\nconst v2 = [v0,f1,f1,v0,v0];\nconst v4 = Symbol.iterator;\nconst v13 = {\n    [v4]() {\n        let v6 = 10;\n        const v12 = {\n            next() {\n                v6--;\n                const v10 = v6 == 0;\n                return { done: v10, value: v6 };\n            },\n        };\n        return v12;\n    },\n};\nconst v16 = new Float32Array(1000);\nnew Float32Array(3097);\nconst v20 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\nclass C21 {\n    static [v20]() {\n        const v23 = (a24, a25) => {\n        };\n        return this;\n    }\n}\nconst v26 = (a27, a28) => {\n};\nconst v29 = [-476534.4640136058,-Infinity,NaN,1.3709393791105977e+308,-1.1077407557421264,-480778.917776937,1e-15,-4.0];\nclass C30 {\n    static [v29]() {\n        const v32 = (a33, a34) => {\n        };\n        return this;\n    }\n}\nnew C30();\nfunction F36(a38) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.c = a38;\n    this.e = a38;\n}\nfunction f39() {\n    const t46 = {};\n    t46.b = F36;\n    const v41 = {};\n    v41.b = F36;\n    v41.f = v20;\n    const v42 = {};\n    v42.b = F36;\n    v42.f = v20;\n    v42.d = v16;\n    const v43 = {};\n    v43.b = F36;\n    v43.f = v20;\n    v43.d = 3097;\n    const t59 = d8.test.FastCAPI;\n    const v47 = new t59();\n    let v48;\n    try { v48 = v47.throw_no_fallback(); } catch (e) {}\n    return v48;\n}\nf39();\n%PrepareFunctionForOptimization(f39);\nconst v50 = f39();\nf39();\n%OptimizeFunctionOnNextCall(f39);\nf39();\nfunction F53(a55) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.c = a55;\n    this.e = a55;\n}\nv2.e = v50;\nnew Uint8Array(256);\nconst v59 = [];\nfunction F61(a63, a64, a65) {\n    if (!new.target) { throw 'must be called with new'; }\n    this.g = a63;\n    this.d = a63;\n}\nfunction f66(a67) {\n    return \"boolean\";\n}\nclass C68 extends f66 {\n    [F61](a70, a71, a72, a73) {\n        return v59;\n    }\n    #b;\n    get g() {\n        return this;\n    }\n}\n"
  }
}