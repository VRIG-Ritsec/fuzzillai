// Minimizing 39A1CFE0-DD47-4E37-87E9-9A5745A1B091
[-335384.80657671404,-0.6171062077210561,-3.0,-9.502078435164349e+306,1.6024120884290232e+308];
[-373832.123721624,-1000.0,-4.482210560378615,1.0,1.7976931348623157e+308,2.2250738585072014e-308,-1000.0,-2.2250738585072014e-308,0.2619068003763766];
[9.88496591383436e+307,-0.0,9.645811590416322,-2.2250738585072014e-308,-882877.4954994294,NaN,7.540716606719762,781.9769262846953,-7.004326735250661e+306];
new Uint16Array(7);
const v8 = new Int8Array(3579);
new Int16Array(16);
[1000000.0,-1000000000000.0,-1000000.0,-1.7976931348623157e+308,-1.4398938706172224,-1000000000.0,-1000000.0,-1.7976931348623157e+308,-1000000000000.0];
[0.057767898988133726,1.1714986313434915e+308,4.0,-0.5556201059628041];
[-1e-15,-5.0,6.209336862016706e+307,462196.3209875589,-494.7240806280897,-1.1579574002262474e+308];
for (const v15 in v8) {
    const v18 = String.prototype.trimRight;
    const v19 = [];
    try { v18.apply(v15, v19); } catch (e) {}
}
[411.56632155988973,781229.1221361987,-1000000000000.0];
[-Infinity,1.7976931348623157e+308,-1.7476989495455016e+308,9.461323242010494,0.0,-1000.0,-2.220446049250313e-16];
[4.0,-2.2250738585072014e-308,0.05124546980983413];
// Program is interesting due to new coverage: 6581 newly discovered edges in the CFG of the target
// Imported program is interesting due to new coverage: 12480 newly discovered edges in the CFG of the target
// Imported program is interesting due to new coverage: 3588 newly discovered edges in the CFG of the target
